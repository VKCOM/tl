// Code generated by qtc from "qt_union.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

package tlcodegen

import "fmt"

import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

func (union *TypeRWUnion) StreamGenerateCode(qw422016 *qt422016.Writer, bytesVersion bool, directImports *DirectImports) {
	goName := addBytes(union.wr.goGlobalName, bytesVersion)
	asterisk := ifString(union.IsEnum, "", "*")
	natArgsDecl := formatNatArgsDecl(union.wr.NatParams)
	natArgsCall := formatNatArgsDeclCall(union.wr.NatParams)
	writeNeedsError := union.wr.hasErrorInWriteMethods

	union.streamgenerateEnumAlias(qw422016, bytesVersion)
	qw422016.N().S(`

type `)
	qw422016.N().S(goName)
	qw422016.N().S(` struct { `)
	union.streamgenerateFields(qw422016, bytesVersion, directImports)
	qw422016.N().S(` }

func (item `)
	qw422016.N().S(goName)
	qw422016.N().S(`) TLName() string { return _`)
	qw422016.N().S(addBytes(union.wr.goGlobalName, false))
	qw422016.N().S(`[item.index].TLName }
func (item `)
	qw422016.N().S(goName)
	qw422016.N().S(`) TLTag() uint32 { return _`)
	qw422016.N().S(addBytes(union.wr.goGlobalName, false))
	qw422016.N().S(`[item.index].TLTag }

func (item *`)
	qw422016.N().S(goName)
	qw422016.N().S(`) Reset() {`)
	if union.Fields[0].t.IsTrueType() {
		qw422016.N().S(`item.index = 0`)
	} else {
		qw422016.N().S(`item.ResetTo`)
		qw422016.N().S(union.Fields[0].goName)
		qw422016.N().S(`()`)
	}
	qw422016.N().S(`}
`)
	if union.wr.gen.options.GenerateRandomCode {
		qw422016.N().S(`func (item *`)
		qw422016.N().S(goName)
		qw422016.N().S(`) FillRandom(rg *basictl.RandGenerator`)
		qw422016.N().S(natArgsDecl)
		qw422016.N().S(`) {
    index := basictl.RandomUint(rg) % `)
		qw422016.N().D(len(union.Fields))
		qw422016.N().S(`
    switch index {
`)
		for i, field := range union.Fields {
			qw422016.N().S(`    case `)
			qw422016.N().D(i)
			qw422016.N().S(`:
        item.index = `)
			qw422016.N().D(i)
			qw422016.N().S(`
`)
			if field.t.IsTrueType() {
				continue
			}
			fieldTypeString := field.t.TypeString2(bytesVersion, directImports, union.wr.ins, false, false)

			if field.recursive {
				qw422016.N().S(`        if item.value`)
				qw422016.N().S(field.goName)
				qw422016.N().S(` == nil {
            var value `)
				qw422016.N().S(fieldTypeString)
				qw422016.N().S(`
            `)
				qw422016.N().S(field.t.TypeRandomCode(bytesVersion, directImports, union.wr.ins, "value", formatNatArgs(nil, field.natArgs), field.recursive))
				qw422016.N().S(`
            item.value`)
				qw422016.N().S(field.goName)
				qw422016.N().S(` = &value
        }
`)
			} else {
				qw422016.N().S(`        `)
				qw422016.N().S(field.t.TypeRandomCode(bytesVersion, directImports, union.wr.ins, fmt.Sprintf("item.value%s", field.goName),
					formatNatArgs(nil, field.natArgs), field.recursive))
				qw422016.N().S(`
`)
			}
		}
		qw422016.N().S(`    default:
    }
}
`)
	}
	qw422016.N().S(`
`)
	union.streamgenerateConstructorsBehavior(qw422016, bytesVersion, directImports)
	qw422016.N().S(`

func (item*`)
	qw422016.N().S(goName)
	qw422016.N().S(`) ReadBoxed(w []byte`)
	qw422016.N().S(natArgsDecl)
	qw422016.N().S(`) (_ []byte, err error) {
    var tag uint32
    if w, err = basictl.NatRead(w, &tag); err != nil {
        return w, err
    }
    switch tag {
`)
	for i, field := range union.Fields {
		qw422016.N().S(`    case `)
		qw422016.N().S(fmt.Sprintf("0x%08x", field.t.tlTag))
		qw422016.N().S(`:
        item.index = `)
		qw422016.N().D(i)
		qw422016.N().S(`
`)
		if field.t.IsTrueType() {
			qw422016.N().S(`        return w, nil
`)
			continue
		}
		fieldTypeString := field.t.TypeString2(bytesVersion, directImports, union.wr.ins, false, false)

		if field.recursive {
			qw422016.N().S(`        if item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` == nil {
            var value `)
			qw422016.N().S(fieldTypeString)
			qw422016.N().S(`
            item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` = &value
        }
`)
		}
		qw422016.N().S(`        `)
		qw422016.N().S(field.t.TypeReadingCode(bytesVersion, directImports, union.wr.ins, fmt.Sprintf("item.value%s", field.goName), true,
			formatNatArgs(nil, field.natArgs), field.recursive, true))
		qw422016.N().S(`
`)
	}
	qw422016.N().S(`    default:
        return w, `)
	qw422016.N().S(union.wr.gen.InternalPrefix())
	qw422016.N().S(`ErrorInvalidUnionTag(`)
	qw422016.N().Q(union.wr.tlName.String())
	qw422016.N().S(`, tag)
    }
}

// This method is general version of WriteBoxed, use it instead!
func (item *`)
	qw422016.N().S(goName)
	qw422016.N().S(`) WriteBoxedGeneral(w []byte`)
	qw422016.N().S(natArgsDecl)
	qw422016.N().S(`) (_ []byte, err error) {
`)
	if writeNeedsError {
		qw422016.N().S(`    return item.WriteBoxed(w`)
		qw422016.N().S(natArgsCall)
		qw422016.N().S(`)
`)
	} else {
		qw422016.N().S(`    return item.WriteBoxed(w`)
		qw422016.N().S(natArgsCall)
		qw422016.N().S(`), nil
`)
	}
	qw422016.N().S(`}

func (item *`)
	qw422016.N().S(goName)
	qw422016.N().S(`) WriteBoxed(w []byte`)
	qw422016.N().S(natArgsDecl)
	qw422016.N().S(`) `)
	qw422016.N().S(wrapWithError(writeNeedsError, "[]byte"))
	qw422016.N().S(`  {
    w = basictl.NatWrite(w, _`)
	qw422016.N().S(addBytes(union.wr.goGlobalName, false))
	qw422016.N().S(`[item.index].TLTag)
`)
	if union.IsEnum {
		if writeNeedsError {
			qw422016.N().S(`        return w, nil
`)
		} else {
			qw422016.N().S(`        return w
`)
		}
	} else {
		qw422016.N().S(`    switch item.index {
`)
		for i, field := range union.Fields {
			qw422016.N().S(`        case `)
			qw422016.N().D(i)
			qw422016.N().S(`:
`)
			if field.t.IsTrueType() {
				if writeNeedsError {
					qw422016.N().S(`            return w, nil
`)
				} else {
					qw422016.N().S(`            return w
`)
				}
			} else {
				qw422016.N().S(`        `)
				qw422016.N().S(field.t.TypeWritingCode(bytesVersion, directImports, union.wr.ins, fmt.Sprintf("item.value%s", field.goName), true,
					formatNatArgs(nil, field.natArgs), false, false, field.t.hasErrorInWriteMethods))
				qw422016.N().S(`
`)
			}
		}
		qw422016.N().S(`    }
`)
		if writeNeedsError {
			qw422016.N().S(`    return w, nil
`)
		} else {
			qw422016.N().S(`    return w
`)
		}
	}
	qw422016.N().S(`}
`)
	if union.wr.gen.options.GenerateTL2 {
		qw422016.N().S(`
func (item *`)
		qw422016.N().S(goName)
		qw422016.N().S(`) CalculateLayout(sizes []int`)
		qw422016.N().S(natArgsDecl)
		qw422016.N().S(`) []int {
`)
		if union.IsEnum {
			qw422016.N().S(`    switch item.index {
    case 0:
        sizes = append(sizes, 0)
    default:
        sizes = append(sizes, 1 + basictl.TL2CalculateSize(item.index))
    }
`)
		} else {
			qw422016.N().S(`    switch item.index {
`)
			for i, field := range union.Fields {
				qw422016.N().S(`    case `)
				qw422016.N().D(i)
				qw422016.N().S(`:
`)
				if field.t.IsTrueType() {
					if i == 0 {
						qw422016.N().S(`        sizes = append(sizes, 0)
`)
					} else {
						qw422016.N().S(`        sizes = append(sizes, 1 + basictl.TL2CalculateSize(item.index))
`)
					}
				} else {
					struct_, isStruct := field.t.trw.(*TypeRWStruct)
					if !isStruct {
						panic("impossible type: union case is not struct + \"" + field.t.goGlobalName + "\"")
					}
					struct_.isTypeDef()
					qw422016.N().S(`        `)
					qw422016.N().S(field.t.CalculateLayout(bytesVersion, "sizes", fmt.Sprintf("item.value%s", field.goName), false, union.wr.ins, field.recursive, formatNatArgs(nil, field.natArgs)))
					qw422016.N().S(`
`)
				}
			}
			qw422016.N().S(`    }
`)
		}
		qw422016.N().S(`    return sizes
}

func (item *`)
		qw422016.N().S(goName)
		qw422016.N().S(`) InternalWriteTL2(w []byte, sizes []int`)
		qw422016.N().S(natArgsDecl)
		qw422016.N().S(`) ([]byte, []int) {
`)
		if union.IsEnum {
			qw422016.N().S(`    switch item.index {
    case 0:
        sizes = sizes[1:]
        w = basictl.TL2WriteSize(w, 0)
    default:
        currentSize := sizes[0]
        sizes = sizes[1:]
        w = basictl.TL2WriteSize(w, currentSize)
        w = append(w, 1)
        w = basictl.TL2WriteSize(w, item.index)
    }
`)
		} else {
			qw422016.N().S(`    switch item.index {
`)
			for i, field := range union.Fields {
				qw422016.N().S(`    case `)
				qw422016.N().D(i)
				qw422016.N().S(`:
`)
				if field.t.IsTrueType() {
					if i == 0 {
						qw422016.N().S(`        sizes = sizes[1:]
        w = basictl.TL2WriteSize(w, 0)
`)
					} else {
						qw422016.N().S(`        currentSize := sizes[0]
        sizes = sizes[1:]
        w = basictl.TL2WriteSize(w, currentSize)
        w = append(w, 1)
        w = basictl.TL2WriteSize(w, item.index)
`)
					}
				} else {
					qw422016.N().S(`        `)
					qw422016.N().S(field.t.WriteTL2Call(bytesVersion, "sizes", "w", fmt.Sprintf("item.value%s", field.goName), false, union.wr.ins, field.recursive, formatNatArgs(nil, field.natArgs)))
					qw422016.N().S(`
`)
				}
			}
			qw422016.N().S(`    }
`)
		}
		qw422016.N().S(`    return w, sizes
}
`)
		if len(natArgsDecl) == 0 {
			qw422016.N().S(`func (item *`)
			qw422016.N().S(goName)
			qw422016.N().S(`) WriteTL2(w []byte, sizes []int) ([]byte, []int) {
    sizes = item.CalculateLayout(sizes[0:0])
    w, _ = item.InternalWriteTL2(w, sizes)
    return w, sizes[0:0]
}
`)
		}
		qw422016.N().S(`
func (item *`)
		qw422016.N().S(goName)
		qw422016.N().S(`) ReadTL2(r []byte`)
		qw422016.N().S(natArgsDecl)
		qw422016.N().S(`) (_ []byte, err error) {
    saveR := r
    currentSize := 0
    if r, currentSize, err = basictl.TL2ParseSize(r); err != nil { return r, err }
    shift := currentSize + basictl.TL2CalculateSize(currentSize)

    if currentSize == 0 {
        item.index = 0
    } else {
        var block byte
        if r, err = basictl.ByteReadTL2(r, &block); err != nil { return r, err }
        if (block & 1) != 0 {
            if r, item.index, err = basictl.TL2ParseSize(r); err != nil { return r, err }
        } else {
            item.index = 0
        }
    }
`)
		if !union.IsEnum {
			qw422016.N().S(`    switch item.index {
`)
			for i, field := range union.Fields {
				qw422016.N().S(`    case `)
				qw422016.N().D(i)
				qw422016.N().S(`:
`)
				if field.t.IsTrueType() {
					qw422016.N().S(`        break
`)
				} else {
					qw422016.N().S(`        r = saveR
`)
					if field.recursive {
						qw422016.N().S(`        if `)
						qw422016.N().S(fmt.Sprintf("item.value%s", field.goName))
						qw422016.N().S(` == nil {
            var newValue `)
						qw422016.N().S(field.t.TypeString2(bytesVersion, directImports, union.wr.ins, false, false))
						qw422016.N().S(`
            `)
						qw422016.N().S(fmt.Sprintf("item.value%s", field.goName))
						qw422016.N().S(` = &newValue
        }
`)
					}
					qw422016.N().S(`        `)
					qw422016.N().S(field.t.ReadTL2Call(bytesVersion, "r", fmt.Sprintf("item.value%s", field.goName), false, union.wr.ins, field.recursive, formatNatArgs(nil, field.natArgs)))
					qw422016.N().S(`
`)
				}
			}
			qw422016.N().S(`    }
`)
		}
		qw422016.N().S(`    if len(saveR) < len(r) + shift {
        r = saveR[shift:]
    }
    return r, nil
}
`)
	}
	qw422016.N().S(`
`)
	if union.wr.gen.options.GenerateLegacyJsonRead {
		qw422016.N().S(`func (item *`)
		qw422016.N().S(goName)
		qw422016.N().S(`) ReadJSONLegacy(legacyTypeNames bool, j interface{}`)
		qw422016.N().S(natArgsDecl)
		qw422016.N().S(`) error {
`)
		// TODO - we lost compatibility between enums and unions here. We might wish to return compatibility
		// by allowing union element to be read from string, and enum from object with tag

		if union.IsEnum {
			qw422016.N().S(`    if j == nil {
        return `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`ErrorInvalidJSON(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, "expected string")
    }
    _jtype, _ok := j.(string)
    if !_ok {
        return `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`ErrorInvalidJSON(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, "expected string")
    }
    switch _jtype {
`)
			for i, field := range union.Fields {
				name := field.originalName
				tag := fmt.Sprintf("#%08x", field.t.tlTag)
				nameWithTag := name + tag
				wrWithoutLong := field.t.WrWithoutLong

				qw422016.N().S(`        case `)
				qw422016.N().Q(nameWithTag)
				qw422016.N().S(`, `)
				qw422016.N().Q(name)
				qw422016.N().S(`, `)
				qw422016.N().Q(tag)
				if wrWithoutLong != nil && !union.HasShortFieldCollision(wrWithoutLong) {
					qw422016.N().S(`,
`)
					name2 := wrWithoutLong.tlName.String()
					tag2 := fmt.Sprintf("#%08x", wrWithoutLong.tlTag)
					nameWithTag2 := name2 + tag2

					qw422016.N().Q(nameWithTag2)
					qw422016.N().S(`, `)
					qw422016.N().Q(name2)
					qw422016.N().S(`, `)
					qw422016.N().Q(tag2)
					qw422016.N().S(`:
            if !legacyTypeNames && _jtype == `)
					qw422016.N().Q(nameWithTag2)
					qw422016.N().S(` {
                return `)
					qw422016.N().S(union.wr.gen.InternalPrefix())
					qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
					qw422016.N().Q(union.wr.tlName.String())
					qw422016.N().S(`, `)
					qw422016.N().Q(nameWithTag2)
					qw422016.N().S(`)
            }
`)
				} else {
					qw422016.N().S(`:`)
				}
				qw422016.N().S(`            if !legacyTypeNames && _jtype == `)
				qw422016.N().Q(nameWithTag)
				qw422016.N().S(` {
                return `)
				qw422016.N().S(union.wr.gen.InternalPrefix())
				qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
				qw422016.N().Q(union.wr.tlName.String())
				qw422016.N().S(`, `)
				qw422016.N().Q(nameWithTag)
				qw422016.N().S(`)
            }
            item.index = `)
				qw422016.N().D(i)
				qw422016.N().S(`
            return nil
`)
			}
			qw422016.N().S(`        default:
            return `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`ErrorInvalidEnumTagJSON(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, _jtype)
    }
}
`)
		} else {
			qw422016.N().S(`    _jm, _tag, err := `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`JsonReadUnionType(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, j)
    if err != nil {
        return err
    }
    jvalue := _jm["value"]
    switch _tag {
`)
			for i, field := range union.Fields {
				name := field.originalName
				tag := fmt.Sprintf("#%08x", field.t.tlTag)
				nameWithTag := name + tag
				wrWithoutLong := field.t.WrWithoutLong

				qw422016.N().S(`        case `)
				qw422016.N().Q(nameWithTag)
				qw422016.N().S(`, `)
				qw422016.N().Q(name)
				qw422016.N().S(`, `)
				qw422016.N().Q(tag)
				if wrWithoutLong != nil && !union.HasShortFieldCollision(wrWithoutLong) {
					qw422016.N().S(`,
`)
					name2 := wrWithoutLong.tlName.String()
					tag2 := fmt.Sprintf("#%08x", wrWithoutLong.tlTag)
					nameWithTag2 := name2 + tag2

					qw422016.N().Q(nameWithTag2)
					qw422016.N().S(`, `)
					qw422016.N().Q(name2)
					qw422016.N().S(`, `)
					qw422016.N().Q(tag2)
					qw422016.N().S(`:
            if !legacyTypeNames && _tag == `)
					qw422016.N().Q(nameWithTag2)
					qw422016.N().S(` {
                return `)
					qw422016.N().S(union.wr.gen.InternalPrefix())
					qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
					qw422016.N().Q(union.wr.tlName.String())
					qw422016.N().S(`, `)
					qw422016.N().Q(nameWithTag2)
					qw422016.N().S(`)
            }
`)
				} else {
					qw422016.N().S(`:`)
				}
				qw422016.N().S(`            if !legacyTypeNames && _tag == `)
				qw422016.N().Q(nameWithTag)
				qw422016.N().S(` {
                return `)
				qw422016.N().S(union.wr.gen.InternalPrefix())
				qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
				qw422016.N().Q(union.wr.tlName.String())
				qw422016.N().S(`, `)
				qw422016.N().Q(nameWithTag)
				qw422016.N().S(`)
            }
            item.index = `)
				qw422016.N().D(i)
				qw422016.N().S(`
`)
				if field.t.IsTrueType() {
					continue
				}
				if field.recursive {
					qw422016.N().S(`            if item.value`)
					qw422016.N().S(field.goName)
					qw422016.N().S(` == nil {
                var value `)
					qw422016.N().S(field.t.TypeString2(bytesVersion, directImports, union.wr.ins, false, false))
					qw422016.N().S(`
                item.value`)
					qw422016.N().S(field.goName)
					qw422016.N().S(` = &value
            }
`)
				}
				qw422016.N().S(`            `)
				qw422016.N().S(field.t.TypeJSONReadingCode(bytesVersion, directImports, union.wr.ins, "jvalue", fmt.Sprintf("item.value%s", field.goName),
					formatNatArgs(nil, field.natArgs), field.recursive))
				qw422016.N().S(`
            delete(_jm, "value")
`)
			}
			qw422016.N().S(`        default:
            return `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`ErrorInvalidUnionTagJSON(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, _tag)
    }
    for k := range _jm {
        return `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`ErrorInvalidJSONExcessElement(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, k)
    }
    return nil
}
`)
		}
		qw422016.N().S(`
`)
	}
	qw422016.N().S(`func (item *`)
	qw422016.N().S(goName)
	qw422016.N().S(`) ReadJSON(legacyTypeNames bool, in *basictl.JsonLexer`)
	qw422016.N().S(natArgsDecl)
	qw422016.N().S(`) error {
`)
	// TODO - we lost compatibility between enums and unions here. We might wish to return compatibility
	// by allowing union element to be read from string, and enum from object with tag

	if union.IsEnum {
		qw422016.N().S(`    _jtype := in.UnsafeString()
    if !in.Ok() {
        return `)
		qw422016.N().S(union.wr.gen.InternalPrefix())
		qw422016.N().S(`ErrorInvalidJSON(`)
		qw422016.N().Q(union.wr.tlName.String())
		qw422016.N().S(`, "expected string")
    }
    switch _jtype {
`)
		for i, field := range union.Fields {
			name := field.originalName
			tag := fmt.Sprintf("#%08x", field.t.tlTag)
			nameWithTag := name + tag
			wrWithoutLong := field.t.WrWithoutLong

			qw422016.N().S(`        case `)
			qw422016.N().Q(nameWithTag)
			qw422016.N().S(`, `)
			qw422016.N().Q(name)
			qw422016.N().S(`, `)
			qw422016.N().Q(tag)
			if wrWithoutLong != nil && !union.HasShortFieldCollision(wrWithoutLong) {
				qw422016.N().S(`,
`)
				name2 := wrWithoutLong.tlName.String()
				tag2 := fmt.Sprintf("#%08x", wrWithoutLong.tlTag)
				nameWithTag2 := name2 + tag2

				qw422016.N().Q(nameWithTag2)
				qw422016.N().S(`, `)
				qw422016.N().Q(name2)
				qw422016.N().S(`, `)
				qw422016.N().Q(tag2)
				qw422016.N().S(`:
            if !legacyTypeNames && _jtype == `)
				qw422016.N().Q(nameWithTag2)
				qw422016.N().S(` {
                return `)
				qw422016.N().S(union.wr.gen.InternalPrefix())
				qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
				qw422016.N().Q(union.wr.tlName.String())
				qw422016.N().S(`, `)
				qw422016.N().Q(nameWithTag2)
				qw422016.N().S(`)
            }
`)
			} else {
				qw422016.N().S(`:`)
			}
			qw422016.N().S(`            if !legacyTypeNames && _jtype == `)
			qw422016.N().Q(nameWithTag)
			qw422016.N().S(` {
                return `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, `)
			qw422016.N().Q(nameWithTag)
			qw422016.N().S(`)
            }
            item.index = `)
			qw422016.N().D(i)
			qw422016.N().S(`
            return nil
`)
		}
		qw422016.N().S(`        default:
            return `)
		qw422016.N().S(union.wr.gen.InternalPrefix())
		qw422016.N().S(`ErrorInvalidEnumTagJSON(`)
		qw422016.N().Q(union.wr.tlName.String())
		qw422016.N().S(`, _jtype)
    }
}
`)
	} else {
		qw422016.N().S(`    _tag, _value, err := `)
		qw422016.N().S(union.wr.gen.InternalPrefix())
		qw422016.N().S(`Json2ReadUnion(`)
		qw422016.N().Q(union.wr.tlName.String())
		qw422016.N().S(`, in)
    if err != nil {
        return err
    }
    switch _tag {
`)
		for i, field := range union.Fields {
			name := field.originalName
			tag := fmt.Sprintf("#%08x", field.t.tlTag)
			nameWithTag := name + tag
			wrWithoutLong := field.t.WrWithoutLong

			qw422016.N().S(`        case `)
			qw422016.N().Q(nameWithTag)
			qw422016.N().S(`, `)
			qw422016.N().Q(name)
			qw422016.N().S(`, `)
			qw422016.N().Q(tag)
			if wrWithoutLong != nil && !union.HasShortFieldCollision(wrWithoutLong) {
				qw422016.N().S(`,
`)
				name2 := wrWithoutLong.tlName.String()
				tag2 := fmt.Sprintf("#%08x", wrWithoutLong.tlTag)
				nameWithTag2 := name2 + tag2

				qw422016.N().Q(nameWithTag2)
				qw422016.N().S(`, `)
				qw422016.N().Q(name2)
				qw422016.N().S(`, `)
				qw422016.N().Q(tag2)
				qw422016.N().S(`:
            if !legacyTypeNames && _tag == `)
				qw422016.N().Q(nameWithTag2)
				qw422016.N().S(` {
                return `)
				qw422016.N().S(union.wr.gen.InternalPrefix())
				qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
				qw422016.N().Q(union.wr.tlName.String())
				qw422016.N().S(`, `)
				qw422016.N().Q(nameWithTag2)
				qw422016.N().S(`)
            }
`)
			} else {
				qw422016.N().S(`:`)
			}
			qw422016.N().S(`            if !legacyTypeNames && _tag == `)
			qw422016.N().Q(nameWithTag)
			qw422016.N().S(` {
                return `)
			qw422016.N().S(union.wr.gen.InternalPrefix())
			qw422016.N().S(`ErrorInvalidUnionLegacyTagJSON(`)
			qw422016.N().Q(union.wr.tlName.String())
			qw422016.N().S(`, `)
			qw422016.N().Q(nameWithTag)
			qw422016.N().S(`)
            }
            item.index = `)
			qw422016.N().D(i)
			qw422016.N().S(`
`)
			if field.t.IsTrueType() {
				continue
			}
			if field.recursive {
				qw422016.N().S(`            if item.value`)
				qw422016.N().S(field.goName)
				qw422016.N().S(` == nil {
                var value `)
				qw422016.N().S(field.t.TypeString2(bytesVersion, directImports, union.wr.ins, false, false))
				qw422016.N().S(`
                item.value`)
				qw422016.N().S(field.goName)
				qw422016.N().S(` = &value
            }
`)
			}
			qw422016.N().S(`            var in2Pointer *basictl.JsonLexer
            if _value != nil {
                in2 := basictl.JsonLexer{Data: _value}
                in2Pointer = &in2
            }
            `)
			qw422016.N().S(field.t.TypeJSON2ReadingCode(bytesVersion, directImports, union.wr.ins, "in2Pointer", fmt.Sprintf("item.value%s", field.goName),
				formatNatArgs(nil, field.natArgs), field.recursive))
			qw422016.N().S(`
`)
		}
		qw422016.N().S(`        default:
            return `)
		qw422016.N().S(union.wr.gen.InternalPrefix())
		qw422016.N().S(`ErrorInvalidUnionTagJSON(`)
		qw422016.N().Q(union.wr.tlName.String())
		qw422016.N().S(`, _tag)
    }
    return nil
}
`)
	}
	qw422016.N().S(`
// This method is general version of WriteJSON, use it instead!
func (item `)
	qw422016.N().S(asterisk)
	qw422016.N().S(goName)
	qw422016.N().S(`) WriteJSONGeneral(w []byte`)
	qw422016.N().S(natArgsDecl)
	qw422016.N().S(`) ([]byte, error) {
`)
	if writeNeedsError {
		qw422016.N().S(`    return item.WriteJSONOpt(true, false, w`)
		qw422016.N().S(natArgsCall)
		qw422016.N().S(`)
`)
	} else {
		qw422016.N().S(`    return item.WriteJSONOpt(true, false, w`)
		qw422016.N().S(natArgsCall)
		qw422016.N().S(`), nil
`)
	}
	qw422016.N().S(`}

func (item `)
	qw422016.N().S(asterisk)
	qw422016.N().S(goName)
	qw422016.N().S(`) WriteJSON(w []byte`)
	qw422016.N().S(natArgsDecl)
	qw422016.N().S(`) `)
	qw422016.N().S(wrapWithError(writeNeedsError, "[]byte"))
	qw422016.N().S(` {
    return item.WriteJSONOpt(true, false, w`)
	qw422016.N().S(natArgsCall)
	qw422016.N().S(`)
}
func (item `)
	qw422016.N().S(asterisk)
	qw422016.N().S(goName)
	qw422016.N().S(`) WriteJSONOpt(newTypeNames bool, short bool, w []byte`)
	qw422016.N().S(natArgsDecl)
	qw422016.N().S(`) `)
	qw422016.N().S(wrapWithError(writeNeedsError, "[]byte"))
	qw422016.N().S(` {
`)
	if union.IsEnum {
		qw422016.N().S(`        w = append(w, '"')
        if newTypeNames {
            w = append(w, _`)
		qw422016.N().S(goName)
		qw422016.N().S(`[item.index].TLName...)
        } else {
            w = append(w, _`)
		qw422016.N().S(goName)
		qw422016.N().S(`[item.index].TLString...)
        }
        return append(w, '"')
`)
	} else {
		qw422016.N().S(`    switch item.index {
`)
		for i, field := range union.Fields {
			nameWithTag := fmt.Sprintf("%s#%08x", field.originalName, field.t.tlTag)
			nameWithTagNew := field.originalName
			nameWithTagShort := nameWithTag
			nameWithTagShortNew := nameWithTagNew
			wrWithoutLong := field.t.WrWithoutLong
			if wrWithoutLong != nil {
				nameWithTagShort = fmt.Sprintf("%s#%08x", wrWithoutLong.tlName.String(), wrWithoutLong.tlTag)
				nameWithTagShortNew = wrWithoutLong.tlName.String()
			}

			emptyCondition := field.t.TypeJSONEmptyCondition(bytesVersion, fmt.Sprintf("item.value%s", field.goName), false)

			qw422016.N().S(`        case `)
			qw422016.N().D(i)
			qw422016.N().S(`:
`)
			if wrWithoutLong != nil {
				qw422016.N().S(`        if short {
            if newTypeNames {
                w = append(w, `)
				qw422016.N().S("`")
				qw422016.N().S(`{"type":`)
				qw422016.N().Q(nameWithTagShortNew)
				qw422016.N().S(``)
				qw422016.N().S("`")
				qw422016.N().S(`...)
            } else {
                w = append(w, `)
				qw422016.N().S("`")
				qw422016.N().S(`{"type":`)
				qw422016.N().Q(nameWithTagShort)
				qw422016.N().S(``)
				qw422016.N().S("`")
				qw422016.N().S(`...)
            }
        } else {
`)
			}
			qw422016.N().S(`            if newTypeNames {
                w = append(w, `)
			qw422016.N().S("`")
			qw422016.N().S(`{"type":`)
			qw422016.N().Q(nameWithTagNew)
			qw422016.N().S(``)
			qw422016.N().S("`")
			qw422016.N().S(`...)
            } else {
                w = append(w, `)
			qw422016.N().S("`")
			qw422016.N().S(`{"type":`)
			qw422016.N().Q(nameWithTag)
			qw422016.N().S(``)
			qw422016.N().S("`")
			qw422016.N().S(`...)
            }
`)
			if wrWithoutLong != nil {
				qw422016.N().S(`        }
`)
			}
			if !field.t.IsTrueType() {
				if emptyCondition != "" {
					qw422016.N().S(`    if `)
					qw422016.N().S(emptyCondition)
					qw422016.N().S(` {
`)
				}
				qw422016.N().S(`        w = append(w, `)
				qw422016.N().S("`")
				qw422016.N().S(`,"value":`)
				qw422016.N().S("`")
				qw422016.N().S(`...)
        `)
				qw422016.N().S(field.t.TypeJSONWritingCode(bytesVersion, directImports, union.wr.ins, fmt.Sprintf("item.value%s", field.goName),
					formatNatArgs(nil, field.natArgs), false, field.t.hasErrorInWriteMethods))
				qw422016.N().S(`
`)
				if emptyCondition != "" {
					qw422016.N().S(`    }
`)
				}
			}
			if writeNeedsError {
				qw422016.N().S(`        return append(w, '}'), nil
`)
			} else {
				qw422016.N().S(`        return append(w, '}')
`)
			}
		}
		qw422016.N().S(`        default: // Impossible due to panic above
`)
		if writeNeedsError {
			qw422016.N().S(`            return w, nil
`)
		} else {
			qw422016.N().S(`            return w
`)
		}
		qw422016.N().S(`    }
`)
	}
	qw422016.N().S(`}

`)
	if len(union.wr.NatParams) == 0 {
		qw422016.N().S(`func (item `)
		qw422016.N().S(goName)
		qw422016.N().S(`) String(`)
		qw422016.N().S(formatNatArgsDeclNoComma(union.wr.NatParams))
		qw422016.N().S(`) string {
`)
		if writeNeedsError {
			qw422016.N().S(`    w, err := item.WriteJSON(nil`)
			qw422016.N().S(natArgsCall)
			qw422016.N().S(`)
    if err != nil {
        return err.Error()
    }
    return string(w)
`)
		} else {
			qw422016.N().S(`    return string(item.WriteJSON(nil`)
			qw422016.N().S(natArgsCall)
			qw422016.N().S(`))
`)
		}
		qw422016.N().S(`}

func (item *`)
		qw422016.N().S(goName)
		qw422016.N().S(`) MarshalJSON() ([]byte, error) {
`)
		if writeNeedsError {
			qw422016.N().S(`    return item.WriteJSON(nil)
`)
		} else {
			qw422016.N().S(`    return item.WriteJSON(nil), nil
`)
		}
		qw422016.N().S(`}

func (item *`)
		qw422016.N().S(goName)
		qw422016.N().S(`) UnmarshalJSON(b []byte) error {
    if err := item.ReadJSON(true, &basictl.JsonLexer{Data: b}); err != nil {
        return `)
		qw422016.N().S(union.wr.gen.InternalPrefix())
		qw422016.N().S(`ErrorInvalidJSON(`)
		qw422016.N().Q(union.wr.tlName.String())
		qw422016.N().S(`, err.Error())
    }
    return nil
}

`)
	}
}

func (union *TypeRWUnion) WriteGenerateCode(qq422016 qtio422016.Writer, bytesVersion bool, directImports *DirectImports) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	union.StreamGenerateCode(qw422016, bytesVersion, directImports)
	qt422016.ReleaseWriter(qw422016)
}

func (union *TypeRWUnion) GenerateCode(bytesVersion bool, directImports *DirectImports) string {
	qb422016 := qt422016.AcquireByteBuffer()
	union.WriteGenerateCode(qb422016, bytesVersion, directImports)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (union *TypeRWUnion) streamgenerateFields(qw422016 *qt422016.Writer, bytesVersion bool, directImports *DirectImports) {
	for _, field := range union.Fields {
		if !field.t.IsTrueType() {
			qw422016.N().S(`    value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` `)
			qw422016.N().S(ifString(field.recursive, "*", ""))
			qw422016.N().S(field.t.TypeString2(bytesVersion, directImports, union.wr.ins, false, false))
			qw422016.N().S(`
`)
		}
	}
	qw422016.N().S(`    index int
`)
}

func (union *TypeRWUnion) writegenerateFields(qq422016 qtio422016.Writer, bytesVersion bool, directImports *DirectImports) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	union.streamgenerateFields(qw422016, bytesVersion, directImports)
	qt422016.ReleaseWriter(qw422016)
}

func (union *TypeRWUnion) generateFields(bytesVersion bool, directImports *DirectImports) string {
	qb422016 := qt422016.AcquireByteBuffer()
	union.writegenerateFields(qb422016, bytesVersion, directImports)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (union *TypeRWUnion) streamgenerateConstructorsBehavior(qw422016 *qt422016.Writer, bytesVersion bool, directImports *DirectImports) {
	goGlobalName := addBytes(union.wr.goGlobalName, bytesVersion)

	for i, field := range union.Fields {
		qw422016.N().S(`
func (item *`)
		qw422016.N().S(goGlobalName)
		qw422016.N().S(`) Is`)
		qw422016.N().S(field.goName)
		qw422016.N().S(`() bool { return item.index == `)
		qw422016.N().D(i)
		qw422016.N().S(` }
`)
		if union.IsEnum {
			qw422016.N().S(`func (item *`)
			qw422016.N().S(goGlobalName)
			qw422016.N().S(`) Set`)
			qw422016.N().S(field.goName)
			qw422016.N().S(`() { item.index = `)
			qw422016.N().D(i)
			qw422016.N().S(`}

`)
			continue
		}
		qw422016.N().S(`
`)
		fieldTypeString := field.t.TypeString2(bytesVersion, directImports, union.wr.ins, false, false)
		ampersand := ifString(field.recursive, "", "&")

		qw422016.N().S(`
`)
		if field.t.IsTrueType() {
			qw422016.N().S(`func (item *`)
			qw422016.N().S(goGlobalName)
			qw422016.N().S(`) As`)
			qw422016.N().S(field.goName)
			qw422016.N().S(`() (`)
			qw422016.N().S(fieldTypeString)
			qw422016.N().S(`, bool) {
    var value `)
			qw422016.N().S(fieldTypeString)
			qw422016.N().S(`
    return value, item.index == `)
			qw422016.N().D(i)
			qw422016.N().S(`
}
func (item *`)
			qw422016.N().S(goGlobalName)
			qw422016.N().S(`) ResetTo`)
			qw422016.N().S(field.goName)
			qw422016.N().S(`() { item.index = `)
			qw422016.N().D(i)
			qw422016.N().S(`}
func (item *`)
			qw422016.N().S(goGlobalName)
			qw422016.N().S(`) Set`)
			qw422016.N().S(field.goName)
			qw422016.N().S(`() { item.index = `)
			qw422016.N().D(i)
			qw422016.N().S(`}

`)
			continue
		}
		qw422016.N().S(`func (item *`)
		qw422016.N().S(goGlobalName)
		qw422016.N().S(`) As`)
		qw422016.N().S(field.goName)
		qw422016.N().S(`() (*`)
		qw422016.N().S(fieldTypeString)
		qw422016.N().S(`, bool) {
    if item.index != `)
		qw422016.N().D(i)
		qw422016.N().S(` {
        return nil, false
    }
    return `)
		qw422016.N().S(ampersand)
		qw422016.N().S(`item.value`)
		qw422016.N().S(field.goName)
		qw422016.N().S(`, true
}
func (item *`)
		qw422016.N().S(goGlobalName)
		qw422016.N().S(`) ResetTo`)
		qw422016.N().S(field.goName)
		qw422016.N().S(`() *`)
		qw422016.N().S(fieldTypeString)
		qw422016.N().S(` {
    item.index = `)
		qw422016.N().D(i)
		qw422016.N().S(`
`)
		if field.recursive {
			qw422016.N().S(`    if item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` == nil {
        var value `)
			qw422016.N().S(fieldTypeString)
			qw422016.N().S(`
        item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` = &value
    } else {
        `)
			qw422016.N().S(field.t.TypeResettingCode(bytesVersion, directImports, union.wr.ins, "item.value"+field.goName, true))
			qw422016.N().S(`
    }
`)
		} else {
			qw422016.N().S(`    `)
			qw422016.N().S(field.t.TypeResettingCode(bytesVersion, directImports, union.wr.ins, "item.value"+field.goName, false))
			qw422016.N().S(`
`)
		}
		qw422016.N().S(`    return `)
		qw422016.N().S(ampersand)
		qw422016.N().S(`item.value`)
		qw422016.N().S(field.goName)
		qw422016.N().S(`
}
func (item *`)
		qw422016.N().S(goGlobalName)
		qw422016.N().S(`) Set`)
		qw422016.N().S(field.goName)
		qw422016.N().S(`(value `)
		qw422016.N().S(fieldTypeString)
		qw422016.N().S(`) {
    item.index = `)
		qw422016.N().D(i)
		qw422016.N().S(`
`)
		if field.recursive {
			qw422016.N().S(`    if item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` == nil {
        item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` = &value
    } else {
        *item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` = value
    }
`)
		} else {
			qw422016.N().S(`    item.value`)
			qw422016.N().S(field.goName)
			qw422016.N().S(` = value
`)
		}
		qw422016.N().S(`}

`)
	}
}

func (union *TypeRWUnion) writegenerateConstructorsBehavior(qq422016 qtio422016.Writer, bytesVersion bool, directImports *DirectImports) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	union.streamgenerateConstructorsBehavior(qw422016, bytesVersion, directImports)
	qt422016.ReleaseWriter(qw422016)
}

func (union *TypeRWUnion) generateConstructorsBehavior(bytesVersion bool, directImports *DirectImports) string {
	qb422016 := qt422016.AcquireByteBuffer()
	union.writegenerateConstructorsBehavior(qb422016, bytesVersion, directImports)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}

func (union *TypeRWUnion) streamgenerateEnumAlias(qw422016 *qt422016.Writer, bytesVersion bool) {
	goName := addBytes(union.wr.goGlobalName, false)

	if bytesVersion {
		return
	}
	qw422016.N().S(`    var _`)
	qw422016.N().S(goName)
	qw422016.N().S(` = [`)
	qw422016.N().D(len(union.Fields))
	qw422016.N().S(`]`)
	qw422016.N().S(union.wr.gen.InternalPrefix())
	qw422016.N().S(`UnionElement{
`)
	for _, x := range union.Fields {
		tlTag := fmt.Sprintf("0x%08x", x.t.tlTag)
		tlString := fmt.Sprintf("%s#%08x", x.t.tlName, x.t.tlTag)
		tlName := x.t.tlName.String()

		qw422016.N().S(`        {TLTag:`)
		qw422016.N().S(tlTag)
		qw422016.N().S(`, TLName:`)
		qw422016.N().Q(tlName)
		qw422016.N().S(`, TLString:`)
		qw422016.N().Q(tlString)
		qw422016.N().S(`},
`)
	}
	qw422016.N().S(`    }

`)
	if union.IsEnum {
		// TODO - deconflict name

		qw422016.N().S(`func `)
		qw422016.N().S(goName)
		qw422016.N().S(`__MakeEnum(i int) `)
		qw422016.N().S(goName)
		qw422016.N().S(` { return `)
		qw422016.N().S(goName)
		qw422016.N().S(`{index: i} }
`)
	}
}

func (union *TypeRWUnion) writegenerateEnumAlias(qq422016 qtio422016.Writer, bytesVersion bool) {
	qw422016 := qt422016.AcquireWriter(qq422016)
	union.streamgenerateEnumAlias(qw422016, bytesVersion)
	qt422016.ReleaseWriter(qw422016)
}

func (union *TypeRWUnion) generateEnumAlias(bytesVersion bool) string {
	qb422016 := qt422016.AcquireByteBuffer()
	union.writegenerateEnumAlias(qb422016, bytesVersion)
	qs422016 := string(qb422016.B)
	qt422016.ReleaseByteBuffer(qb422016)
	return qs422016
}
