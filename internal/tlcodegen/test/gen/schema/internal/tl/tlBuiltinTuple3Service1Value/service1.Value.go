// Copyright 2022 V Kontakte LLC
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
package tlBuiltinTuple3Service1Value

import (
	"github.com/vkcom/tl/internal/tlcodegen/test/gen/schema/internal"
	"github.com/vkcom/tl/internal/tlcodegen/test/gen/schema/internal/cycle_6ca945392bbf8b14f24e5653edc8b214"
	"github.com/vkcom/tl/pkg/basictl"
)

var _ = basictl.NatWrite
var _ = internal.ErrorInvalidEnumTag

func BuiltinTuple3Service1ValueReset(vec *[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value) {
	for i := range *vec {
		(*vec)[i].Reset()
	}
}

func BuiltinTuple3Service1ValueRead(w []byte, vec *[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value) (_ []byte, err error) {
	for i := range *vec {
		if w, err = (*vec)[i].ReadBoxed(w); err != nil {
			return w, err
		}
	}
	return w, nil
}

func BuiltinTuple3Service1ValueWrite(w []byte, vec *[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value) []byte {
	for _, elem := range *vec {
		w = elem.WriteBoxed(w)
	}
	return w
}

func BuiltinTuple3Service1ValueReadJSON(legacyTypeNames bool, in *basictl.JsonLexer, vec *[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value) error {
	index := 0
	if in != nil {
		in.Delim('[')
		if !in.Ok() {
			return internal.ErrorInvalidJSON("[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value", "expected json array")
		}
		for ; !in.IsDelim(']'); index++ {
			if index == 3 {
				return internal.ErrorWrongSequenceLength("[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value", index+1, 3)
			}
			if err := (*vec)[index].ReadJSON(legacyTypeNames, in); err != nil {
				return err
			}
			in.WantComma()
		}
		in.Delim(']')
		if !in.Ok() {
			return internal.ErrorInvalidJSON("[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value", "expected json array's end")
		}
	}
	if index != 3 {
		return internal.ErrorWrongSequenceLength("[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value", index+1, 3)
	}
	return nil
}

func BuiltinTuple3Service1ValueWriteJSON(w []byte, vec *[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value) []byte {
	return BuiltinTuple3Service1ValueWriteJSONOpt(true, false, w, vec)
}
func BuiltinTuple3Service1ValueWriteJSONOpt(newTypeNames bool, short bool, w []byte, vec *[3]cycle_6ca945392bbf8b14f24e5653edc8b214.Service1Value) []byte {
	w = append(w, '[')
	for _, elem := range *vec {
		w = basictl.JSONAddCommaIfNeeded(w)
		w = elem.WriteJSONOpt(newTypeNames, short, w)
	}
	return append(w, ']')
}
