// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#include "service5Long/headers/service5Long.Output.h"
#include "service5Long/headers/service5Long.stringOutput.h"
#include "service5Long/headers/service5Long.emptyOutput.h"


bool tl2::service5Long::EmptyOutput::write_json(std::ostream& s)const {
	if (!::tl2::details::Service5LongEmptyOutputWriteJSON(s, *this)) { return false; }
	return true;
}

bool tl2::service5Long::EmptyOutput::read(::basictl::tl_istream & s) noexcept {
	if (!::tl2::details::Service5LongEmptyOutputRead(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

bool tl2::service5Long::EmptyOutput::write(::basictl::tl_ostream & s)const noexcept {
	if (!::tl2::details::Service5LongEmptyOutputWrite(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

void tl2::service5Long::EmptyOutput::read_or_throw(::basictl::tl_throwable_istream & s) {
	::basictl::tl_istream s2(s);
	this->read(s2);
	s2.pass_data(s);
}

void tl2::service5Long::EmptyOutput::write_or_throw(::basictl::tl_throwable_ostream & s)const {
	::basictl::tl_ostream s2(s);
	this->write(s2);
	s2.pass_data(s);
}

bool tl2::service5Long::EmptyOutput::read_boxed(::basictl::tl_istream & s) noexcept {
	if (!::tl2::details::Service5LongEmptyOutputReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

bool tl2::service5Long::EmptyOutput::write_boxed(::basictl::tl_ostream & s)const noexcept {
	if (!::tl2::details::Service5LongEmptyOutputWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

void tl2::service5Long::EmptyOutput::read_boxed_or_throw(::basictl::tl_throwable_istream & s) {
	::basictl::tl_istream s2(s);
	this->read_boxed(s2);
	s2.pass_data(s);
}

void tl2::service5Long::EmptyOutput::write_boxed_or_throw(::basictl::tl_throwable_ostream & s)const {
	::basictl::tl_ostream s2(s);
	this->write_boxed(s2);
	s2.pass_data(s);
}

void tl2::details::Service5LongEmptyOutputReset(::tl2::service5Long::EmptyOutput& item) noexcept {
}

bool tl2::details::Service5LongEmptyOutputWriteJSON(std::ostream& s, const ::tl2::service5Long::EmptyOutput& item) noexcept {
	s << "true";
	return true;
}

bool tl2::details::Service5LongEmptyOutputRead(::basictl::tl_istream & s, ::tl2::service5Long::EmptyOutput& item) noexcept {
	return true;
}

bool tl2::details::Service5LongEmptyOutputWrite(::basictl::tl_ostream & s, const ::tl2::service5Long::EmptyOutput& item) noexcept {
	return true;
}

bool tl2::details::Service5LongEmptyOutputReadBoxed(::basictl::tl_istream & s, ::tl2::service5Long::EmptyOutput& item) {
	if (!s.nat_read_exact_tag(0xff8f7db9)) { return false; }
	return tl2::details::Service5LongEmptyOutputRead(s, item);
}

bool tl2::details::Service5LongEmptyOutputWriteBoxed(::basictl::tl_ostream & s, const ::tl2::service5Long::EmptyOutput& item) {
	if (!s.nat_write(0xff8f7db9)) { return false; }
	return tl2::details::Service5LongEmptyOutputWrite(s, item);
}

static const std::string_view Service5LongOutput_tbl_tl_name[]{"service5Long.emptyOutput", "service5Long.stringOutput"};
static const uint32_t Service5LongOutput_tbl_tl_tag[]{0xff8f7db9, 0xdc170ff5};

bool tl2::service5Long::Output::write_json(std::ostream & s)const {
	if (!::tl2::details::Service5LongOutputWriteJSON(s, *this)) { return false; }
	return true;
}
bool tl2::service5Long::Output::read_boxed(::basictl::tl_istream & s) noexcept {
	if (!::tl2::details::Service5LongOutputReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
	return true;
}
bool tl2::service5Long::Output::write_boxed(::basictl::tl_ostream & s)const noexcept {
	if (!::tl2::details::Service5LongOutputWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
	return true;
}

void tl2::service5Long::Output::read_boxed_or_throw(::basictl::tl_throwable_istream & s) {
	::basictl::tl_istream s2(s);
	this->read_boxed(s2);
	s2.pass_data(s);
}

void tl2::service5Long::Output::write_boxed_or_throw(::basictl::tl_throwable_ostream & s)const {
	::basictl::tl_ostream s2(s);
	this->write_boxed(s2);
	s2.pass_data(s);
}

std::string_view tl2::service5Long::Output::tl_name() const {
	return Service5LongOutput_tbl_tl_name[value.index()];
}
uint32_t tl2::service5Long::Output::tl_tag() const {
	return Service5LongOutput_tbl_tl_tag[value.index()];
}


void tl2::details::Service5LongOutputReset(::tl2::service5Long::Output& item) noexcept{
	item.value.emplace<0>(); // TODO - optimize, if already 0, call Reset function
}

bool tl2::details::Service5LongOutputWriteJSON(std::ostream & s, const ::tl2::service5Long::Output& item) noexcept {
	s << "{";
	s << "\"type\":";
	s << "\"" << Service5LongOutput_tbl_tl_name[item.value.index()] << "\"";
	switch (item.value.index()) {
	case 1:
		s << ",\"value\":";
		if (!::tl2::details::Service5LongStringOutputWriteJSON(s, std::get<1>(item.value))) { return false; }
		break;
	}
	s << "}";
	return true;
}
bool tl2::details::Service5LongOutputReadBoxed(::basictl::tl_istream & s, ::tl2::service5Long::Output& item) noexcept {
	uint32_t nat;
	if (!s.nat_read(nat)) { return false; }
	switch (nat) {
	case 0xff8f7db9:
		if (item.value.index() != 0) { item.value.emplace<0>(); }
		break;
	case 0xdc170ff5:
		if (item.value.index() != 1) { item.value.emplace<1>(); }
		if (!::tl2::details::Service5LongStringOutputRead(s, std::get<1>(item.value))) { return s.set_error_unknown_scenario(); }
		break;
	default:
		return s.set_error_union_tag();
    }
	return true;
}

bool tl2::details::Service5LongOutputWriteBoxed(::basictl::tl_ostream & s, const ::tl2::service5Long::Output& item) noexcept{
	if (!s.nat_write(Service5LongOutput_tbl_tl_tag[item.value.index()])) { return false; }
	switch (item.value.index()) {
	case 1:
		if (!::tl2::details::Service5LongStringOutputWrite(s, std::get<1>(item.value))) { return s.set_error_unknown_scenario(); }
		break;
	}
	return true;
}

bool tl2::service5Long::StringOutput::write_json(std::ostream& s)const {
	if (!::tl2::details::Service5LongStringOutputWriteJSON(s, *this)) { return false; }
	return true;
}

bool tl2::service5Long::StringOutput::read(::basictl::tl_istream & s) noexcept {
	if (!::tl2::details::Service5LongStringOutputRead(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

bool tl2::service5Long::StringOutput::write(::basictl::tl_ostream & s)const noexcept {
	if (!::tl2::details::Service5LongStringOutputWrite(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

void tl2::service5Long::StringOutput::read_or_throw(::basictl::tl_throwable_istream & s) {
	::basictl::tl_istream s2(s);
	this->read(s2);
	s2.pass_data(s);
}

void tl2::service5Long::StringOutput::write_or_throw(::basictl::tl_throwable_ostream & s)const {
	::basictl::tl_ostream s2(s);
	this->write(s2);
	s2.pass_data(s);
}

bool tl2::service5Long::StringOutput::read_boxed(::basictl::tl_istream & s) noexcept {
	if (!::tl2::details::Service5LongStringOutputReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

bool tl2::service5Long::StringOutput::write_boxed(::basictl::tl_ostream & s)const noexcept {
	if (!::tl2::details::Service5LongStringOutputWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
	s.last_release();
	return true;
}

void tl2::service5Long::StringOutput::read_boxed_or_throw(::basictl::tl_throwable_istream & s) {
	::basictl::tl_istream s2(s);
	this->read_boxed(s2);
	s2.pass_data(s);
}

void tl2::service5Long::StringOutput::write_boxed_or_throw(::basictl::tl_throwable_ostream & s)const {
	::basictl::tl_ostream s2(s);
	this->write_boxed(s2);
	s2.pass_data(s);
}

void tl2::details::Service5LongStringOutputReset(::tl2::service5Long::StringOutput& item) noexcept {
	item.http_code = 0;
	item.response.clear();
}

bool tl2::details::Service5LongStringOutputWriteJSON(std::ostream& s, const ::tl2::service5Long::StringOutput& item) noexcept {
	auto add_comma = false;
	s << "{";
	if (item.http_code != 0) {
		add_comma = true;
		s << "\"http_code\":";
		s << item.http_code;
	}
	if (item.response.size() != 0) {
		if (add_comma) {
			s << ",";
		}
		add_comma = true;
		s << "\"response\":";
		s << "\"" << item.response << "\"";
	}
	s << "}";
	return true;
}

bool tl2::details::Service5LongStringOutputRead(::basictl::tl_istream & s, ::tl2::service5Long::StringOutput& item) noexcept {
	if (!s.long_read(item.http_code)) { return false; }
	if (!s.string_read(item.response)) { return false; }
	return true;
}

bool tl2::details::Service5LongStringOutputWrite(::basictl::tl_ostream & s, const ::tl2::service5Long::StringOutput& item) noexcept {
	if (!s.long_write(item.http_code)) { return false;}
	if (!s.string_write(item.response)) { return false;}
	return true;
}

bool tl2::details::Service5LongStringOutputReadBoxed(::basictl::tl_istream & s, ::tl2::service5Long::StringOutput& item) {
	if (!s.nat_read_exact_tag(0xdc170ff5)) { return false; }
	return tl2::details::Service5LongStringOutputRead(s, item);
}

bool tl2::details::Service5LongStringOutputWriteBoxed(::basictl::tl_ostream & s, const ::tl2::service5Long::StringOutput& item) {
	if (!s.nat_write(0xdc170ff5)) { return false; }
	return tl2::details::Service5LongStringOutputWrite(s, item);
}
