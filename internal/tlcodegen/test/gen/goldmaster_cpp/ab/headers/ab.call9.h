// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "ab/functions/ab.call9.h"
#include "__common_namespace/types/typeB.h"

namespace tlgen { namespace details { 

void AbCall9Reset(::tlgen::ab::Call9& item) noexcept;

bool AbCall9WriteJSON(std::ostream& s, const ::tlgen::ab::Call9& item) noexcept;
bool AbCall9Read(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call9& item) noexcept; 
bool AbCall9Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call9& item) noexcept;
bool AbCall9ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call9& item);
bool AbCall9WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call9& item);

bool AbCall9ReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::ab::Call9& item, ::tlgen::TypeB& result);
bool AbCall9WriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call9& item, const ::tlgen::TypeB& result);
    
}} // namespace tlgen::details

