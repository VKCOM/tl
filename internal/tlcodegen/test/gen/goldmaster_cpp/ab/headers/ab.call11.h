// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "ab/functions/ab.call11.h"
#include "a/types/a.Color.h"

namespace tlgen { namespace details { 

void AbCall11Reset(::tlgen::ab::Call11& item) noexcept;

bool AbCall11WriteJSON(std::ostream& s, const ::tlgen::ab::Call11& item) noexcept;
bool AbCall11Read(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call11& item) noexcept; 
bool AbCall11Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call11& item) noexcept;
bool AbCall11ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call11& item);
bool AbCall11WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call11& item);

bool AbCall11ReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call11& item, ::tlgen::a::Color& result);
bool AbCall11WriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::ab::Call11& item, ::tlgen::a::Color& result);
    
}} // namespace tlgen::details

