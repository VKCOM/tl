// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "ab/functions/ab.call3.h"
#include "__common_namespace/types/typeB.h"

namespace tlgen { namespace details { 

void AbCall3Reset(::tlgen::ab::Call3& item) noexcept;

bool AbCall3WriteJSON(std::ostream& s, const ::tlgen::ab::Call3& item) noexcept;
bool AbCall3Read(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call3& item) noexcept; 
bool AbCall3Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call3& item) noexcept;
bool AbCall3ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call3& item);
bool AbCall3WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call3& item);

bool AbCall3ReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::ab::Call3& item, ::tlgen::TypeB& result);
bool AbCall3WriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call3& item, const ::tlgen::TypeB& result);
    
}} // namespace tlgen::details

