// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "ab/functions/ab.call1.h"
#include "ab/types/ab.typeB.h"

namespace tlgen { namespace details { 

void AbCall1Reset(::tlgen::ab::Call1& item) noexcept;

bool AbCall1WriteJSON(std::ostream& s, const ::tlgen::ab::Call1& item) noexcept;
bool AbCall1Read(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call1& item) noexcept; 
bool AbCall1Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call1& item) noexcept;
bool AbCall1ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call1& item);
bool AbCall1WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call1& item);

bool AbCall1ReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::ab::Call1& item, ::tlgen::ab::TypeB& result);
bool AbCall1WriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call1& item, const ::tlgen::ab::TypeB& result);
    
}} // namespace tlgen::details

