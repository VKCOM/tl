// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "ab/functions/ab.call1.h"
#include "ab/types/ab.typeB.h"

namespace tl2 { namespace details { 

void AbCall1Reset(::tl2::ab::Call1& item) noexcept;

bool AbCall1WriteJSON(std::ostream& s, const ::tl2::ab::Call1& item) noexcept;
bool AbCall1Read(::basictl::tl_istream & s, ::tl2::ab::Call1& item) noexcept; 
bool AbCall1Write(::basictl::tl_ostream & s, const ::tl2::ab::Call1& item) noexcept;
bool AbCall1ReadBoxed(::basictl::tl_istream & s, ::tl2::ab::Call1& item);
bool AbCall1WriteBoxed(::basictl::tl_ostream & s, const ::tl2::ab::Call1& item);

bool AbCall1ReadResult(::basictl::tl_istream & s, ::tl2::ab::Call1& item, ::tl2::ab::TypeB& result);
bool AbCall1WriteResult(::basictl::tl_ostream & s, ::tl2::ab::Call1& item, ::tl2::ab::TypeB& result);
		
}} // namespace tl2::details

