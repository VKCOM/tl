// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "ab/types/ab.Response.h"

namespace tlgen { namespace details { 

void AbResponseReset(::tlgen::ab::Response& item) noexcept;

bool AbResponseWriteJSON(std::ostream & s, const ::tlgen::ab::Response& item) noexcept;
bool AbResponseReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Response& item) noexcept;
bool AbResponseWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Response& item) noexcept;

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void BuiltinTupleAbResponseReset(std::vector<::tlgen::ab::Response>& item);

bool BuiltinTupleAbResponseWriteJSON(std::ostream & s, const std::vector<::tlgen::ab::Response>& item, [[maybe_unused]] uint32_t nat_n);
bool BuiltinTupleAbResponseRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::ab::Response>& item, [[maybe_unused]] uint32_t nat_n);
bool BuiltinTupleAbResponseWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::ab::Response>& item, [[maybe_unused]] uint32_t nat_n);

}} // namespace tlgen::details

