// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "ab/functions/ab.call4.h"
#include "ab/types/ab.typeB.h"

namespace tlgen { namespace details { 

void AbCall4Reset(::tlgen::ab::Call4& item) noexcept;

bool AbCall4WriteJSON(std::ostream& s, const ::tlgen::ab::Call4& item) noexcept;
bool AbCall4Read(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call4& item) noexcept; 
bool AbCall4Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call4& item) noexcept;
bool AbCall4ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call4& item);
bool AbCall4WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::ab::Call4& item);

bool AbCall4ReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::ab::Call4& item, ::tlgen::ab::TypeB& result);
bool AbCall4WriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::ab::Call4& item, ::tlgen::ab::TypeB& result);
    
}} // namespace tlgen::details

