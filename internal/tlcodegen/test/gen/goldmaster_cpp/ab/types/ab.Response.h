// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "cd/types/cd.response.h"
#include "ab/types/ab.empty.h"
#include "ab/types/ab.code.h"
#include "ab/types/ab.alias.h"


namespace tl2 { namespace ab { 
struct Response {
	std::variant<::tl2::ab::Empty, ::tl2::ab::Code, ::tl2::ab::Alias, ::tl2::cd::Response> value;

	bool is_empty() const { return value.index() == 0; }
	bool is_code() const { return value.index() == 1; }
	bool is_alias() const { return value.index() == 2; }
	bool is_response() const { return value.index() == 3; }

	void set_empty() { value.emplace<0>(); }

	std::string_view tl_name() const;
	uint32_t tl_tag() const;

	bool write_json(std::ostream& s)const;

	bool read_boxed(::basictl::tl_istream & s) noexcept;
	bool write_boxed(::basictl::tl_ostream & s)const noexcept;
	
	void read_boxed_or_throw(::basictl::tl_throwable_istream & s);
	void write_boxed_or_throw(::basictl::tl_throwable_ostream & s)const;
};

}} // namespace tl2::ab

