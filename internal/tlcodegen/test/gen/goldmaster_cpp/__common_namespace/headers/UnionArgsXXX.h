// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/UnionArgsXXX.h"

namespace tlgen { namespace details { 

void UnionArgsXXXIntReset(::tlgen::UnionArgsXXX<int32_t>& item) noexcept;

bool UnionArgsXXXIntWriteJSON(std::ostream & s, const ::tlgen::UnionArgsXXX<int32_t>& item, [[maybe_unused]] uint32_t nat_Y) noexcept;
bool UnionArgsXXXIntReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::UnionArgsXXX<int32_t>& item, [[maybe_unused]] uint32_t nat_Y) noexcept;
bool UnionArgsXXXIntWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::UnionArgsXXX<int32_t>& item, [[maybe_unused]] uint32_t nat_Y) noexcept;

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void UnionArgsXXXLongReset(::tlgen::UnionArgsXXX<int64_t>& item) noexcept;

bool UnionArgsXXXLongWriteJSON(std::ostream & s, const ::tlgen::UnionArgsXXX<int64_t>& item, [[maybe_unused]] uint32_t nat_Y) noexcept;
bool UnionArgsXXXLongReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::UnionArgsXXX<int64_t>& item, [[maybe_unused]] uint32_t nat_Y) noexcept;
bool UnionArgsXXXLongWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::UnionArgsXXX<int64_t>& item, [[maybe_unused]] uint32_t nat_Y) noexcept;

}} // namespace tlgen::details

