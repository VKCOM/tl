// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/int.h"

namespace tl2 { namespace details { 

void BuiltinTuple0IntReset(std::array<int32_t, 0>& item);

bool BuiltinTuple0IntWriteJSON(std::ostream & s, const std::array<int32_t, 0>& item);
bool BuiltinTuple0IntRead(::basictl::tl_istream & s, std::array<int32_t, 0>& item);
bool BuiltinTuple0IntWrite(::basictl::tl_ostream & s, const std::array<int32_t, 0>& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinTuple0IntBoxedReset(std::array<int32_t, 0>& item);

bool BuiltinTuple0IntBoxedWriteJSON(std::ostream & s, const std::array<int32_t, 0>& item);
bool BuiltinTuple0IntBoxedRead(::basictl::tl_istream & s, std::array<int32_t, 0>& item);
bool BuiltinTuple0IntBoxedWrite(::basictl::tl_ostream & s, const std::array<int32_t, 0>& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinTuple3IntReset(std::array<int32_t, 3>& item);

bool BuiltinTuple3IntWriteJSON(std::ostream & s, const std::array<int32_t, 3>& item);
bool BuiltinTuple3IntRead(::basictl::tl_istream & s, std::array<int32_t, 3>& item);
bool BuiltinTuple3IntWrite(::basictl::tl_ostream & s, const std::array<int32_t, 3>& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinTuple3IntBoxedReset(std::array<int32_t, 3>& item);

bool BuiltinTuple3IntBoxedWriteJSON(std::ostream & s, const std::array<int32_t, 3>& item);
bool BuiltinTuple3IntBoxedRead(::basictl::tl_istream & s, std::array<int32_t, 3>& item);
bool BuiltinTuple3IntBoxedWrite(::basictl::tl_ostream & s, const std::array<int32_t, 3>& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinTupleIntReset(std::vector<int32_t>& item);

bool BuiltinTupleIntWriteJSON(std::ostream & s, const std::vector<int32_t>& item, uint32_t nat_n);
bool BuiltinTupleIntRead(::basictl::tl_istream & s, std::vector<int32_t>& item, uint32_t nat_n);
bool BuiltinTupleIntWrite(::basictl::tl_ostream & s, const std::vector<int32_t>& item, uint32_t nat_n);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinTupleTuple3IntReset(std::vector<std::array<int32_t, 3>>& item);

bool BuiltinTupleTuple3IntWriteJSON(std::ostream & s, const std::vector<std::array<int32_t, 3>>& item, uint32_t nat_n);
bool BuiltinTupleTuple3IntRead(::basictl::tl_istream & s, std::vector<std::array<int32_t, 3>>& item, uint32_t nat_n);
bool BuiltinTupleTuple3IntWrite(::basictl::tl_ostream & s, const std::vector<std::array<int32_t, 3>>& item, uint32_t nat_n);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinTupleTupleIntReset(std::vector<std::vector<int32_t>>& item);

bool BuiltinTupleTupleIntWriteJSON(std::ostream & s, const std::vector<std::vector<int32_t>>& item, uint32_t nat_n, uint32_t nat_t);
bool BuiltinTupleTupleIntRead(::basictl::tl_istream & s, std::vector<std::vector<int32_t>>& item, uint32_t nat_n, uint32_t nat_t);
bool BuiltinTupleTupleIntWrite(::basictl::tl_ostream & s, const std::vector<std::vector<int32_t>>& item, uint32_t nat_n, uint32_t nat_t);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinVectorIntReset(std::vector<int32_t>& item);

bool BuiltinVectorIntWriteJSON(std::ostream & s, const std::vector<int32_t>& item);
bool BuiltinVectorIntRead(::basictl::tl_istream & s, std::vector<int32_t>& item);
bool BuiltinVectorIntWrite(::basictl::tl_ostream & s, const std::vector<int32_t>& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinVectorVectorIntReset(std::vector<std::vector<int32_t>>& item);

bool BuiltinVectorVectorIntWriteJSON(std::ostream & s, const std::vector<std::vector<int32_t>>& item);
bool BuiltinVectorVectorIntRead(::basictl::tl_istream & s, std::vector<std::vector<int32_t>>& item);
bool BuiltinVectorVectorIntWrite(::basictl::tl_ostream & s, const std::vector<std::vector<int32_t>>& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void BuiltinVectorVectorVectorIntReset(std::vector<std::vector<std::vector<int32_t>>>& item);

bool BuiltinVectorVectorVectorIntWriteJSON(std::ostream & s, const std::vector<std::vector<std::vector<int32_t>>>& item);
bool BuiltinVectorVectorVectorIntRead(::basictl::tl_istream & s, std::vector<std::vector<std::vector<int32_t>>>& item);
bool BuiltinVectorVectorVectorIntWrite(::basictl::tl_ostream & s, const std::vector<std::vector<std::vector<int32_t>>>& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

void IntReset(int32_t& item) noexcept;

bool IntWriteJSON(std::ostream& s, const int32_t& item) noexcept;
bool IntRead(::basictl::tl_istream & s, int32_t& item) noexcept; 
bool IntWrite(::basictl::tl_ostream & s, const int32_t& item) noexcept;
bool IntReadBoxed(::basictl::tl_istream & s, int32_t& item);
bool IntWriteBoxed(::basictl::tl_ostream & s, const int32_t& item);

}} // namespace tl2::details

namespace tl2 { namespace details { 

bool IntBoxedMaybeWriteJSON(std::ostream & s, const std::optional<int32_t>& item);

bool IntBoxedMaybeReadBoxed(::basictl::tl_istream & s, std::optional<int32_t>& item);
bool IntBoxedMaybeWriteBoxed(::basictl::tl_ostream & s, const std::optional<int32_t>& item);


}} // namespace tl2::details

namespace tl2 { namespace details { 

bool IntMaybeWriteJSON(std::ostream & s, const std::optional<int32_t>& item);

bool IntMaybeReadBoxed(::basictl::tl_istream & s, std::optional<int32_t>& item);
bool IntMaybeWriteBoxed(::basictl::tl_ostream & s, const std::optional<int32_t>& item);


}} // namespace tl2::details

