// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/pair.h"
#include "__common_namespace/types/multiPoint.h"
#include "__common_namespace/types/dictionaryElemUgly.h"
#include "__common_namespace/types/dictionaryElem.h"
#include "a/types/a.Color.h"


namespace tlgen { 
struct UseDictUgly {
  uint32_t n = 0;
  std::vector<::tlgen::DictionaryElemUgly<int32_t, std::string>> a;
  std::map<uint32_t, std::string> b;
  std::vector<::tlgen::DictionaryElem<::tlgen::Pair<int32_t, int32_t>, int32_t>> c;
  std::vector<::tlgen::DictionaryElem<std::vector<std::string>, int32_t>> d;
  std::vector<::tlgen::DictionaryElem<::tlgen::Pair<bool, ::tlgen::a::Color>, int32_t>> e;
  std::vector<::tlgen::DictionaryElem<::tlgen::Pair<float, double>, int32_t>> f;
  std::vector<::tlgen::DictionaryElem<::tlgen::Pair<int32_t, ::tlgen::Pair<::tlgen::MultiPoint, std::string>>, int32_t>> g;
  std::map<int32_t, ::tlgen::Pair<int32_t, int32_t>> x;
  std::map<int64_t, ::tlgen::Pair<int32_t, int32_t>> y;
  std::map<std::string, ::tlgen::Pair<int32_t, int32_t>> z;

  std::string_view tl_name() const { return "useDictUgly"; }
  uint32_t tl_tag() const { return 0xfb9ce817; }

  bool write_json(std::ostream& s) const;

  bool read(::tlgen::basictl::tl_istream & s) noexcept;
  bool write(::tlgen::basictl::tl_ostream & s) const noexcept;

  void read(::tlgen::basictl::tl_throwable_istream & s);
  void write(::tlgen::basictl::tl_throwable_ostream & s) const;

  bool read_boxed(::tlgen::basictl::tl_istream & s) noexcept;
  bool write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept;
  
  void read_boxed(::tlgen::basictl::tl_throwable_istream & s);
  void write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const;

  friend std::ostream& operator<<(std::ostream& s, const UseDictUgly& rhs) {
    rhs.write_json(s);
    return s;
  }
};

} // namespace tlgen

