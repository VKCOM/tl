// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/myInt32.h"
#include "__common_namespace/types/int32.h"


namespace tlgen { 
struct NativeWrappers {
  int32_t a = 0;
  int32_t b = 0;
  ::tlgen::Int32 c{};
  ::tlgen::Int32 d{};
  ::tlgen::MyInt32 e{};
  ::tlgen::MyInt32 f{};

  std::string_view tl_name() const { return "nativeWrappers"; }
  uint32_t tl_tag() const { return 0x344ddf50; }

  bool write_json(std::ostream& s) const;

  bool read(::tlgen::basictl::tl_istream & s) noexcept;
  bool write(::tlgen::basictl::tl_ostream & s) const noexcept;

  void read(::tlgen::basictl::tl_throwable_istream & s);
  void write(::tlgen::basictl::tl_throwable_ostream & s) const;

  bool read_boxed(::tlgen::basictl::tl_istream & s) noexcept;
  bool write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept;
  
  void read_boxed(::tlgen::basictl::tl_throwable_istream & s);
  void write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const;

  friend std::ostream& operator<<(std::ostream& s, const NativeWrappers& rhs) {
    rhs.write_json(s);
    return s;
  }
};

} // namespace tlgen

