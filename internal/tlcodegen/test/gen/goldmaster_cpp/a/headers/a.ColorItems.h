// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "a/types/a.ColorItems.h"

namespace tlgen { namespace details { 

void ABlueReset(::tlgen::a::Blue& item) noexcept;

bool ABlueWriteJSON(std::ostream& s, const ::tlgen::a::Blue& item) noexcept;
bool ABlueRead(::tlgen::basictl::tl_istream & s, ::tlgen::a::Blue& item) noexcept; 
bool ABlueWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Blue& item) noexcept;
bool ABlueReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::a::Blue& item);
bool ABlueWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Blue& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void AColor0Reset(::tlgen::a::Color0& item) noexcept;

bool AColor0WriteJSON(std::ostream& s, const ::tlgen::a::Color0& item) noexcept;
bool AColor0Read(::tlgen::basictl::tl_istream & s, ::tlgen::a::Color0& item) noexcept; 
bool AColor0Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Color0& item) noexcept;
bool AColor0ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::a::Color0& item);
bool AColor0WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Color0& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void AGreenReset(::tlgen::a::Green& item) noexcept;

bool AGreenWriteJSON(std::ostream& s, const ::tlgen::a::Green& item) noexcept;
bool AGreenRead(::tlgen::basictl::tl_istream & s, ::tlgen::a::Green& item) noexcept; 
bool AGreenWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Green& item) noexcept;
bool AGreenReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::a::Green& item);
bool AGreenWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Green& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void ARedReset(::tlgen::a::Red& item) noexcept;

bool ARedWriteJSON(std::ostream& s, const ::tlgen::a::Red& item) noexcept;
bool ARedRead(::tlgen::basictl::tl_istream & s, ::tlgen::a::Red& item) noexcept; 
bool ARedWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Red& item) noexcept;
bool ARedReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::a::Red& item);
bool ARedWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::a::Red& item);

}} // namespace tlgen::details

