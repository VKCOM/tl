// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/dictionaryElemUgly.h"

namespace tlgen { namespace details { 

void BuiltinVectorDictionaryElemUglyIntStringReset(std::vector<::tlgen::DictionaryElemUgly<int32_t, std::string>>& item);

bool BuiltinVectorDictionaryElemUglyIntStringWriteJSON(std::ostream & s, const std::vector<::tlgen::DictionaryElemUgly<int32_t, std::string>>& item, [[maybe_unused]] uint32_t nat_t);
bool BuiltinVectorDictionaryElemUglyIntStringRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::DictionaryElemUgly<int32_t, std::string>>& item, [[maybe_unused]] uint32_t nat_t);
bool BuiltinVectorDictionaryElemUglyIntStringWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::DictionaryElemUgly<int32_t, std::string>>& item, [[maybe_unused]] uint32_t nat_t);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void DictionaryElemUglyIntStringReset(::tlgen::DictionaryElemUgly<int32_t, std::string>& item) noexcept;

bool DictionaryElemUglyIntStringWriteJSON(std::ostream& s, const ::tlgen::DictionaryElemUgly<int32_t, std::string>& item, [[maybe_unused]] uint32_t nat_f) noexcept;
bool DictionaryElemUglyIntStringRead(::tlgen::basictl::tl_istream & s, ::tlgen::DictionaryElemUgly<int32_t, std::string>& item, [[maybe_unused]] uint32_t nat_f) noexcept; 
bool DictionaryElemUglyIntStringWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::DictionaryElemUgly<int32_t, std::string>& item, [[maybe_unused]] uint32_t nat_f) noexcept;
bool DictionaryElemUglyIntStringReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::DictionaryElemUgly<int32_t, std::string>& item, [[maybe_unused]] uint32_t nat_f);
bool DictionaryElemUglyIntStringWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::DictionaryElemUgly<int32_t, std::string>& item, [[maybe_unused]] uint32_t nat_f);

}} // namespace tlgen::details

