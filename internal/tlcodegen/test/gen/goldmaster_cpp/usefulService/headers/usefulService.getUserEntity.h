// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "usefulService/functions/usefulService.getUserEntity.h"
#include "usefulService/types/usefulService.getUserEntityResult.h"

namespace tlgen { namespace details { 

void UsefulServiceGetUserEntityReset(::tlgen::usefulService::GetUserEntity& item) noexcept;

bool UsefulServiceGetUserEntityWriteJSON(std::ostream& s, const ::tlgen::usefulService::GetUserEntity& item) noexcept;
bool UsefulServiceGetUserEntityRead(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntity& item) noexcept; 
bool UsefulServiceGetUserEntityWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntity& item) noexcept;
bool UsefulServiceGetUserEntityReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntity& item);
bool UsefulServiceGetUserEntityWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntity& item);

bool UsefulServiceGetUserEntityReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::usefulService::GetUserEntity& item, std::optional<::tlgen::usefulService::GetUserEntityResult>& result);
bool UsefulServiceGetUserEntityWriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntity& item, const std::optional<::tlgen::usefulService::GetUserEntityResult>& result);
    
}} // namespace tlgen::details

