// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/vector.h"
#include "usefulService/types/usefulService.userEntityPaymentItem.h"
#include "__common_namespace/types/dictionaryField.h"

namespace tl2 { namespace details { 

void VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedReset(std::map<std::string, ::tl2::usefulService::UserEntityPaymentItem>& item) noexcept;

bool VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteJSON(std::ostream& s, const std::map<std::string, ::tl2::usefulService::UserEntityPaymentItem>& item, uint32_t nat_t) noexcept;
bool VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(::basictl::tl_istream & s, std::map<std::string, ::tl2::usefulService::UserEntityPaymentItem>& item, uint32_t nat_t) noexcept; 
bool VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(::basictl::tl_ostream & s, const std::map<std::string, ::tl2::usefulService::UserEntityPaymentItem>& item, uint32_t nat_t) noexcept;
bool VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedReadBoxed(::basictl::tl_istream & s, std::map<std::string, ::tl2::usefulService::UserEntityPaymentItem>& item, uint32_t nat_t);
bool VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteBoxed(::basictl::tl_ostream & s, const std::map<std::string, ::tl2::usefulService::UserEntityPaymentItem>& item, uint32_t nat_t);

}} // namespace tl2::details

