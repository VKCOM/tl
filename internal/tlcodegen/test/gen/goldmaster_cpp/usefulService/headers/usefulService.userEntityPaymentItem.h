// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "usefulService/types/usefulService.userEntityPaymentItem.h"

namespace tlgen { namespace details { 

void UsefulServiceUserEntityPaymentItemReset(::tlgen::usefulService::UserEntityPaymentItem& item) noexcept;

bool UsefulServiceUserEntityPaymentItemWriteJSON(std::ostream& s, const ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept;
bool UsefulServiceUserEntityPaymentItemRead(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept; 
bool UsefulServiceUserEntityPaymentItemWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept;
bool UsefulServiceUserEntityPaymentItemReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask);
bool UsefulServiceUserEntityPaymentItemWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask);

}} // namespace tlgen::details

