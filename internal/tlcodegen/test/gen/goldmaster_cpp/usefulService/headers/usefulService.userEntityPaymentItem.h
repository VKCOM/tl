// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "usefulService/types/usefulService.userEntityPaymentItem.h"

namespace tl2 { namespace details { 

void UsefulServiceUserEntityPaymentItemReset(::tl2::usefulService::UserEntityPaymentItem& item) noexcept;

bool UsefulServiceUserEntityPaymentItemWriteJSON(std::ostream& s, const ::tl2::usefulService::UserEntityPaymentItem& item, uint32_t nat_fields_mask) noexcept;
bool UsefulServiceUserEntityPaymentItemRead(::basictl::tl_istream & s, ::tl2::usefulService::UserEntityPaymentItem& item, uint32_t nat_fields_mask) noexcept; 
bool UsefulServiceUserEntityPaymentItemWrite(::basictl::tl_ostream & s, const ::tl2::usefulService::UserEntityPaymentItem& item, uint32_t nat_fields_mask) noexcept;
bool UsefulServiceUserEntityPaymentItemReadBoxed(::basictl::tl_istream & s, ::tl2::usefulService::UserEntityPaymentItem& item, uint32_t nat_fields_mask);
bool UsefulServiceUserEntityPaymentItemWriteBoxed(::basictl::tl_ostream & s, const ::tl2::usefulService::UserEntityPaymentItem& item, uint32_t nat_fields_mask);

}} // namespace tl2::details

