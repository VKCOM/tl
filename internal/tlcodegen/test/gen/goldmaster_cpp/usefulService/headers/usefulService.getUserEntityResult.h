// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "usefulService/types/usefulService.getUserEntityResult.h"

namespace tlgen { namespace details { 

void UsefulServiceGetUserEntityResultReset(::tlgen::usefulService::GetUserEntityResult& item) noexcept;

bool UsefulServiceGetUserEntityResultWriteJSON(std::ostream& s, const ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept;
bool UsefulServiceGetUserEntityResultRead(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept; 
bool UsefulServiceGetUserEntityResultWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept;
bool UsefulServiceGetUserEntityResultReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask);
bool UsefulServiceGetUserEntityResultWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

bool UsefulServiceGetUserEntityResultBoxedMaybeWriteJSON(std::ostream & s, const std::optional<::tlgen::usefulService::GetUserEntityResult>& item, [[maybe_unused]] uint32_t nat_t);

bool UsefulServiceGetUserEntityResultBoxedMaybeReadBoxed(::tlgen::basictl::tl_istream & s, std::optional<::tlgen::usefulService::GetUserEntityResult>& item, [[maybe_unused]] uint32_t nat_t);
bool UsefulServiceGetUserEntityResultBoxedMaybeWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::optional<::tlgen::usefulService::GetUserEntityResult>& item, [[maybe_unused]] uint32_t nat_t);


}} // namespace tlgen::details

