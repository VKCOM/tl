// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "usefulService/types/usefulService.userEntityPaymentItemPromo.h"

namespace tl2 { namespace details { 

void UsefulServiceUserEntityPaymentItemPromoReset(::tl2::usefulService::UserEntityPaymentItemPromo& item) noexcept;

bool UsefulServiceUserEntityPaymentItemPromoWriteJSON(std::ostream& s, const ::tl2::usefulService::UserEntityPaymentItemPromo& item, uint32_t nat_fields_mask) noexcept;
bool UsefulServiceUserEntityPaymentItemPromoRead(::basictl::tl_istream & s, ::tl2::usefulService::UserEntityPaymentItemPromo& item, uint32_t nat_fields_mask) noexcept; 
bool UsefulServiceUserEntityPaymentItemPromoWrite(::basictl::tl_ostream & s, const ::tl2::usefulService::UserEntityPaymentItemPromo& item, uint32_t nat_fields_mask) noexcept;
bool UsefulServiceUserEntityPaymentItemPromoReadBoxed(::basictl::tl_istream & s, ::tl2::usefulService::UserEntityPaymentItemPromo& item, uint32_t nat_fields_mask);
bool UsefulServiceUserEntityPaymentItemPromoWriteBoxed(::basictl::tl_ostream & s, const ::tl2::usefulService::UserEntityPaymentItemPromo& item, uint32_t nat_fields_mask);

}} // namespace tl2::details

namespace tl2 { namespace details { 

bool UsefulServiceUserEntityPaymentItemPromoBoxedMaybeWriteJSON(std::ostream & s, const std::optional<::tl2::usefulService::UserEntityPaymentItemPromo>& item, uint32_t nat_t);

bool UsefulServiceUserEntityPaymentItemPromoBoxedMaybeReadBoxed(::basictl::tl_istream & s, std::optional<::tl2::usefulService::UserEntityPaymentItemPromo>& item, uint32_t nat_t);
bool UsefulServiceUserEntityPaymentItemPromoBoxedMaybeWriteBoxed(::basictl::tl_ostream & s, const std::optional<::tl2::usefulService::UserEntityPaymentItemPromo>& item, uint32_t nat_t);


}} // namespace tl2::details

