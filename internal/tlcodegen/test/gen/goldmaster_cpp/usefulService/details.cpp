// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#include "usefulService/headers/usefulService_vector.h"
#include "usefulService/headers/usefulService.getUserEntityResult.h"
#include "usefulService/headers/usefulService.userEntityPaymentItem.h"
#include "usefulService/headers/usefulService.userEntityPaymentItemPromo.h"
#include "usefulService/headers/usefulService.getUserEntity.h"
#include "usefulService/headers/usefulService_dictionary.h"
#include "usefulService/headers/usefulService_dictionaryField.h"


void tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedReset(std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item) {
  item.clear(); // TODO - unwrap
}

bool tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteJSON(std::ostream & s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  s << "{";
  size_t index = 0;
  for(const auto & el : item) {
    s << "\"" << el.first << "\"";
    s << ":";
    if (!::tlgen::details::UsefulServiceUserEntityPaymentItemWriteJSON(s, el.second, nat_t)) { return false; }
    if (index != item.size() - 1) {
      s << ",";
    }
    index++;
  }
  s << "}";
  return true;
}

bool tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(::tlgen::basictl::tl_istream & s, std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  uint32_t len = 0;
  if (!s.nat_read(len)) { return false; }
  item.clear();
  for(uint32_t i = 0; i < len; i++) {
    ::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem> el;
    if (!::tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(s, el, nat_t)) { return s.set_error_unknown_scenario(); }
    item[el.key] = el.value;
  }
  return true;
}

bool tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(::tlgen::basictl::tl_ostream & s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_write(item.size())) { return false; }
  for(const auto & el : item) {
    ::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem> el2{.key= el.first, .value= el.second};
    if (!::tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(s, el2, nat_t)) { return s.set_error_unknown_scenario(); }
  }
  return true;
}

void tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedReset(::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem>& item) noexcept {
  (void)item;
  item.key.clear();
  ::tlgen::details::UsefulServiceUserEntityPaymentItemReset(item.value);
}

bool tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteJSON(std::ostream& s, const ::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.key.size() != 0) {
    add_comma = true;
    s << "\"key\":";
    s << "\"" << item.key << "\"";
  }
  if (add_comma) {
    s << ",";
  }
  add_comma = true;
  s << "\"value\":";
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemWriteJSON(s, item.value, nat_t)) { return false; }
  s << "}";
  return true;
}

bool tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(::tlgen::basictl::tl_istream & s, ::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!s.string_read(item.key)) { return false; }
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemReadBoxed(s, item.value, nat_t)) { return s.set_error_unknown_scenario(); }
  return true;
}

bool tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!s.string_write(item.key)) { return false;}
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemWriteBoxed(s, item.value, nat_t)) { return s.set_error_unknown_scenario(); }
  return true;
}

bool tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_read_exact_tag(0x239c1b62)) { return false; }
  return tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(s, item, nat_t);
}

bool tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::DictionaryField<::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_write(0x239c1b62)) { return false; }
  return tlgen::details::DictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(s, item, nat_t);
}

void tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedReset(std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item) noexcept {
  (void)item;
  item.clear();
}

bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedWriteJSON(std::ostream& s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteJSON(s, item, nat_t)) { return false; }
  return true;
}

bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedRead(::tlgen::basictl::tl_istream & s, std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(s, item, nat_t)) { return false; }
  return true;
}

bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedWrite(::tlgen::basictl::tl_ostream & s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(s, item, nat_t)) { return false; }
  return true;
}

bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedReadBoxed(::tlgen::basictl::tl_istream & s, std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_read_exact_tag(0x1f4c618f)) { return false; }
  return tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedRead(s, item, nat_t);
}

bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_write(0x1f4c618f)) { return false; }
  return tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedWrite(s, item, nat_t);
}

bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedBoxedMaybeWriteJSON(std::ostream & s, const std::optional<std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>>& item, [[maybe_unused]] uint32_t nat_t) {
  s << "{";
  if (item) {
    s << "\"ok\":true";
    if((*item).size() != 0) {
      s << ",\"value\":";
      if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteJSON(s, *item, nat_t)) { return false; }
    }
  }
  s << "}";
  return true;
}
bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedBoxedMaybeReadBoxed(::tlgen::basictl::tl_istream & s, std::optional<std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>>& item, [[maybe_unused]] uint32_t nat_t) {
  bool has_item = false;
  if (!s.bool_read(has_item, 0x27930a7b, 0x3f9c8ef8)) { return false; }
  if (has_item) {
    if (!item) {
      item.emplace();
    }
    if (!s.nat_read_exact_tag(0x1f4c618f)) { return false; }
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(s, *item, nat_t)) { return false; }
    return true;
  }
  item.reset();
  return true;
}

bool tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedBoxedMaybeWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::optional<std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_write(item ? 0x3f9c8ef8 : 0x27930a7b)) { return false; }
  if (item) {
    if (!s.nat_write(0x1f4c618f)) { return false; }
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(s, *item, nat_t)) { return false; }
  }
  return true;
}

bool tlgen::usefulService::GetUserEntity::write_json(std::ostream& s)const {
  if (!::tlgen::details::UsefulServiceGetUserEntityWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::usefulService::GetUserEntity::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::GetUserEntity::write(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::GetUserEntity::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::usefulService::GetUserEntity::write(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::usefulService::GetUserEntity::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::GetUserEntity::write_boxed(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::GetUserEntity::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::usefulService::GetUserEntity::write_boxed(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::UsefulServiceGetUserEntityReset(::tlgen::usefulService::GetUserEntity& item) noexcept {
  (void)item;
  item.fields_mask = 0;
  item.stage_id.clear();
}

bool tlgen::details::UsefulServiceGetUserEntityWriteJSON(std::ostream& s, const ::tlgen::usefulService::GetUserEntity& item) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.fields_mask != 0) {
    add_comma = true;
    s << "\"fields_mask\":";
    s << item.fields_mask;
  }
  if ((item.fields_mask & (1<<0)) != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"stage_id\":";
    s << "\"" << item.stage_id << "\"";
  }
  s << "}";
  return true;
}

bool tlgen::details::UsefulServiceGetUserEntityRead(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntity& item) noexcept {
  (void)s;
  (void)item;
  if (!s.nat_read(item.fields_mask)) { return false; }
  if ((item.fields_mask & (1<<0)) != 0) {
    if (!s.string_read(item.stage_id)) { return false; }
  } else {
      item.stage_id.clear();
  }
  return true;
}

bool tlgen::details::UsefulServiceGetUserEntityWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntity& item) noexcept {
  (void)s;
  (void)item;
  if (!s.nat_write(item.fields_mask)) { return false;}
  if ((item.fields_mask & (1<<0)) != 0) {
      if (!s.string_write(item.stage_id)) { return false;}
  }
  return true;
}

bool tlgen::details::UsefulServiceGetUserEntityReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntity& item) {
  if (!s.nat_read_exact_tag(0x3c857e52)) { return false; }
  return tlgen::details::UsefulServiceGetUserEntityRead(s, item);
}

bool tlgen::details::UsefulServiceGetUserEntityWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntity& item) {
  if (!s.nat_write(0x3c857e52)) { return false; }
  return tlgen::details::UsefulServiceGetUserEntityWrite(s, item);
}

bool tlgen::details::UsefulServiceGetUserEntityReadResult(::tlgen::basictl::tl_istream & s, const tlgen::usefulService::GetUserEntity& item, std::optional<::tlgen::usefulService::GetUserEntityResult>& result) {
  (void)s;
  (void)item;
  (void)result;
  if (!::tlgen::details::UsefulServiceGetUserEntityResultBoxedMaybeReadBoxed(s, result, item.fields_mask)) { return false; }
  return true;
}
bool tlgen::details::UsefulServiceGetUserEntityWriteResult(::tlgen::basictl::tl_ostream & s, const tlgen::usefulService::GetUserEntity& item, const std::optional<::tlgen::usefulService::GetUserEntityResult>& result) {
  (void)s;
  (void)item;
  (void)result;
  if (!::tlgen::details::UsefulServiceGetUserEntityResultBoxedMaybeWriteBoxed(s, result, item.fields_mask)) { return false; }
  return true;
}

bool tlgen::usefulService::GetUserEntity::read_result(::tlgen::basictl::tl_istream & s, std::optional<::tlgen::usefulService::GetUserEntityResult> & result) const noexcept {
  bool success = tlgen::details::UsefulServiceGetUserEntityReadResult(s, *this, result);
  s.sync();
  return success;
}
bool tlgen::usefulService::GetUserEntity::write_result(::tlgen::basictl::tl_ostream & s, const std::optional<::tlgen::usefulService::GetUserEntityResult> & result) const noexcept {
  bool success = tlgen::details::UsefulServiceGetUserEntityWriteResult(s, *this, result);
  s.sync();
  return success;
}

void tlgen::usefulService::GetUserEntity::read_result(::tlgen::basictl::tl_throwable_istream & s, std::optional<::tlgen::usefulService::GetUserEntityResult> & result) const {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_result(s2, result);
  s2.pass_data(s);
}
void tlgen::usefulService::GetUserEntity::write_result(::tlgen::basictl::tl_throwable_ostream & s, const std::optional<::tlgen::usefulService::GetUserEntityResult> & result) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_result(s2, result);
  s2.pass_data(s);
}

bool tlgen::usefulService::GetUserEntityResult::write_json(std::ostream& s, [[maybe_unused]] uint32_t nat_fields_mask)const {
  if (!::tlgen::details::UsefulServiceGetUserEntityResultWriteJSON(s, *this, nat_fields_mask)) { return false; }
  return true;
}

bool tlgen::usefulService::GetUserEntityResult::read(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityResultRead(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::GetUserEntityResult::write(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityResultWrite(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::GetUserEntityResult::read(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::usefulService::GetUserEntityResult::write(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2, nat_fields_mask);
  s2.pass_data(s);
}

bool tlgen::usefulService::GetUserEntityResult::read_boxed(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityResultReadBoxed(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::GetUserEntityResult::write_boxed(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const noexcept {
  if (!::tlgen::details::UsefulServiceGetUserEntityResultWriteBoxed(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::GetUserEntityResult::read_boxed(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::usefulService::GetUserEntityResult::write_boxed(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::details::UsefulServiceGetUserEntityResultReset(::tlgen::usefulService::GetUserEntityResult& item) noexcept {
  (void)item;
  item.entity_id.clear();
  item.payment_items.reset();
}

bool tlgen::details::UsefulServiceGetUserEntityResultWriteJSON(std::ostream& s, const ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.entity_id.size() != 0) {
    add_comma = true;
    s << "\"entity_id\":";
    s << "\"" << item.entity_id << "\"";
  }
  if (item.payment_items.has_value()) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"payment_items\":";
    if (!::tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedBoxedMaybeWriteJSON(s, item.payment_items, nat_fields_mask)) { return false; }
  }
  s << "}";
  return true;
}

bool tlgen::details::UsefulServiceGetUserEntityResultRead(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  if (!s.string_read(item.entity_id)) { return false; }
  if (!::tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedBoxedMaybeReadBoxed(s, item.payment_items, nat_fields_mask)) { return false; }
  return true;
}

bool tlgen::details::UsefulServiceGetUserEntityResultWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  if (!s.string_write(item.entity_id)) { return false;}
  if (!::tlgen::details::DictionaryUsefulServiceUserEntityPaymentItemBoxedBoxedMaybeWriteBoxed(s, item.payment_items, nat_fields_mask)) { return false; }
  return true;
}

bool tlgen::details::UsefulServiceGetUserEntityResultReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) {
  if (!s.nat_read_exact_tag(0xe494698a)) { return false; }
  return tlgen::details::UsefulServiceGetUserEntityResultRead(s, item, nat_fields_mask);
}

bool tlgen::details::UsefulServiceGetUserEntityResultWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::GetUserEntityResult& item, [[maybe_unused]] uint32_t nat_fields_mask) {
  if (!s.nat_write(0xe494698a)) { return false; }
  return tlgen::details::UsefulServiceGetUserEntityResultWrite(s, item, nat_fields_mask);
}

bool tlgen::details::UsefulServiceGetUserEntityResultBoxedMaybeWriteJSON(std::ostream & s, const std::optional<::tlgen::usefulService::GetUserEntityResult>& item, [[maybe_unused]] uint32_t nat_t) {
  s << "{";
  if (item) {
    s << "\"ok\":true";
    s << ",\"value\":";
    if (!::tlgen::details::UsefulServiceGetUserEntityResultWriteJSON(s, *item, nat_t)) { return false; }
  }
  s << "}";
  return true;
}
bool tlgen::details::UsefulServiceGetUserEntityResultBoxedMaybeReadBoxed(::tlgen::basictl::tl_istream & s, std::optional<::tlgen::usefulService::GetUserEntityResult>& item, [[maybe_unused]] uint32_t nat_t) {
  bool has_item = false;
  if (!s.bool_read(has_item, 0x27930a7b, 0x3f9c8ef8)) { return false; }
  if (has_item) {
    if (!item) {
      item.emplace();
    }
    if (!::tlgen::details::UsefulServiceGetUserEntityResultReadBoxed(s, *item, nat_t)) { return s.set_error_unknown_scenario(); }
    return true;
  }
  item.reset();
  return true;
}

bool tlgen::details::UsefulServiceGetUserEntityResultBoxedMaybeWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::optional<::tlgen::usefulService::GetUserEntityResult>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_write(item ? 0x3f9c8ef8 : 0x27930a7b)) { return false; }
  if (item) {
    if (!::tlgen::details::UsefulServiceGetUserEntityResultWriteBoxed(s, *item, nat_t)) { return s.set_error_unknown_scenario(); }
  }
  return true;
}

bool tlgen::usefulService::UserEntityPaymentItem::write_json(std::ostream& s, [[maybe_unused]] uint32_t nat_fields_mask)const {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemWriteJSON(s, *this, nat_fields_mask)) { return false; }
  return true;
}

bool tlgen::usefulService::UserEntityPaymentItem::read(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemRead(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::UserEntityPaymentItem::write(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemWrite(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::UserEntityPaymentItem::read(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::usefulService::UserEntityPaymentItem::write(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2, nat_fields_mask);
  s2.pass_data(s);
}

bool tlgen::usefulService::UserEntityPaymentItem::read_boxed(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemReadBoxed(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::UserEntityPaymentItem::write_boxed(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemWriteBoxed(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::UserEntityPaymentItem::read_boxed(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::usefulService::UserEntityPaymentItem::write_boxed(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::details::UsefulServiceUserEntityPaymentItemReset(::tlgen::usefulService::UserEntityPaymentItem& item) noexcept {
  (void)item;
  item.id.clear();
  item.promo.reset();
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemWriteJSON(std::ostream& s, const ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.id.size() != 0) {
    add_comma = true;
    s << "\"id\":";
    s << "\"" << item.id << "\"";
  }
  if (item.promo.has_value()) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"promo\":";
    if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoBoxedMaybeWriteJSON(s, item.promo, nat_fields_mask)) { return false; }
  }
  s << "}";
  return true;
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemRead(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  if (!s.string_read(item.id)) { return false; }
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoBoxedMaybeReadBoxed(s, item.promo, nat_fields_mask)) { return false; }
  return true;
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  if (!s.string_write(item.id)) { return false;}
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoBoxedMaybeWriteBoxed(s, item.promo, nat_fields_mask)) { return false; }
  return true;
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) {
  if (!s.nat_read_exact_tag(0x4f798680)) { return false; }
  return tlgen::details::UsefulServiceUserEntityPaymentItemRead(s, item, nat_fields_mask);
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::UserEntityPaymentItem& item, [[maybe_unused]] uint32_t nat_fields_mask) {
  if (!s.nat_write(0x4f798680)) { return false; }
  return tlgen::details::UsefulServiceUserEntityPaymentItemWrite(s, item, nat_fields_mask);
}

bool tlgen::usefulService::UserEntityPaymentItemPromo::write_json(std::ostream& s, [[maybe_unused]] uint32_t nat_fields_mask)const {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoWriteJSON(s, *this, nat_fields_mask)) { return false; }
  return true;
}

bool tlgen::usefulService::UserEntityPaymentItemPromo::read(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoRead(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::UserEntityPaymentItemPromo::write(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoWrite(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::UserEntityPaymentItemPromo::read(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::usefulService::UserEntityPaymentItemPromo::write(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2, nat_fields_mask);
  s2.pass_data(s);
}

bool tlgen::usefulService::UserEntityPaymentItemPromo::read_boxed(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoReadBoxed(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::usefulService::UserEntityPaymentItemPromo::write_boxed(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const noexcept {
  if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoWriteBoxed(s, *this, nat_fields_mask)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::usefulService::UserEntityPaymentItemPromo::read_boxed(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_fields_mask) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::usefulService::UserEntityPaymentItemPromo::write_boxed(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_fields_mask) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2, nat_fields_mask);
  s2.pass_data(s);
}

void tlgen::details::UsefulServiceUserEntityPaymentItemPromoReset(::tlgen::usefulService::UserEntityPaymentItemPromo& item) noexcept {
  (void)item;
  item.content.clear();
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoWriteJSON(std::ostream& s, const ::tlgen::usefulService::UserEntityPaymentItemPromo& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  s << "{";
  if (item.content.size() != 0) {
    s << "\"content\":";
    s << "\"" << item.content << "\"";
  }
  s << "}";
  return true;
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoRead(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::UserEntityPaymentItemPromo& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  if (!s.string_read(item.content)) { return false; }
  return true;
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::UserEntityPaymentItemPromo& item, [[maybe_unused]] uint32_t nat_fields_mask) noexcept {
  (void)s;
  (void)item;
  if (!s.string_write(item.content)) { return false;}
  return true;
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::usefulService::UserEntityPaymentItemPromo& item, [[maybe_unused]] uint32_t nat_fields_mask) {
  if (!s.nat_read_exact_tag(0x24c7ec9f)) { return false; }
  return tlgen::details::UsefulServiceUserEntityPaymentItemPromoRead(s, item, nat_fields_mask);
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::usefulService::UserEntityPaymentItemPromo& item, [[maybe_unused]] uint32_t nat_fields_mask) {
  if (!s.nat_write(0x24c7ec9f)) { return false; }
  return tlgen::details::UsefulServiceUserEntityPaymentItemPromoWrite(s, item, nat_fields_mask);
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoBoxedMaybeWriteJSON(std::ostream & s, const std::optional<::tlgen::usefulService::UserEntityPaymentItemPromo>& item, [[maybe_unused]] uint32_t nat_t) {
  s << "{";
  if (item) {
    s << "\"ok\":true";
    s << ",\"value\":";
    if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoWriteJSON(s, *item, nat_t)) { return false; }
  }
  s << "}";
  return true;
}
bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoBoxedMaybeReadBoxed(::tlgen::basictl::tl_istream & s, std::optional<::tlgen::usefulService::UserEntityPaymentItemPromo>& item, [[maybe_unused]] uint32_t nat_t) {
  bool has_item = false;
  if (!s.bool_read(has_item, 0x27930a7b, 0x3f9c8ef8)) { return false; }
  if (has_item) {
    if (!item) {
      item.emplace();
    }
    if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoReadBoxed(s, *item, nat_t)) { return s.set_error_unknown_scenario(); }
    return true;
  }
  item.reset();
  return true;
}

bool tlgen::details::UsefulServiceUserEntityPaymentItemPromoBoxedMaybeWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::optional<::tlgen::usefulService::UserEntityPaymentItemPromo>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_write(item ? 0x3f9c8ef8 : 0x27930a7b)) { return false; }
  if (item) {
    if (!::tlgen::details::UsefulServiceUserEntityPaymentItemPromoWriteBoxed(s, *item, nat_t)) { return s.set_error_unknown_scenario(); }
  }
  return true;
}

void tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedReset(std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item) noexcept {
  (void)item;
  item.clear();
}

bool tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteJSON(std::ostream& s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteJSON(s, item, nat_t)) { return false; }
  return true;
}

bool tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(::tlgen::basictl::tl_istream & s, std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(s, item, nat_t)) { return false; }
  return true;
}

bool tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(::tlgen::basictl::tl_ostream & s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(s, item, nat_t)) { return false; }
  return true;
}

bool tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedReadBoxed(::tlgen::basictl::tl_istream & s, std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_read_exact_tag(0x1cb5c415)) { return false; }
  return tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedRead(s, item, nat_t);
}

bool tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::map<std::string, ::tlgen::usefulService::UserEntityPaymentItem>& item, [[maybe_unused]] uint32_t nat_t) {
  if (!s.nat_write(0x1cb5c415)) { return false; }
  return tlgen::details::VectorDictionaryFieldUsefulServiceUserEntityPaymentItemBoxedWrite(s, item, nat_t);
}
