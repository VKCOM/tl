// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#include "__meta/headers.h"
#include "__factory/headers.h"

#include "usefulService/functions/usefulService.getUserEntity.h"
#include "__common_namespace/types/useTrue.h"
#include "__common_namespace/types/useResponse.h"
#include "__common_namespace/types/useDictUgly.h"
#include "__common_namespace/types/unionArgsUse.h"
#include "__common_namespace/types/typeD.h"
#include "__common_namespace/types/typeC.h"
#include "__common_namespace/types/typeB.h"
#include "__common_namespace/types/true.h"
#include "__common_namespace/types/testMaybe2.h"
#include "__common_namespace/types/testMaybe.h"
#include "service5/types/service5.stringOutput.h"
#include "service5Long/types/service5Long.stringOutput.h"
#include "service5Long/types/service5Long.emptyOutput.h"
#include "service5/types/service5.emptyOutput.h"
#include "__common_namespace/types/replace18.h"
#include "__common_namespace/types/replace17.h"
#include "__common_namespace/types/replace.h"
#include "__common_namespace/types/replace9.h"
#include "__common_namespace/types/replace8.h"
#include "__common_namespace/types/replace7.h"
#include "__common_namespace/types/replace6.h"
#include "__common_namespace/types/replace5.h"
#include "__common_namespace/types/replace3.h"
#include "__common_namespace/types/replace2.h"
#include "__common_namespace/types/replace15.h"
#include "__common_namespace/types/replace12.h"
#include "__common_namespace/types/replace10.h"
#include "__common_namespace/types/nativeWrappers.h"
#include "__common_namespace/types/myPlus3.h"
#include "__common_namespace/types/myZero3.h"
#include "__common_namespace/types/myPlus.h"
#include "__common_namespace/types/myZero.h"
#include "__common_namespace/types/myNat.h"
#include "__common_namespace/types/multiPoint.h"
#include "__common_namespace/types/maybeTest1.h"
#include "__common_namespace/types/hren.h"
#include "__common_namespace/types/cycleTuple.h"
#include "cd/types/cd.useCycle.h"
#include "cd/types/cd.typeD.h"
#include "cd/types/cd.typeC.h"
#include "cd/types/cd.typeB.h"
#include "cd/types/cd.topLevel3.h"
#include "__common_namespace/types/halfStr.h"
#include "ab/types/ab.useDictString.h"
#include "ab/types/ab.useCycle.h"
#include "cyc1/types/cyc1.myCycle.h"
#include "cyc2/types/cyc2.myCycle.h"
#include "cyc3/types/cyc3.myCycle.h"
#include "ab/types/ab.typeD.h"
#include "ab/types/ab.typeC.h"
#include "ab/types/ab.typeB.h"
#include "ab/types/ab.topLevel2.h"
#include "__common_namespace/types/useStr.h"
#include "ab/types/ab.topLevel1.h"
#include "__common_namespace/types/noStr.h"
#include "ab/types/ab.testMaybe.h"
#include "cd/types/cd.myType.h"
#include "cd/types/cd.response.h"
#include "ab/types/ab.myType.h"
#include "ab/types/ab.empty.h"
#include "ab/types/ab.counterChangeRequestPeriodsOne.h"
#include "ab/types/ab.counterChangeRequestPeriodsMany.h"
#include "ab/types/ab.code.h"
#include "ab/functions/ab.call9.h"
#include "ab/functions/ab.call8.h"
#include "ab/functions/ab.call7.h"
#include "__common_namespace/types/typeA.h"
#include "ab/functions/ab.call6.h"
#include "ab/functions/ab.call5.h"
#include "ab/functions/ab.call4.h"
#include "cd/types/cd.typeA.h"
#include "ab/functions/ab.call3.h"
#include "ab/functions/ab.call2.h"
#include "ab/functions/ab.call11.h"
#include "ab/functions/ab.call10.h"
#include "ab/functions/ab.call1.h"
#include "ab/types/ab.typeA.h"
#include "a/types/a.top2.h"
#include "au/types/au.nionA.h"
#include "a/types/a.uNionA.h"
#include "a/types/a.Color.h"
#include "b/types/a.ColorItems.h"
#include "a/types/a.ColorItems.h"

void tlgen::factory::set_all_factories() {

  struct tlgen_a_Blue_tl_object : public ::tlgen::meta::tl_object {
    tlgen::a::Blue object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("a.blue", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_a_Blue_tl_object>();
  });

  struct tlgen_a_Color0_tl_object : public ::tlgen::meta::tl_object {
    tlgen::a::Color0 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("a.color", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_a_Color0_tl_object>();
  });

  struct tlgen_a_Green_tl_object : public ::tlgen::meta::tl_object {
    tlgen::a::Green object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("a.green", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_a_Green_tl_object>();
  });

  struct tlgen_a_Red_tl_object : public ::tlgen::meta::tl_object {
    tlgen::a::Red object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("a.red", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_a_Red_tl_object>();
  });

  struct tlgen_a_Top2_tl_object : public ::tlgen::meta::tl_object {
    tlgen::a::Top2 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("a.top2", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_a_Top2_tl_object>();
  });

  struct tlgen_a_UNionA_tl_object : public ::tlgen::meta::tl_object {
    tlgen::a::UNionA object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("a.uNionA", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_a_UNionA_tl_object>();
  });

  struct tlgen_ab_Call1_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call1 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::ab::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call1", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call1_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call1", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call1_tl_function>();
  });

  struct tlgen_ab_Call10_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call10 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::a::Color result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call10", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call10_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call10", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call10_tl_function>();
  });

  struct tlgen_ab_Call11_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call11 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::a::Color result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call11", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call11_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call11", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call11_tl_function>();
  });

  struct tlgen_ab_Call2_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call2 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::cd::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call2", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call2_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call2", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call2_tl_function>();
  });

  struct tlgen_ab_Call3_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call3 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call3", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call3_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call3", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call3_tl_function>();
  });

  struct tlgen_ab_Call4_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call4 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::ab::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call4", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call4_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call4", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call4_tl_function>();
  });

  struct tlgen_ab_Call5_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call5 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::cd::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call5", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call5_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call5", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call5_tl_function>();
  });

  struct tlgen_ab_Call6_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call6 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call6", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call6_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call6", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call6_tl_function>();
  });

  struct tlgen_ab_Call7_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call7 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::ab::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call7", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call7_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call7", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call7_tl_function>();
  });

  struct tlgen_ab_Call8_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call8 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::cd::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call8", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call8_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call8", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call8_tl_function>();
  });

  struct tlgen_ab_Call9_tl_function : public ::tlgen::meta::tl_function {
    tlgen::ab::Call9 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      tlgen::TypeB result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("ab.call9", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Call9_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("ab.call9", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_ab_Call9_tl_function>();
  });

  struct tlgen_ab_Code_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::Code object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.code", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Code_tl_object>();
  });

  struct tlgen_ab_CounterChangeRequestPeriodsMany_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::CounterChangeRequestPeriodsMany object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.counterChangeRequestPeriodsMany", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_CounterChangeRequestPeriodsMany_tl_object>();
  });

  struct tlgen_ab_CounterChangeRequestPeriodsOne_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::CounterChangeRequestPeriodsOne object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.counterChangeRequestPeriodsOne", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_CounterChangeRequestPeriodsOne_tl_object>();
  });

  struct tlgen_ab_Empty_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::Empty object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.empty", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_Empty_tl_object>();
  });

  struct tlgen_ab_MyType_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::MyType object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.myType", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_MyType_tl_object>();
  });

  struct tlgen_ab_TestMaybe_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::TestMaybe object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.testMaybe", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_TestMaybe_tl_object>();
  });

  struct tlgen_ab_TopLevel1_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::TopLevel1 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.topLevel1", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_TopLevel1_tl_object>();
  });

  struct tlgen_ab_TopLevel2_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::TopLevel2 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.topLevel2", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_TopLevel2_tl_object>();
  });

  struct tlgen_ab_TypeA_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::TypeA object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.typeA", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_TypeA_tl_object>();
  });

  struct tlgen_ab_TypeB_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::TypeB object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.typeB", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_TypeB_tl_object>();
  });

  struct tlgen_ab_TypeC_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::TypeC object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.typeC", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_TypeC_tl_object>();
  });

  struct tlgen_ab_TypeD_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::TypeD object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.typeD", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_TypeD_tl_object>();
  });

  struct tlgen_ab_UseCycle_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::UseCycle object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.useCycle", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_UseCycle_tl_object>();
  });

  struct tlgen_ab_UseDictString_tl_object : public ::tlgen::meta::tl_object {
    tlgen::ab::UseDictString object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("ab.useDictString", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_ab_UseDictString_tl_object>();
  });

  struct tlgen_au_NionA_tl_object : public ::tlgen::meta::tl_object {
    tlgen::au::NionA object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("au.nionA", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_au_NionA_tl_object>();
  });

  struct tlgen_b_Red_tl_object : public ::tlgen::meta::tl_object {
    tlgen::b::Red object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("b.red", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_b_Red_tl_object>();
  });

  struct tlgen_cd_MyType_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::MyType object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.myType", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_MyType_tl_object>();
  });

  struct tlgen_cd_Response_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::Response object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.response", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_Response_tl_object>();
  });

  struct tlgen_cd_TopLevel3_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::TopLevel3 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.topLevel3", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_TopLevel3_tl_object>();
  });

  struct tlgen_cd_TypeA_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::TypeA object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.typeA", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_TypeA_tl_object>();
  });

  struct tlgen_cd_TypeB_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::TypeB object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.typeB", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_TypeB_tl_object>();
  });

  struct tlgen_cd_TypeC_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::TypeC object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.typeC", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_TypeC_tl_object>();
  });

  struct tlgen_cd_TypeD_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::TypeD object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.typeD", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_TypeD_tl_object>();
  });

  struct tlgen_cd_UseCycle_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cd::UseCycle object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cd.useCycle", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cd_UseCycle_tl_object>();
  });

  struct tlgen_cyc1_MyCycle_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cyc1::MyCycle object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cyc1.myCycle", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cyc1_MyCycle_tl_object>();
  });

  struct tlgen_cyc2_MyCycle_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cyc2::MyCycle object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cyc2.myCycle", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cyc2_MyCycle_tl_object>();
  });

  struct tlgen_cyc3_MyCycle_tl_object : public ::tlgen::meta::tl_object {
    tlgen::cyc3::MyCycle object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cyc3.myCycle", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_cyc3_MyCycle_tl_object>();
  });

  struct tlgen_CycleTuple_tl_object : public ::tlgen::meta::tl_object {
    tlgen::CycleTuple object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("cycleTuple", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_CycleTuple_tl_object>();
  });

  struct tlgen_HalfStr_tl_object : public ::tlgen::meta::tl_object {
    tlgen::HalfStr object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("halfStr", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_HalfStr_tl_object>();
  });

  struct tlgen_Hren_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Hren object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("hren", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Hren_tl_object>();
  });

  struct tlgen_MaybeTest1_tl_object : public ::tlgen::meta::tl_object {
    tlgen::MaybeTest1 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("maybeTest1", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_MaybeTest1_tl_object>();
  });

  struct tlgen_MultiPoint_tl_object : public ::tlgen::meta::tl_object {
    tlgen::MultiPoint object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("multiPoint", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_MultiPoint_tl_object>();
  });

  struct tlgen_MyNat_tl_object : public ::tlgen::meta::tl_object {
    tlgen::MyNat object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("myNat", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_MyNat_tl_object>();
  });

  struct tlgen_MyPlus_tl_object : public ::tlgen::meta::tl_object {
    tlgen::MyPlus object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("myPlus", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_MyPlus_tl_object>();
  });

  struct tlgen_MyPlus3_tl_object : public ::tlgen::meta::tl_object {
    tlgen::MyPlus3 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("myPlus3", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_MyPlus3_tl_object>();
  });

  struct tlgen_MyZero_tl_object : public ::tlgen::meta::tl_object {
    tlgen::MyZero object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("myZero", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_MyZero_tl_object>();
  });

  struct tlgen_MyZero3_tl_object : public ::tlgen::meta::tl_object {
    tlgen::MyZero3 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("myZero3", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_MyZero3_tl_object>();
  });

  struct tlgen_NativeWrappers_tl_object : public ::tlgen::meta::tl_object {
    tlgen::NativeWrappers object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("nativeWrappers", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_NativeWrappers_tl_object>();
  });

  struct tlgen_NoStr_tl_object : public ::tlgen::meta::tl_object {
    tlgen::NoStr object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("noStr", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_NoStr_tl_object>();
  });

  struct tlgen_Replace_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace_tl_object>();
  });

  struct tlgen_Replace10_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace10 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace10", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace10_tl_object>();
  });

  struct tlgen_Replace12_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace12 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace12", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace12_tl_object>();
  });

  struct tlgen_Replace15_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace15 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace15", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace15_tl_object>();
  });

  struct tlgen_Replace17_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace17 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace17", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace17_tl_object>();
  });

  struct tlgen_Replace18_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace18 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace18", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace18_tl_object>();
  });

  struct tlgen_Replace2_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace2 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace2", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace2_tl_object>();
  });

  struct tlgen_Replace3_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace3 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace3", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace3_tl_object>();
  });

  struct tlgen_Replace5_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace5 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace5", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace5_tl_object>();
  });

  struct tlgen_Replace6_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace6 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace6", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace6_tl_object>();
  });

  struct tlgen_Replace7_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace7 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace7", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace7_tl_object>();
  });

  struct tlgen_Replace8_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace8 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace8", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace8_tl_object>();
  });

  struct tlgen_Replace9_tl_object : public ::tlgen::meta::tl_object {
    tlgen::Replace9 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("replace9", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_Replace9_tl_object>();
  });

  struct tlgen_service5_EmptyOutput_tl_object : public ::tlgen::meta::tl_object {
    tlgen::service5::EmptyOutput object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("service5.emptyOutput", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_service5_EmptyOutput_tl_object>();
  });

  struct tlgen_service5Long_EmptyOutput_tl_object : public ::tlgen::meta::tl_object {
    tlgen::service5Long::EmptyOutput object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("service5Long.emptyOutput", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_service5Long_EmptyOutput_tl_object>();
  });

  struct tlgen_service5Long_StringOutput_tl_object : public ::tlgen::meta::tl_object {
    tlgen::service5Long::StringOutput object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("service5Long.stringOutput", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_service5Long_StringOutput_tl_object>();
  });

  struct tlgen_service5_StringOutput_tl_object : public ::tlgen::meta::tl_object {
    tlgen::service5::StringOutput object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("service5.stringOutput", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_service5_StringOutput_tl_object>();
  });

  struct tlgen_TestMaybe_tl_object : public ::tlgen::meta::tl_object {
    tlgen::TestMaybe object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("testMaybe", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_TestMaybe_tl_object>();
  });

  struct tlgen_TestMaybe2_tl_object : public ::tlgen::meta::tl_object {
    tlgen::TestMaybe2 object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("testMaybe2", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_TestMaybe2_tl_object>();
  });

  struct tlgen_True_tl_object : public ::tlgen::meta::tl_object {
    tlgen::True object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("true", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_True_tl_object>();
  });

  struct tlgen_TypeA_tl_object : public ::tlgen::meta::tl_object {
    tlgen::TypeA object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("typeA", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_TypeA_tl_object>();
  });

  struct tlgen_TypeB_tl_object : public ::tlgen::meta::tl_object {
    tlgen::TypeB object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("typeB", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_TypeB_tl_object>();
  });

  struct tlgen_TypeC_tl_object : public ::tlgen::meta::tl_object {
    tlgen::TypeC object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("typeC", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_TypeC_tl_object>();
  });

  struct tlgen_TypeD_tl_object : public ::tlgen::meta::tl_object {
    tlgen::TypeD object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("typeD", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_TypeD_tl_object>();
  });

  struct tlgen_UnionArgsUse_tl_object : public ::tlgen::meta::tl_object {
    tlgen::UnionArgsUse object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("unionArgsUse", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_UnionArgsUse_tl_object>();
  });

  struct tlgen_UseDictUgly_tl_object : public ::tlgen::meta::tl_object {
    tlgen::UseDictUgly object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("useDictUgly", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_UseDictUgly_tl_object>();
  });

  struct tlgen_UseResponse_tl_object : public ::tlgen::meta::tl_object {
    tlgen::UseResponse object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("useResponse", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_UseResponse_tl_object>();
  });

  struct tlgen_UseStr_tl_object : public ::tlgen::meta::tl_object {
    tlgen::UseStr object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("useStr", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_UseStr_tl_object>();
  });

  struct tlgen_UseTrue_tl_object : public ::tlgen::meta::tl_object {
    tlgen::UseTrue object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

  };
  ::tlgen::meta::set_create_object_by_name("useTrue", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_UseTrue_tl_object>();
  });

  struct tlgen_usefulService_GetUserEntity_tl_function : public ::tlgen::meta::tl_function {
    tlgen::usefulService::GetUserEntity object;

    bool read(::tlgen::basictl::tl_istream &s) override {return object.read(s);}
    bool write(::tlgen::basictl::tl_ostream &s) override {return object.write(s);}

    void read(::tlgen::basictl::tl_throwable_istream &s) override { object.read(s);}
    void write(::tlgen::basictl::tl_throwable_ostream &s) override { object.write(s);}
        
    bool read_boxed(::tlgen::basictl::tl_istream &s) override {return object.read_boxed(s);}
    bool write_boxed(::tlgen::basictl::tl_ostream &s) override {return object.write_boxed(s);}

    void read_boxed(::tlgen::basictl::tl_throwable_istream &s) override { object.read_boxed(s);}
    void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) override { object.write_boxed(s);}

    bool write_json(std::ostream &s) override {return object.write_json(s);}

    bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) override {
      std::optional<::tlgen::usefulService::GetUserEntityResult> result;
      bool read_result = this->object.read_result(in, result);
      if (!read_result) {
        return false;
      }
      return this->object.write_result(out, result);
    }

  };
  ::tlgen::meta::set_create_object_by_name("usefulService.getUserEntity", []() -> std::unique_ptr<::tlgen::meta::tl_object> {
    return std::make_unique<tlgen_usefulService_GetUserEntity_tl_function>();
  });

  ::tlgen::meta::set_create_function_by_name("usefulService.getUserEntity", []() -> std::unique_ptr<::tlgen::meta::tl_function> {
    return std::make_unique<tlgen_usefulService_GetUserEntity_tl_function>();
  });

}
