<?php

/**
 * AUTOGENERATED, DO NOT EDIT! If you want to modify it, check tl schema.
 *
 * This autogenerated code represents tl class for typed RPC API.
 */

namespace VK\TL\benchmarks\Types;

use VK\TL;

/**
 * @kphp-tl-class
 */
class benchmarks_vrutoytopLevelUnionBig implements TL\benchmarks\Types\benchmarks_VrutoyTopLevelUnion, TL\Readable, TL\Writeable {

  /** @var TL\benchmarks\Types\benchmarks_vruposition[] */
  public $next_positions = [];

  /**
   * @param TL\benchmarks\Types\benchmarks_vruposition[] $next_positions
   */
  public function __construct($next_positions = []) {
    $this->next_positions = $next_positions;
  }

  /**
   * @param TL\tl_input_stream $stream
   * @return bool 
   */
  public function read_boxed($stream) {
    [$magic, $success] = $stream->read_uint32();
    if (!$success || $magic != 0xef556bee) {
      return false;
    }
    return $this->read($stream);
  }

  /**
   * @param TL\tl_input_stream $stream
   * @return bool 
   */
  public function read($stream) {
    [$vector_size, $success] = $stream->read_uint32();
    if (!$success) {
      return false;
    }
    $this->next_positions = [];
    for($i28 = 0; $i28 < $vector_size; $i28++) {
      /** @var TL\benchmarks\Types\benchmarks_vruposition */
      $obj28 = new TL\benchmarks\Types\benchmarks_vruposition();
      $success = $obj28->read($stream);
      if (!$success) {
        return false;
      }
      $this->next_positions[] = $obj28;
    }
    return true;
  }

  /**
   * @param TL\tl_output_stream $stream
   * @return bool 
   */
  public function write_boxed($stream) {
    $success = $stream->write_uint32(0xef556bee);
    if (!$success) {
      return false;
    }
    return $this->write($stream);
  }

  /**
   * @param TL\tl_output_stream $stream
   * @return bool 
   */
  public function write($stream) {
    $success = $stream->write_uint32(count($this->next_positions));
    if (!$success) {
      return false;
    }
    for($i28 = 0; $i28 < count($this->next_positions); $i28++) {
      if (is_null($this->next_positions[$i28])) {
        $this->next_positions[$i28] = new TL\benchmarks\Types\benchmarks_vruposition();
      }
      $success = $this->next_positions[$i28]->write($stream);
      if (!$success) {
        return false;
      }
    }
    return true;
  }

}
