<?php

/**
 * AUTOGENERATED, DO NOT EDIT! If you want to modify it, check tl schema.
 *
 * This autogenerated code represents tl class for typed RPC API.
 */

namespace VK\TL\cases_bytes\Types;

use VK\TL;

/**
 * @kphp-tl-class
 */
class cases_bytes_testDictAny implements TL\Readable, TL\Writeable {

  /** @var TL\_common\Types\dictionaryFieldAny__float__int[] */
  public $dict = [];

  /**
   * @param TL\_common\Types\dictionaryFieldAny__float__int[] $dict
   */
  public function __construct($dict = []) {
    $this->dict = $dict;
  }

  /**
   * @param TL\tl_input_stream $stream
   * @return bool 
   */
  public function read_boxed($stream) {
    [$magic, $success] = $stream->read_uint32();
    if (!$success || $magic != 0x5a5fce57) {
      return false;
    }
    return $this->read($stream);
  }

  /**
   * @param TL\tl_input_stream $stream
   * @return bool 
   */
  public function read($stream) {
    [$vector_size, $success] = $stream->read_uint32();
    if (!$success) {
      return false;
    }
    $this->dict = [];
    for($i36 = 0; $i36 < $vector_size; $i36++) {
      $array_DictionaryFieldAny__float__int___element = new TL\_common\Types\dictionaryFieldAny__float__int();
      if ($array_DictionaryFieldAny__float__int___element == null) {
        $array_DictionaryFieldAny__float__int___element = new TL\_common\Types\dictionaryFieldAny__float__int();
      }
      $success = $array_DictionaryFieldAny__float__int___element->read($stream);
      if (!$success) {
        return false;
      }
      $this->dict[] = $array_DictionaryFieldAny__float__int___element;
    }
    return true;
  }

  /**
   * @param TL\tl_output_stream $stream
   * @return bool 
   */
  public function write_boxed($stream) {
    $success = $stream->write_uint32(0x5a5fce57);
    if (!$success) {
      return false;
    }
    return $this->write($stream);
  }

  /**
   * @param TL\tl_output_stream $stream
   * @return bool 
   */
  public function write($stream) {
    $success = $stream->write_uint32(count($this->dict));
    if (!$success) {
      return false;
    }
    for($i36 = 0; $i36 < count($this->dict); $i36++) {
      if ($this->dict[$i36] == null) {
        $this->dict[$i36] = new TL\_common\Types\dictionaryFieldAny__float__int();
      }
      $success = $this->dict[$i36]->write($stream);
      if (!$success) {
        return false;
      }
    }
    return true;
  }

}
