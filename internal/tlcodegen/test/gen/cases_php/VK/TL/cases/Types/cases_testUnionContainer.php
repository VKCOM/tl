<?php

/**
 * AUTOGENERATED, DO NOT EDIT! If you want to modify it, check tl schema.
 *
 * This autogenerated code represents tl class for typed RPC API.
 */

namespace VK\TL\cases\Types;

use VK\TL;

/**
 * @kphp-tl-class
 */
class cases_testUnionContainer implements TL\Readable, TL\Writeable {

  /** @var TL\cases\Types\cases_TestUnion */
  public $value = null;

  /**
   * @param TL\cases\Types\cases_TestUnion $value
   */
  public function __construct($value = null) {
    $this->value = $value;
  }

  /**
   * @param TL\tl_input_stream $stream
   * @return bool 
   */
  public function read_boxed($stream) {
    [$magic, $success] = $stream->read_uint32();
    if (!$success || $magic != 0x4497a381) {
      return false;
    }
    return $this->read($stream);
  }

  /**
   * @param TL\tl_input_stream $stream
   * @return bool 
   */
  public function read($stream) {
    [$tag, $success] = $stream->read_uint32();
    if (!$success) {
      return false;
    }
    switch ($tag) {
      case 0x4b4f09b1:
        $variant = new TL\cases\Types\cases_testUnion1();
        $success = $variant->read($stream);
        if (!$success) {
          return false;
        }
        $this->value = $variant;
        break;
      case 0x464f96c4:
        $variant = new TL\cases\Types\cases_testUnion2();
        $success = $variant->read($stream);
        if (!$success) {
          return false;
        }
        $this->value = $variant;
        break;
      default:
        return false;
    }
    return true;
  }

  /**
   * @param TL\tl_output_stream $stream
   * @return bool 
   */
  public function write_boxed($stream) {
    $success = $stream->write_uint32(0x4497a381);
    if (!$success) {
      return false;
    }
    return $this->write($stream);
  }

  /**
   * @param TL\tl_output_stream $stream
   * @return bool 
   */
  public function write($stream) {
    if ($this->value == null) {
      $this->value = new TL\cases\Types\cases_testUnion1();
    }
    $success = $this->value->write_boxed($stream);
    if (!$success) {
      return false;
    }
    return true;
  }

}
