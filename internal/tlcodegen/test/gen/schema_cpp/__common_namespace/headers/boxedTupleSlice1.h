// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/functions/boxedTupleSlice1.h"
#include "__common_namespace/types/int.h"

namespace tlgen { namespace details { 

void BoxedTupleSlice1Reset(::tlgen::BoxedTupleSlice1& item) noexcept;

bool BoxedTupleSlice1WriteJSON(std::ostream& s, const ::tlgen::BoxedTupleSlice1& item) noexcept;
bool BoxedTupleSlice1Read(::tlgen::basictl::tl_istream & s, ::tlgen::BoxedTupleSlice1& item) noexcept; 
bool BoxedTupleSlice1Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::BoxedTupleSlice1& item) noexcept;
bool BoxedTupleSlice1ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::BoxedTupleSlice1& item);
bool BoxedTupleSlice1WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::BoxedTupleSlice1& item);

bool BoxedTupleSlice1ReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::BoxedTupleSlice1& item, std::vector<int32_t>& result);
bool BoxedTupleSlice1WriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::BoxedTupleSlice1& item, std::vector<int32_t>& result);
    
}} // namespace tlgen::details

