// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/integer.h"

namespace tlgen { namespace details { 

void BuiltinVectorIntegerReset(std::vector<::tlgen::Integer>& item);

bool BuiltinVectorIntegerWriteJSON(std::ostream & s, const std::vector<::tlgen::Integer>& item);
bool BuiltinVectorIntegerRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::Integer>& item);
bool BuiltinVectorIntegerWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::Integer>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void IntegerReset(::tlgen::Integer& item) noexcept;

bool IntegerWriteJSON(std::ostream& s, const ::tlgen::Integer& item) noexcept;
bool IntegerRead(::tlgen::basictl::tl_istream & s, ::tlgen::Integer& item) noexcept; 
bool IntegerWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::Integer& item) noexcept;
bool IntegerReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::Integer& item);
bool IntegerWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::Integer& item);

}} // namespace tlgen::details

