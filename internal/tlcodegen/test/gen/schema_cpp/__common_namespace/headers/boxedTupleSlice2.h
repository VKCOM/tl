// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/functions/boxedTupleSlice2.h"
#include "__common_namespace/types/myBoxedTupleSlice.h"

namespace tlgen { namespace details { 

void BoxedTupleSlice2Reset(::tlgen::BoxedTupleSlice2& item) noexcept;

bool BoxedTupleSlice2WriteJSON(std::ostream& s, const ::tlgen::BoxedTupleSlice2& item) noexcept;
bool BoxedTupleSlice2Read(::tlgen::basictl::tl_istream & s, ::tlgen::BoxedTupleSlice2& item) noexcept; 
bool BoxedTupleSlice2Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::BoxedTupleSlice2& item) noexcept;
bool BoxedTupleSlice2ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::BoxedTupleSlice2& item);
bool BoxedTupleSlice2WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::BoxedTupleSlice2& item);

bool BoxedTupleSlice2ReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::BoxedTupleSlice2& item, ::tlgen::MyBoxedTupleSlice& result);
bool BoxedTupleSlice2WriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::BoxedTupleSlice2& item, ::tlgen::MyBoxedTupleSlice& result);
    
}} // namespace tlgen::details

