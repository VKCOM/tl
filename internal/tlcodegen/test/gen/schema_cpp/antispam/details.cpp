// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#include "antispam/headers/antispam.PatternFull.h"
#include "antispam/headers/antispam.patternNotFound.h"
#include "antispam/headers/antispam.patternFound.h"
#include "antispam/headers/antispam.getPattern.h"


bool tlgen::antispam::GetPattern::write_json(std::ostream& s)const {
  if (!::tlgen::details::AntispamGetPatternWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::antispam::GetPattern::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::AntispamGetPatternRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::antispam::GetPattern::write(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::AntispamGetPatternWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::antispam::GetPattern::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::antispam::GetPattern::write(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::antispam::GetPattern::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::AntispamGetPatternReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::antispam::GetPattern::write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::AntispamGetPatternWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::antispam::GetPattern::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::antispam::GetPattern::write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::AntispamGetPatternReset(::tlgen::antispam::GetPattern& item) noexcept {
  (void)item;
  item.id = 0;
}

bool tlgen::details::AntispamGetPatternWriteJSON(std::ostream& s, const ::tlgen::antispam::GetPattern& item) noexcept {
  (void)s;
  (void)item;
  s << "{";
  if (item.id != 0) {
    s << "\"id\":";
    s << item.id;
  }
  s << "}";
  return true;
}

bool tlgen::details::AntispamGetPatternRead(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::GetPattern& item) noexcept {
  (void)s;
  (void)item;
  if (!s.int_read(item.id)) { return false; }
  return true;
}

bool tlgen::details::AntispamGetPatternWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::antispam::GetPattern& item) noexcept {
  (void)s;
  (void)item;
  if (!s.int_write(item.id)) { return false;}
  return true;
}

bool tlgen::details::AntispamGetPatternReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::GetPattern& item) {
  if (!s.nat_read_exact_tag(0x3de14136)) { return false; }
  return tlgen::details::AntispamGetPatternRead(s, item);
}

bool tlgen::details::AntispamGetPatternWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::antispam::GetPattern& item) {
  if (!s.nat_write(0x3de14136)) { return false; }
  return tlgen::details::AntispamGetPatternWrite(s, item);
}

bool tlgen::details::AntispamGetPatternReadResult(::tlgen::basictl::tl_istream & s, tlgen::antispam::GetPattern& item, ::tlgen::antispam::PatternFull& result) {
  (void)s;
  (void)item;
  (void)result;
  if (!::tlgen::details::AntispamPatternFullReadBoxed(s, result)) { return s.set_error_unknown_scenario(); }
  return true;
}
bool tlgen::details::AntispamGetPatternWriteResult(::tlgen::basictl::tl_ostream & s, tlgen::antispam::GetPattern& item, ::tlgen::antispam::PatternFull& result) {
  (void)s;
  (void)item;
  (void)result;
  if (!::tlgen::details::AntispamPatternFullWriteBoxed(s, result)) { return s.set_error_unknown_scenario(); }
  return true;
}

bool tlgen::antispam::GetPattern::read_result(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::PatternFull & result) noexcept {
  bool success = tlgen::details::AntispamGetPatternReadResult(s, *this, result);
  s.sync();
  return success;
}
bool tlgen::antispam::GetPattern::write_result(::tlgen::basictl::tl_ostream & s, ::tlgen::antispam::PatternFull & result) noexcept {
  bool success = tlgen::details::AntispamGetPatternWriteResult(s, *this, result);
  s.sync();
  return success;
}

void tlgen::antispam::GetPattern::read_result(::tlgen::basictl::tl_throwable_istream & s, ::tlgen::antispam::PatternFull & result) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_result(s2, result);
  s2.pass_data(s);
}
void tlgen::antispam::GetPattern::write_result(::tlgen::basictl::tl_throwable_ostream & s, ::tlgen::antispam::PatternFull & result) {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_result(s2, result);
  s2.pass_data(s);
}

bool tlgen::antispam::PatternFound::write_json(std::ostream& s)const {
  if (!::tlgen::details::AntispamPatternFoundWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::antispam::PatternFound::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::AntispamPatternFoundRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::antispam::PatternFound::write(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::AntispamPatternFoundWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::antispam::PatternFound::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::antispam::PatternFound::write(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::antispam::PatternFound::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::AntispamPatternFoundReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::antispam::PatternFound::write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::AntispamPatternFoundWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::antispam::PatternFound::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::antispam::PatternFound::write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::AntispamPatternFoundReset(::tlgen::antispam::PatternFound& item) noexcept {
  (void)item;
  item.ip = 0;
  item.uahash = 0;
  item.flags = 0;
  item.type = 0;
  item.text.clear();
}

bool tlgen::details::AntispamPatternFoundWriteJSON(std::ostream& s, const ::tlgen::antispam::PatternFound& item) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.ip != 0) {
    add_comma = true;
    s << "\"ip\":";
    s << item.ip;
  }
  if (item.uahash != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"uahash\":";
    s << item.uahash;
  }
  if (item.flags != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"flags\":";
    s << item.flags;
  }
  if (item.type != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"type\":";
    s << item.type;
  }
  if (item.text.size() != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"text\":";
    s << "\"" << item.text << "\"";
  }
  s << "}";
  return true;
}

bool tlgen::details::AntispamPatternFoundRead(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::PatternFound& item) noexcept {
  (void)s;
  (void)item;
  if (!s.int_read(item.ip)) { return false; }
  if (!s.int_read(item.uahash)) { return false; }
  if (!s.int_read(item.flags)) { return false; }
  if (!s.int_read(item.type)) { return false; }
  if (!s.string_read(item.text)) { return false; }
  return true;
}

bool tlgen::details::AntispamPatternFoundWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::antispam::PatternFound& item) noexcept {
  (void)s;
  (void)item;
  if (!s.int_write(item.ip)) { return false;}
  if (!s.int_write(item.uahash)) { return false;}
  if (!s.int_write(item.flags)) { return false;}
  if (!s.int_write(item.type)) { return false;}
  if (!s.string_write(item.text)) { return false;}
  return true;
}

bool tlgen::details::AntispamPatternFoundReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::PatternFound& item) {
  if (!s.nat_read_exact_tag(0xa7688492)) { return false; }
  return tlgen::details::AntispamPatternFoundRead(s, item);
}

bool tlgen::details::AntispamPatternFoundWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::antispam::PatternFound& item) {
  if (!s.nat_write(0xa7688492)) { return false; }
  return tlgen::details::AntispamPatternFoundWrite(s, item);
}

static const std::string_view AntispamPatternFull_tbl_tl_name[]{"antispam.patternFound", "antispam.patternNotFound"};
static const uint32_t AntispamPatternFull_tbl_tl_tag[]{0xa7688492, 0x2c22e225};

bool tlgen::antispam::PatternFull::write_json(std::ostream & s)const {
  if (!::tlgen::details::AntispamPatternFullWriteJSON(s, *this)) { return false; }
  return true;
}
bool tlgen::antispam::PatternFull::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::AntispamPatternFullReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  return true;
}
bool tlgen::antispam::PatternFull::write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::AntispamPatternFullWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  return true;
}

void tlgen::antispam::PatternFull::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::antispam::PatternFull::write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

std::string_view tlgen::antispam::PatternFull::tl_name() const {
  return AntispamPatternFull_tbl_tl_name[value.index()];
}
uint32_t tlgen::antispam::PatternFull::tl_tag() const {
  return AntispamPatternFull_tbl_tl_tag[value.index()];
}


void tlgen::details::AntispamPatternFullReset(::tlgen::antispam::PatternFull& item) noexcept{
  item.value.emplace<0>(); // TODO - optimize, if already 0, call Reset function
}

bool tlgen::details::AntispamPatternFullWriteJSON(std::ostream & s, const ::tlgen::antispam::PatternFull& item) noexcept {
  s << "{";
  s << "\"type\":";
  s << "\"" << AntispamPatternFull_tbl_tl_name[item.value.index()] << "\"";
  switch (item.value.index()) {
  case 0:
    s << ",\"value\":";
    if (!::tlgen::details::AntispamPatternFoundWriteJSON(s, std::get<0>(item.value))) { return false; }
    break;
  }
  s << "}";
  return true;
}
bool tlgen::details::AntispamPatternFullReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::PatternFull& item) noexcept {
  uint32_t nat;
  if (!s.nat_read(nat)) { return false; }
  switch (nat) {
  case 0xa7688492:
    if (item.value.index() != 0) { item.value.emplace<0>(); }
    if (!::tlgen::details::AntispamPatternFoundRead(s, std::get<0>(item.value))) { return s.set_error_unknown_scenario(); }
    break;
  case 0x2c22e225:
    if (item.value.index() != 1) { item.value.emplace<1>(); }
    break;
  default:
    return s.set_error_union_tag();
    }
  return true;
}

bool tlgen::details::AntispamPatternFullWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::antispam::PatternFull& item) noexcept{
  if (!s.nat_write(AntispamPatternFull_tbl_tl_tag[item.value.index()])) { return false; }
  switch (item.value.index()) {
  case 0:
    if (!::tlgen::details::AntispamPatternFoundWrite(s, std::get<0>(item.value))) { return s.set_error_unknown_scenario(); }
    break;
  }
  return true;
}

bool tlgen::antispam::PatternNotFound::write_json(std::ostream& s)const {
  if (!::tlgen::details::AntispamPatternNotFoundWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::antispam::PatternNotFound::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::AntispamPatternNotFoundRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::antispam::PatternNotFound::write(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::AntispamPatternNotFoundWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::antispam::PatternNotFound::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::antispam::PatternNotFound::write(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::antispam::PatternNotFound::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::AntispamPatternNotFoundReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::antispam::PatternNotFound::write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::AntispamPatternNotFoundWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::antispam::PatternNotFound::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::antispam::PatternNotFound::write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::AntispamPatternNotFoundReset(::tlgen::antispam::PatternNotFound& item) noexcept {
  (void)item;
}

bool tlgen::details::AntispamPatternNotFoundWriteJSON(std::ostream& s, const ::tlgen::antispam::PatternNotFound& item) noexcept {
  (void)s;
  (void)item;
  s << "true";
  return true;
}

bool tlgen::details::AntispamPatternNotFoundRead(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::PatternNotFound& item) noexcept {
  (void)s;
  (void)item;
  return true;
}

bool tlgen::details::AntispamPatternNotFoundWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::antispam::PatternNotFound& item) noexcept {
  (void)s;
  (void)item;
  return true;
}

bool tlgen::details::AntispamPatternNotFoundReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::antispam::PatternNotFound& item) {
  if (!s.nat_read_exact_tag(0x2c22e225)) { return false; }
  return tlgen::details::AntispamPatternNotFoundRead(s, item);
}

bool tlgen::details::AntispamPatternNotFoundWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::antispam::PatternNotFound& item) {
  if (!s.nat_write(0x2c22e225)) { return false; }
  return tlgen::details::AntispamPatternNotFoundWrite(s, item);
}
