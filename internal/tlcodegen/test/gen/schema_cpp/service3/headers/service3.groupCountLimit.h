// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service3/types/service3.groupCountLimit.h"

namespace tlgen { namespace details { 

void BuiltinVectorService3GroupCountLimitReset(std::vector<::tlgen::service3::GroupCountLimit>& item);

bool BuiltinVectorService3GroupCountLimitWriteJSON(std::ostream & s, const std::vector<::tlgen::service3::GroupCountLimit>& item);
bool BuiltinVectorService3GroupCountLimitRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::service3::GroupCountLimit>& item);
bool BuiltinVectorService3GroupCountLimitWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::service3::GroupCountLimit>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void Service3GroupCountLimitReset(::tlgen::service3::GroupCountLimit& item) noexcept;

bool Service3GroupCountLimitWriteJSON(std::ostream& s, const ::tlgen::service3::GroupCountLimit& item) noexcept;
bool Service3GroupCountLimitRead(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GroupCountLimit& item) noexcept; 
bool Service3GroupCountLimitWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GroupCountLimit& item) noexcept;
bool Service3GroupCountLimitReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GroupCountLimit& item);
bool Service3GroupCountLimitWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GroupCountLimit& item);

}} // namespace tlgen::details

