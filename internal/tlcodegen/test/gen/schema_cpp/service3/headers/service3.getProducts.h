// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service3/functions/service3.getProducts.h"
#include "__common_namespace/types/vector.h"
#include "service3/types/service3.product.h"

namespace tlgen { namespace details { 

void Service3GetProductsReset(::tlgen::service3::GetProducts& item) noexcept;

bool Service3GetProductsWriteJSON(std::ostream& s, const ::tlgen::service3::GetProducts& item) noexcept;
bool Service3GetProductsRead(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GetProducts& item) noexcept; 
bool Service3GetProductsWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetProducts& item) noexcept;
bool Service3GetProductsReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GetProducts& item);
bool Service3GetProductsWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetProducts& item);

bool Service3GetProductsReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GetProducts& item, std::optional<std::vector<::tlgen::service3::Product>>& result);
bool Service3GetProductsWriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::service3::GetProducts& item, std::optional<std::vector<::tlgen::service3::Product>>& result);
    
}} // namespace tlgen::details

