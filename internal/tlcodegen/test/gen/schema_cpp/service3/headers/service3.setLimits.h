// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service3/functions/service3.setLimits.h"
#include "__common_namespace/types/boolStat.h"

namespace tlgen { namespace details { 

void Service3SetLimitsReset(::tlgen::service3::SetLimits& item) noexcept;

bool Service3SetLimitsWriteJSON(std::ostream& s, const ::tlgen::service3::SetLimits& item) noexcept;
bool Service3SetLimitsRead(::tlgen::basictl::tl_istream & s, ::tlgen::service3::SetLimits& item) noexcept; 
bool Service3SetLimitsWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::SetLimits& item) noexcept;
bool Service3SetLimitsReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::SetLimits& item);
bool Service3SetLimitsWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::SetLimits& item);

bool Service3SetLimitsReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::service3::SetLimits& item, ::tlgen::BoolStat& result);
bool Service3SetLimitsWriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::service3::SetLimits& item, ::tlgen::BoolStat& result);
    
}} // namespace tlgen::details

