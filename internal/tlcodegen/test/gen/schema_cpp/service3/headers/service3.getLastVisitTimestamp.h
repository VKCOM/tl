// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service3/functions/service3.getLastVisitTimestamp.h"
#include "__common_namespace/types/int.h"

namespace tlgen { namespace details { 

void Service3GetLastVisitTimestampReset(::tlgen::service3::GetLastVisitTimestamp& item) noexcept;

bool Service3GetLastVisitTimestampWriteJSON(std::ostream& s, const ::tlgen::service3::GetLastVisitTimestamp& item) noexcept;
bool Service3GetLastVisitTimestampRead(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GetLastVisitTimestamp& item) noexcept; 
bool Service3GetLastVisitTimestampWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetLastVisitTimestamp& item) noexcept;
bool Service3GetLastVisitTimestampReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GetLastVisitTimestamp& item);
bool Service3GetLastVisitTimestampWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetLastVisitTimestamp& item);

bool Service3GetLastVisitTimestampReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::service3::GetLastVisitTimestamp& item, std::optional<int32_t>& result);
bool Service3GetLastVisitTimestampWriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetLastVisitTimestamp& item, const std::optional<int32_t>& result);
    
}} // namespace tlgen::details

