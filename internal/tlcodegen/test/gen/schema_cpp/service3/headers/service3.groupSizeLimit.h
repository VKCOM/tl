// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service3/types/service3.groupSizeLimit.h"

namespace tlgen { namespace details { 

void BuiltinVectorService3GroupSizeLimitReset(std::vector<::tlgen::service3::GroupSizeLimit>& item);

bool BuiltinVectorService3GroupSizeLimitWriteJSON(std::ostream & s, const std::vector<::tlgen::service3::GroupSizeLimit>& item);
bool BuiltinVectorService3GroupSizeLimitRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::service3::GroupSizeLimit>& item);
bool BuiltinVectorService3GroupSizeLimitWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::service3::GroupSizeLimit>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void Service3GroupSizeLimitReset(::tlgen::service3::GroupSizeLimit& item) noexcept;

bool Service3GroupSizeLimitWriteJSON(std::ostream& s, const ::tlgen::service3::GroupSizeLimit& item) noexcept;
bool Service3GroupSizeLimitRead(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GroupSizeLimit& item) noexcept; 
bool Service3GroupSizeLimitWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GroupSizeLimit& item) noexcept;
bool Service3GroupSizeLimitReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GroupSizeLimit& item);
bool Service3GroupSizeLimitWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GroupSizeLimit& item);

}} // namespace tlgen::details

