// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service3/functions/service3.getScheduledProducts.h"
#include "__common_namespace/types/vector.h"
#include "service3/types/service3.product.h"

namespace tlgen { namespace details { 

void Service3GetScheduledProductsReset(::tlgen::service3::GetScheduledProducts& item) noexcept;

bool Service3GetScheduledProductsWriteJSON(std::ostream& s, const ::tlgen::service3::GetScheduledProducts& item) noexcept;
bool Service3GetScheduledProductsRead(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GetScheduledProducts& item) noexcept; 
bool Service3GetScheduledProductsWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetScheduledProducts& item) noexcept;
bool Service3GetScheduledProductsReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::GetScheduledProducts& item);
bool Service3GetScheduledProductsWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetScheduledProducts& item);

bool Service3GetScheduledProductsReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::service3::GetScheduledProducts& item, std::optional<std::vector<::tlgen::service3::Productmode<0>>>& result);
bool Service3GetScheduledProductsWriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::GetScheduledProducts& item, const std::optional<std::vector<::tlgen::service3::Productmode<0>>>& result);
    
}} // namespace tlgen::details

