// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service3/types/service3.product.h"

namespace tlgen { namespace details { 

void BuiltinVectorService3ProductReset(std::vector<::tlgen::service3::Product>& item);

bool BuiltinVectorService3ProductWriteJSON(std::ostream & s, const std::vector<::tlgen::service3::Product>& item, [[maybe_unused]] uint32_t nat_t);
bool BuiltinVectorService3ProductRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::service3::Product>& item, [[maybe_unused]] uint32_t nat_t);
bool BuiltinVectorService3ProductWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::service3::Product>& item, [[maybe_unused]] uint32_t nat_t);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void BuiltinVectorService3Product0Reset(std::vector<::tlgen::service3::Productmode<0>>& item);

bool BuiltinVectorService3Product0WriteJSON(std::ostream & s, const std::vector<::tlgen::service3::Productmode<0>>& item);
bool BuiltinVectorService3Product0Read(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::service3::Productmode<0>>& item);
bool BuiltinVectorService3Product0Write(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::service3::Productmode<0>>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void Service3ProductReset(::tlgen::service3::Product& item) noexcept;

bool Service3ProductWriteJSON(std::ostream& s, const ::tlgen::service3::Product& item, [[maybe_unused]] uint32_t nat_mode) noexcept;
bool Service3ProductRead(::tlgen::basictl::tl_istream & s, ::tlgen::service3::Product& item, [[maybe_unused]] uint32_t nat_mode) noexcept; 
bool Service3ProductWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::Product& item, [[maybe_unused]] uint32_t nat_mode) noexcept;
bool Service3ProductReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::Product& item, [[maybe_unused]] uint32_t nat_mode);
bool Service3ProductWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::Product& item, [[maybe_unused]] uint32_t nat_mode);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void Service3Product0Reset(::tlgen::service3::Productmode<0>& item) noexcept;

bool Service3Product0WriteJSON(std::ostream& s, const ::tlgen::service3::Productmode<0>& item) noexcept;
bool Service3Product0Read(::tlgen::basictl::tl_istream & s, ::tlgen::service3::Productmode<0>& item) noexcept; 
bool Service3Product0Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::Productmode<0>& item) noexcept;
bool Service3Product0ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service3::Productmode<0>& item);
bool Service3Product0WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service3::Productmode<0>& item);

}} // namespace tlgen::details

