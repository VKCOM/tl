// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "tasks/functions/tasks.getQueueSize.h"
#include "tasks/types/tasks.queueStats.h"

namespace tlgen { namespace details { 

void TasksGetQueueSizeReset(::tlgen::tasks::GetQueueSize& item) noexcept;

bool TasksGetQueueSizeWriteJSON(std::ostream& s, const ::tlgen::tasks::GetQueueSize& item) noexcept;
bool TasksGetQueueSizeRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::GetQueueSize& item) noexcept; 
bool TasksGetQueueSizeWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::GetQueueSize& item) noexcept;
bool TasksGetQueueSizeReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::GetQueueSize& item);
bool TasksGetQueueSizeWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::GetQueueSize& item);

bool TasksGetQueueSizeReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::GetQueueSize& item, ::tlgen::tasks::QueueStats& result);
bool TasksGetQueueSizeWriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::tasks::GetQueueSize& item, ::tlgen::tasks::QueueStats& result);
    
}} // namespace tlgen::details

