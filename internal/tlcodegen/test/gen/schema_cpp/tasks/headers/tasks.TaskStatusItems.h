// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "tasks/types/tasks.TaskStatusItems.h"

namespace tlgen { namespace details { 

void TasksTaskStatusInProgressReset(::tlgen::tasks::TaskStatusInProgress& item) noexcept;

bool TasksTaskStatusInProgressWriteJSON(std::ostream& s, const ::tlgen::tasks::TaskStatusInProgress& item) noexcept;
bool TasksTaskStatusInProgressRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusInProgress& item) noexcept; 
bool TasksTaskStatusInProgressWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusInProgress& item) noexcept;
bool TasksTaskStatusInProgressReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusInProgress& item);
bool TasksTaskStatusInProgressWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusInProgress& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TasksTaskStatusNotCurrentlyInEngineReset(::tlgen::tasks::TaskStatusNotCurrentlyInEngine& item) noexcept;

bool TasksTaskStatusNotCurrentlyInEngineWriteJSON(std::ostream& s, const ::tlgen::tasks::TaskStatusNotCurrentlyInEngine& item) noexcept;
bool TasksTaskStatusNotCurrentlyInEngineRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusNotCurrentlyInEngine& item) noexcept; 
bool TasksTaskStatusNotCurrentlyInEngineWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusNotCurrentlyInEngine& item) noexcept;
bool TasksTaskStatusNotCurrentlyInEngineReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusNotCurrentlyInEngine& item);
bool TasksTaskStatusNotCurrentlyInEngineWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusNotCurrentlyInEngine& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TasksTaskStatusScheduledReset(::tlgen::tasks::TaskStatusScheduled& item) noexcept;

bool TasksTaskStatusScheduledWriteJSON(std::ostream& s, const ::tlgen::tasks::TaskStatusScheduled& item) noexcept;
bool TasksTaskStatusScheduledRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusScheduled& item) noexcept; 
bool TasksTaskStatusScheduledWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusScheduled& item) noexcept;
bool TasksTaskStatusScheduledReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusScheduled& item);
bool TasksTaskStatusScheduledWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusScheduled& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TasksTaskStatusWaitingReset(::tlgen::tasks::TaskStatusWaiting& item) noexcept;

bool TasksTaskStatusWaitingWriteJSON(std::ostream& s, const ::tlgen::tasks::TaskStatusWaiting& item) noexcept;
bool TasksTaskStatusWaitingRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusWaiting& item) noexcept; 
bool TasksTaskStatusWaitingWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusWaiting& item) noexcept;
bool TasksTaskStatusWaitingReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskStatusWaiting& item);
bool TasksTaskStatusWaitingWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskStatusWaiting& item);

}} // namespace tlgen::details

