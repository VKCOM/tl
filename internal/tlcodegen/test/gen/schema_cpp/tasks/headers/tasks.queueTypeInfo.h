// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "tasks/types/tasks.queueTypeInfo.h"

namespace tlgen { namespace details { 

void BuiltinVectorTasksQueueTypeInfoReset(std::vector<::tlgen::tasks::QueueTypeInfo>& item);

bool BuiltinVectorTasksQueueTypeInfoWriteJSON(std::ostream & s, const std::vector<::tlgen::tasks::QueueTypeInfo>& item);
bool BuiltinVectorTasksQueueTypeInfoRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::tasks::QueueTypeInfo>& item);
bool BuiltinVectorTasksQueueTypeInfoWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::tasks::QueueTypeInfo>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TasksQueueTypeInfoReset(::tlgen::tasks::QueueTypeInfo& item) noexcept;

bool TasksQueueTypeInfoWriteJSON(std::ostream& s, const ::tlgen::tasks::QueueTypeInfo& item) noexcept;
bool TasksQueueTypeInfoRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::QueueTypeInfo& item) noexcept; 
bool TasksQueueTypeInfoWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::QueueTypeInfo& item) noexcept;
bool TasksQueueTypeInfoReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::QueueTypeInfo& item);
bool TasksQueueTypeInfoWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::QueueTypeInfo& item);

}} // namespace tlgen::details

