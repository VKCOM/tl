// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "tasks/functions/tasks.getTaskFromQueue.h"
#include "tasks/types/tasks.taskInfo.h"

namespace tlgen { namespace details { 

void TasksGetTaskFromQueueReset(::tlgen::tasks::GetTaskFromQueue& item) noexcept;

bool TasksGetTaskFromQueueWriteJSON(std::ostream& s, const ::tlgen::tasks::GetTaskFromQueue& item) noexcept;
bool TasksGetTaskFromQueueRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::GetTaskFromQueue& item) noexcept; 
bool TasksGetTaskFromQueueWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::GetTaskFromQueue& item) noexcept;
bool TasksGetTaskFromQueueReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::GetTaskFromQueue& item);
bool TasksGetTaskFromQueueWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::GetTaskFromQueue& item);

bool TasksGetTaskFromQueueReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::GetTaskFromQueue& item, std::optional<::tlgen::tasks::TaskInfo>& result);
bool TasksGetTaskFromQueueWriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::tasks::GetTaskFromQueue& item, std::optional<::tlgen::tasks::TaskInfo>& result);
    
}} // namespace tlgen::details

