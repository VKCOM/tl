// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "tasks/types/tasks.taskInfo.h"

namespace tlgen { namespace details { 

void TasksTaskInfoReset(::tlgen::tasks::TaskInfo& item) noexcept;

bool TasksTaskInfoWriteJSON(std::ostream& s, const ::tlgen::tasks::TaskInfo& item) noexcept;
bool TasksTaskInfoRead(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskInfo& item) noexcept; 
bool TasksTaskInfoWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskInfo& item) noexcept;
bool TasksTaskInfoReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::tasks::TaskInfo& item);
bool TasksTaskInfoWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::tasks::TaskInfo& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

bool TasksTaskInfoMaybeWriteJSON(std::ostream & s, const std::optional<::tlgen::tasks::TaskInfo>& item);

bool TasksTaskInfoMaybeReadBoxed(::tlgen::basictl::tl_istream & s, std::optional<::tlgen::tasks::TaskInfo>& item);
bool TasksTaskInfoMaybeWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::optional<::tlgen::tasks::TaskInfo>& item);


}} // namespace tlgen::details

