// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/vector.h"
#include "service1/types/service1.Value.h"
#include "__common_namespace/types/dictionaryField.h"

namespace tlgen { namespace details { 

void VectorDictionaryFieldDictionaryIntReset(std::map<std::string, std::map<std::string, int32_t>>& item) noexcept;

bool VectorDictionaryFieldDictionaryIntWriteJSON(std::ostream& s, const std::map<std::string, std::map<std::string, int32_t>>& item) noexcept;
bool VectorDictionaryFieldDictionaryIntRead(::tlgen::basictl::tl_istream & s, std::map<std::string, std::map<std::string, int32_t>>& item) noexcept; 
bool VectorDictionaryFieldDictionaryIntWrite(::tlgen::basictl::tl_ostream & s, const std::map<std::string, std::map<std::string, int32_t>>& item) noexcept;
bool VectorDictionaryFieldDictionaryIntReadBoxed(::tlgen::basictl::tl_istream & s, std::map<std::string, std::map<std::string, int32_t>>& item);
bool VectorDictionaryFieldDictionaryIntWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::map<std::string, std::map<std::string, int32_t>>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void VectorService1ValueReset(std::vector<::tlgen::service1::Value>& item) noexcept;

bool VectorService1ValueWriteJSON(std::ostream& s, const std::vector<::tlgen::service1::Value>& item) noexcept;
bool VectorService1ValueRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::service1::Value>& item) noexcept; 
bool VectorService1ValueWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::service1::Value>& item) noexcept;
bool VectorService1ValueReadBoxed(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::service1::Value>& item);
bool VectorService1ValueWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::service1::Value>& item);

}} // namespace tlgen::details

