// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service1/functions/service1.enableExpiration.h"
#include "__common_namespace/types/Bool.h"

namespace tlgen { namespace details { 

void Service1EnableExpirationReset(::tlgen::service1::EnableExpiration& item) noexcept;

bool Service1EnableExpirationWriteJSON(std::ostream& s, const ::tlgen::service1::EnableExpiration& item) noexcept;
bool Service1EnableExpirationRead(::tlgen::basictl::tl_istream & s, ::tlgen::service1::EnableExpiration& item) noexcept; 
bool Service1EnableExpirationWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::EnableExpiration& item) noexcept;
bool Service1EnableExpirationReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service1::EnableExpiration& item);
bool Service1EnableExpirationWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::EnableExpiration& item);

bool Service1EnableExpirationReadResult(::tlgen::basictl::tl_istream & s, ::tlgen::service1::EnableExpiration& item, bool& result);
bool Service1EnableExpirationWriteResult(::tlgen::basictl::tl_ostream & s, ::tlgen::service1::EnableExpiration& item, bool& result);
    
}} // namespace tlgen::details

