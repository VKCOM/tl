// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service1/functions/service1.addOrGet.h"
#include "service1/types/service1.Value.h"

namespace tlgen { namespace details { 

void Service1AddOrGetReset(::tlgen::service1::AddOrGet& item) noexcept;

bool Service1AddOrGetWriteJSON(std::ostream& s, const ::tlgen::service1::AddOrGet& item) noexcept;
bool Service1AddOrGetRead(::tlgen::basictl::tl_istream & s, ::tlgen::service1::AddOrGet& item) noexcept; 
bool Service1AddOrGetWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::AddOrGet& item) noexcept;
bool Service1AddOrGetReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service1::AddOrGet& item);
bool Service1AddOrGetWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::AddOrGet& item);

bool Service1AddOrGetReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::service1::AddOrGet& item, ::tlgen::service1::Value& result);
bool Service1AddOrGetWriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::AddOrGet& item, const ::tlgen::service1::Value& result);
    
}} // namespace tlgen::details

