// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service1/types/service1.keysStat.h"

namespace tlgen { namespace details { 

void Service1KeysStatReset(::tlgen::service1::KeysStat& item) noexcept;

bool Service1KeysStatWriteJSON(std::ostream& s, const ::tlgen::service1::KeysStat& item) noexcept;
bool Service1KeysStatRead(::tlgen::basictl::tl_istream & s, ::tlgen::service1::KeysStat& item) noexcept; 
bool Service1KeysStatWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::KeysStat& item) noexcept;
bool Service1KeysStatReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service1::KeysStat& item);
bool Service1KeysStatWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::KeysStat& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

bool Service1KeysStatMaybeWriteJSON(std::ostream & s, const std::optional<::tlgen::service1::KeysStat>& item);

bool Service1KeysStatMaybeReadBoxed(::tlgen::basictl::tl_istream & s, std::optional<::tlgen::service1::KeysStat>& item);
bool Service1KeysStatMaybeWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::optional<::tlgen::service1::KeysStat>& item);


}} // namespace tlgen::details

