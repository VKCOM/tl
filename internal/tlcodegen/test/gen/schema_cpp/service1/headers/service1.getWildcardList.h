// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service1/functions/service1.getWildcardList.h"
#include "__common_namespace/types/string.h"

namespace tlgen { namespace details { 

void Service1GetWildcardListReset(::tlgen::service1::GetWildcardList& item) noexcept;

bool Service1GetWildcardListWriteJSON(std::ostream& s, const ::tlgen::service1::GetWildcardList& item) noexcept;
bool Service1GetWildcardListRead(::tlgen::basictl::tl_istream & s, ::tlgen::service1::GetWildcardList& item) noexcept; 
bool Service1GetWildcardListWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::GetWildcardList& item) noexcept;
bool Service1GetWildcardListReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service1::GetWildcardList& item);
bool Service1GetWildcardListWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::GetWildcardList& item);

bool Service1GetWildcardListReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::service1::GetWildcardList& item, std::vector<std::string>& result);
bool Service1GetWildcardListWriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::service1::GetWildcardList& item, const std::vector<std::string>& result);
    
}} // namespace tlgen::details

