// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/tuple.h"
#include "service1/types/service1.Value.h"

namespace tlgen { namespace details { 

void TupleService1Value3Reset(std::array<::tlgen::service1::Value, 3>& item) noexcept;

bool TupleService1Value3WriteJSON(std::ostream& s, const std::array<::tlgen::service1::Value, 3>& item) noexcept;
bool TupleService1Value3Read(::tlgen::basictl::tl_istream & s, std::array<::tlgen::service1::Value, 3>& item) noexcept; 
bool TupleService1Value3Write(::tlgen::basictl::tl_ostream & s, const std::array<::tlgen::service1::Value, 3>& item) noexcept;
bool TupleService1Value3ReadBoxed(::tlgen::basictl::tl_istream & s, std::array<::tlgen::service1::Value, 3>& item);
bool TupleService1Value3WriteBoxed(::tlgen::basictl::tl_ostream & s, const std::array<::tlgen::service1::Value, 3>& item);

}} // namespace tlgen::details

