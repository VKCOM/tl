// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service6/functions/service6.multiFindWithBounds.h"
#include "service6/types/service6.findWithBoundsResult.h"
#include "__common_namespace/types/Either.h"

namespace tlgen { namespace details { 

void Service6MultiFindWithBoundsReset(::tlgen::service6::MultiFindWithBounds& item) noexcept;

bool Service6MultiFindWithBoundsWriteJSON(std::ostream& s, const ::tlgen::service6::MultiFindWithBounds& item) noexcept;
bool Service6MultiFindWithBoundsRead(::tlgen::basictl::tl_istream & s, ::tlgen::service6::MultiFindWithBounds& item) noexcept; 
bool Service6MultiFindWithBoundsWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service6::MultiFindWithBounds& item) noexcept;
bool Service6MultiFindWithBoundsReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service6::MultiFindWithBounds& item);
bool Service6MultiFindWithBoundsWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service6::MultiFindWithBounds& item);

bool Service6MultiFindWithBoundsReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::service6::MultiFindWithBounds& item, std::vector<::tlgen::Either<int32_t, std::vector<::tlgen::service6::FindWithBoundsResult>>>& result);
bool Service6MultiFindWithBoundsWriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::service6::MultiFindWithBounds& item, const std::vector<::tlgen::Either<int32_t, std::vector<::tlgen::service6::FindWithBoundsResult>>>& result);
    
}} // namespace tlgen::details

