// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service6/functions/service6.multiFind.h"
#include "service6/types/service6.findResultRow.h"
#include "service6/types/service6.error.h"
#include "__common_namespace/types/Either.h"

namespace tlgen { namespace details { 

void Service6MultiFindReset(::tlgen::service6::MultiFind& item) noexcept;

bool Service6MultiFindWriteJSON(std::ostream& s, const ::tlgen::service6::MultiFind& item) noexcept;
bool Service6MultiFindRead(::tlgen::basictl::tl_istream & s, ::tlgen::service6::MultiFind& item) noexcept; 
bool Service6MultiFindWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::service6::MultiFind& item) noexcept;
bool Service6MultiFindReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::service6::MultiFind& item);
bool Service6MultiFindWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::service6::MultiFind& item);

bool Service6MultiFindReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::service6::MultiFind& item, std::vector<::tlgen::Either<::tlgen::service6::Error, std::vector<::tlgen::service6::FindResultRow>>>& result);
bool Service6MultiFindWriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::service6::MultiFind& item, const std::vector<::tlgen::Either<::tlgen::service6::Error, std::vector<::tlgen::service6::FindResultRow>>>& result);
    
}} // namespace tlgen::details

