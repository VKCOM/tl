// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "service2/types/service2.deltaSet.h"
#include "service2/types/service2.counterSet.h"


namespace tlgen { namespace service2 { 
struct AddOrIncrMany {
  uint32_t objectIdLength = 0;
  uint32_t intCountersNum = 0;
  uint32_t floatCountersNum = 0;
  uint32_t objectsNum = 0;
  std::vector<int32_t> intCounters;
  std::vector<int32_t> floatCounters;
  std::vector<::tlgen::service2::DeltaSet> deltas;

  std::string_view tl_name() const { return "service2.addOrIncrMany"; }
  uint32_t tl_tag() const { return 0x5aa52489; }

  bool write_json(std::ostream& s) const;

  bool read(::tlgen::basictl::tl_istream & s) noexcept;
  bool write(::tlgen::basictl::tl_ostream & s) const noexcept;

  void read(::tlgen::basictl::tl_throwable_istream & s);
  void write(::tlgen::basictl::tl_throwable_ostream & s) const;

  bool read_boxed(::tlgen::basictl::tl_istream & s) noexcept;
  bool write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept;
  
  void read_boxed(::tlgen::basictl::tl_throwable_istream & s);
  void write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const;

  bool read_result(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::service2::CounterSet> & result) noexcept;
  bool write_result(::tlgen::basictl::tl_ostream & s, std::vector<::tlgen::service2::CounterSet> & result) noexcept;

  void read_result(::tlgen::basictl::tl_throwable_istream & s, std::vector<::tlgen::service2::CounterSet> & result);
  void write_result(::tlgen::basictl::tl_throwable_ostream & s, std::vector<::tlgen::service2::CounterSet> & result);

  friend std::ostream& operator<<(std::ostream& s, const AddOrIncrMany& rhs) {
    rhs.write_json(s);
    return s;
  }
};

}} // namespace tlgen::service2

