// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "cases_bytes/types/cases_bytes.TestEnumItems.h"

namespace tlgen { namespace details { 

void CasesBytesTestEnum1Reset(::tlgen::cases_bytes::TestEnum1& item) noexcept;

bool CasesBytesTestEnum1WriteJSON(std::ostream& s, const ::tlgen::cases_bytes::TestEnum1& item) noexcept;
bool CasesBytesTestEnum1Read(::tlgen::basictl::tl_istream & s, ::tlgen::cases_bytes::TestEnum1& item) noexcept; 
bool CasesBytesTestEnum1Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases_bytes::TestEnum1& item) noexcept;
bool CasesBytesTestEnum1ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::cases_bytes::TestEnum1& item);
bool CasesBytesTestEnum1WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases_bytes::TestEnum1& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void CasesBytesTestEnum2Reset(::tlgen::cases_bytes::TestEnum2& item) noexcept;

bool CasesBytesTestEnum2WriteJSON(std::ostream& s, const ::tlgen::cases_bytes::TestEnum2& item) noexcept;
bool CasesBytesTestEnum2Read(::tlgen::basictl::tl_istream & s, ::tlgen::cases_bytes::TestEnum2& item) noexcept; 
bool CasesBytesTestEnum2Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases_bytes::TestEnum2& item) noexcept;
bool CasesBytesTestEnum2ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::cases_bytes::TestEnum2& item);
bool CasesBytesTestEnum2WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases_bytes::TestEnum2& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void CasesBytesTestEnum3Reset(::tlgen::cases_bytes::TestEnum3& item) noexcept;

bool CasesBytesTestEnum3WriteJSON(std::ostream& s, const ::tlgen::cases_bytes::TestEnum3& item) noexcept;
bool CasesBytesTestEnum3Read(::tlgen::basictl::tl_istream & s, ::tlgen::cases_bytes::TestEnum3& item) noexcept; 
bool CasesBytesTestEnum3Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases_bytes::TestEnum3& item) noexcept;
bool CasesBytesTestEnum3ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::cases_bytes::TestEnum3& item);
bool CasesBytesTestEnum3WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases_bytes::TestEnum3& item);

}} // namespace tlgen::details

