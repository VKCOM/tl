// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/string.h"

namespace tlgen { namespace details { 

void BuiltinTuple4StringReset(std::array<std::string, 4>& item);

bool BuiltinTuple4StringWriteJSON(std::ostream & s, const std::array<std::string, 4>& item);
bool BuiltinTuple4StringRead(::tlgen::basictl::tl_istream & s, std::array<std::string, 4>& item);
bool BuiltinTuple4StringWrite(::tlgen::basictl::tl_ostream & s, const std::array<std::string, 4>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void BuiltinTupleStringReset(std::vector<std::string>& item);

bool BuiltinTupleStringWriteJSON(std::ostream & s, const std::vector<std::string>& item, [[maybe_unused]] uint32_t nat_n);
bool BuiltinTupleStringRead(::tlgen::basictl::tl_istream & s, std::vector<std::string>& item, [[maybe_unused]] uint32_t nat_n);
bool BuiltinTupleStringWrite(::tlgen::basictl::tl_ostream & s, const std::vector<std::string>& item, [[maybe_unused]] uint32_t nat_n);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void BuiltinVectorStringReset(std::vector<std::string>& item);

bool BuiltinVectorStringWriteJSON(std::ostream & s, const std::vector<std::string>& item);
bool BuiltinVectorStringRead(::tlgen::basictl::tl_istream & s, std::vector<std::string>& item);
bool BuiltinVectorStringWrite(::tlgen::basictl::tl_ostream & s, const std::vector<std::string>& item);

}} // namespace tlgen::details

