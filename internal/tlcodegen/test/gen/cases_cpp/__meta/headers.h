// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.

#pragma once

#include <ostream>
#include <string>
#include <functional>
#include <optional>

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"

namespace tlgen {
  namespace meta {
    struct tl_object {
      virtual bool read(::tlgen::basictl::tl_istream &s) = 0;
      virtual bool write(::tlgen::basictl::tl_ostream &s) = 0;

      virtual void read(::tlgen::basictl::tl_throwable_istream &s) = 0;
      virtual void write(::tlgen::basictl::tl_throwable_ostream &s) = 0;

      virtual bool read_boxed(::tlgen::basictl::tl_istream &s) = 0;
      virtual bool write_boxed(::tlgen::basictl::tl_ostream &s) = 0;

      virtual void read_boxed(::tlgen::basictl::tl_throwable_istream &s) = 0;
      virtual void write_boxed(::tlgen::basictl::tl_throwable_ostream &s) = 0;

      virtual bool write_json(std::ostream &s) = 0;

      virtual ~tl_object() = default;
    };

    struct tl_function : public tl_object {
      virtual bool read_write_result(::tlgen::basictl::tl_istream &in, ::tlgen::basictl::tl_ostream &out) = 0;

      virtual ~tl_function() = default;
    };

    struct tl_item {
      uint32_t tag{};
      uint32_t annotations{};
      std::string name;

      bool has_create_object = false;
      bool has_create_function = false;

      std::function<std::unique_ptr<tlgen::meta::tl_object>()> create_object;
      std::function<std::unique_ptr<tlgen::meta::tl_function>()> create_function;
    };

    std::optional<tlgen::meta::tl_item> get_item_by_name(std::string &&s);
    std::optional<tlgen::meta::tl_item> get_item_by_tag(uint32_t &&tag);

    void set_create_object_by_name(std::string &&s, std::function<std::unique_ptr<tlgen::meta::tl_object>()> &&factory);
    void set_create_function_by_name(std::string &&s, std::function<std::unique_ptr<tlgen::meta::tl_function>()> &&factory);

  }
}