// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/dictionaryAny.h"
#include "__common_namespace/types/dictionaryFieldAny.h"

namespace tlgen { namespace details { 

void DictionaryAnyDoubleIntReset(::tlgen::DictionaryAny<double, int32_t>& item) noexcept;

bool DictionaryAnyDoubleIntWriteJSON(std::ostream& s, const ::tlgen::DictionaryAny<double, int32_t>& item) noexcept;
bool DictionaryAnyDoubleIntRead(::tlgen::basictl::tl_istream & s, ::tlgen::DictionaryAny<double, int32_t>& item) noexcept; 
bool DictionaryAnyDoubleIntWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::DictionaryAny<double, int32_t>& item) noexcept;
bool DictionaryAnyDoubleIntReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::DictionaryAny<double, int32_t>& item);
bool DictionaryAnyDoubleIntWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::DictionaryAny<double, int32_t>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void DictionaryAnyIntIntReset(std::map<int32_t, int32_t>& item) noexcept;

bool DictionaryAnyIntIntWriteJSON(std::ostream& s, const std::map<int32_t, int32_t>& item) noexcept;
bool DictionaryAnyIntIntRead(::tlgen::basictl::tl_istream & s, std::map<int32_t, int32_t>& item) noexcept; 
bool DictionaryAnyIntIntWrite(::tlgen::basictl::tl_ostream & s, const std::map<int32_t, int32_t>& item) noexcept;
bool DictionaryAnyIntIntReadBoxed(::tlgen::basictl::tl_istream & s, std::map<int32_t, int32_t>& item);
bool DictionaryAnyIntIntWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::map<int32_t, int32_t>& item);

}} // namespace tlgen::details

