// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#include "benchmarks/headers/benchmarks_vector.h"
#include "benchmarks/headers/benchmarks.vrutoyTopLevelContainerWithDependency.h"
#include "benchmarks/headers/benchmarks.vrutoyTopLevelContainer.h"
#include "benchmarks/headers/benchmarks.VrutoyTopLevelUnion.h"
#include "benchmarks/headers/benchmarks.vrutoytopLevelUnionEmpty.h"
#include "benchmarks/headers/benchmarks.vrutoytopLevelUnionBig.h"
#include "benchmarks/headers/benchmarks.vruposition.h"
#include "benchmarks/headers/benchmarks.vrutoyPositions.h"
#include "__common_namespace/headers/true.h"
#include "benchmarks/headers/benchmarks.vruhash.h"


bool tlgen::benchmarks::Vruhash::write_json(std::ostream& s)const {
  if (!::tlgen::details::BenchmarksVruHashWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::benchmarks::Vruhash::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVruHashRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::Vruhash::write(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVruHashWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::Vruhash::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::Vruhash::write(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::benchmarks::Vruhash::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVruHashReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::Vruhash::write_boxed(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVruHashWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::Vruhash::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::Vruhash::write_boxed(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::BenchmarksVruHashReset(::tlgen::benchmarks::Vruhash& item) noexcept {
  (void)item;
  item.low = 0;
  item.high = 0;
}

bool tlgen::details::BenchmarksVruHashWriteJSON(std::ostream& s, const ::tlgen::benchmarks::Vruhash& item) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.low != 0) {
    add_comma = true;
    s << "\"low\":";
    s << item.low;
  }
  if (item.high != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"high\":";
    s << item.high;
  }
  s << "}";
  return true;
}

bool tlgen::details::BenchmarksVruHashRead(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::Vruhash& item) noexcept {
  (void)s;
  (void)item;
  if (!s.long_read(item.low)) { return false; }
  if (!s.long_read(item.high)) { return false; }
  return true;
}

bool tlgen::details::BenchmarksVruHashWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::Vruhash& item) noexcept {
  (void)s;
  (void)item;
  if (!s.long_write(item.low)) { return false;}
  if (!s.long_write(item.high)) { return false;}
  return true;
}

bool tlgen::details::BenchmarksVruHashReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::Vruhash& item) {
  if (!s.nat_read_exact_tag(0xd31bd0fd)) { return false; }
  return tlgen::details::BenchmarksVruHashRead(s, item);
}

bool tlgen::details::BenchmarksVruHashWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::Vruhash& item) {
  if (!s.nat_write(0xd31bd0fd)) { return false; }
  return tlgen::details::BenchmarksVruHashWrite(s, item);
}

bool tlgen::benchmarks::Vruposition::write_json(std::ostream& s)const {
  if (!::tlgen::details::BenchmarksVruPositionWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::benchmarks::Vruposition::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVruPositionRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::Vruposition::write(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVruPositionWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::Vruposition::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::Vruposition::write(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::benchmarks::Vruposition::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVruPositionReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::Vruposition::write_boxed(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVruPositionWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::Vruposition::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::Vruposition::write_boxed(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::BenchmarksVruPositionReset(::tlgen::benchmarks::Vruposition& item) noexcept {
  (void)item;
  item.fields_mask = 0;
  ::tlgen::details::TrueReset(item.commit_bit);
  ::tlgen::details::TrueReset(item.meta_block);
  ::tlgen::details::TrueReset(item.split_payload);
  ::tlgen::details::TrueReset(item.rotation_block);
  ::tlgen::details::TrueReset(item.canonical_hash);
  item.payload_offset = 0;
  item.block_time_nano = 0;
  ::tlgen::details::BenchmarksVruHashReset(item.hash);
  item.file_offset = 0;
  item.seq_number = 0;
}

bool tlgen::details::BenchmarksVruPositionWriteJSON(std::ostream& s, const ::tlgen::benchmarks::Vruposition& item) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.fields_mask != 0) {
    add_comma = true;
    s << "\"fields_mask\":";
    s << item.fields_mask;
  }
  if ((item.fields_mask & (1<<0)) != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"commit_bit\":";
    if (!::tlgen::details::TrueWriteJSON(s, item.commit_bit)) { return false; }
  }
  if ((item.fields_mask & (1<<1)) != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"meta_block\":";
    if (!::tlgen::details::TrueWriteJSON(s, item.meta_block)) { return false; }
  }
  if ((item.fields_mask & (1<<3)) != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"split_payload\":";
    if (!::tlgen::details::TrueWriteJSON(s, item.split_payload)) { return false; }
  }
  if ((item.fields_mask & (1<<5)) != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"rotation_block\":";
    if (!::tlgen::details::TrueWriteJSON(s, item.rotation_block)) { return false; }
  }
  if ((item.fields_mask & (1<<15)) != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"canonical_hash\":";
    if (!::tlgen::details::TrueWriteJSON(s, item.canonical_hash)) { return false; }
  }
  if (item.payload_offset != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"payload_offset\":";
    s << item.payload_offset;
  }
  if (item.block_time_nano != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"block_time_nano\":";
    s << item.block_time_nano;
  }
  if (add_comma) {
    s << ",";
  }
  add_comma = true;
  s << "\"hash\":";
  if (!::tlgen::details::BenchmarksVruHashWriteJSON(s, item.hash)) { return false; }
  if (item.file_offset != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"file_offset\":";
    s << item.file_offset;
  }
  if ((item.fields_mask & (1<<14)) != 0) {
    if (add_comma) {
      s << ",";
    }
    add_comma = true;
    s << "\"seq_number\":";
    s << item.seq_number;
  }
  s << "}";
  return true;
}

bool tlgen::details::BenchmarksVruPositionRead(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::Vruposition& item) noexcept {
  (void)s;
  (void)item;
  if (!s.nat_read(item.fields_mask)) { return false; }
  if ((item.fields_mask & (1<<0)) != 0) {
    if (!::tlgen::details::TrueRead(s, item.commit_bit)) { return s.set_error_unknown_scenario(); }
  } else {
      ::tlgen::details::TrueReset(item.commit_bit);
  }
  if ((item.fields_mask & (1<<1)) != 0) {
    if (!::tlgen::details::TrueRead(s, item.meta_block)) { return s.set_error_unknown_scenario(); }
  } else {
      ::tlgen::details::TrueReset(item.meta_block);
  }
  if ((item.fields_mask & (1<<3)) != 0) {
    if (!::tlgen::details::TrueRead(s, item.split_payload)) { return s.set_error_unknown_scenario(); }
  } else {
      ::tlgen::details::TrueReset(item.split_payload);
  }
  if ((item.fields_mask & (1<<5)) != 0) {
    if (!::tlgen::details::TrueRead(s, item.rotation_block)) { return s.set_error_unknown_scenario(); }
  } else {
      ::tlgen::details::TrueReset(item.rotation_block);
  }
  if ((item.fields_mask & (1<<15)) != 0) {
    if (!::tlgen::details::TrueRead(s, item.canonical_hash)) { return s.set_error_unknown_scenario(); }
  } else {
      ::tlgen::details::TrueReset(item.canonical_hash);
  }
  if (!s.long_read(item.payload_offset)) { return false; }
  if (!s.long_read(item.block_time_nano)) { return false; }
  if (!::tlgen::details::BenchmarksVruHashRead(s, item.hash)) { return s.set_error_unknown_scenario(); }
  if (!s.long_read(item.file_offset)) { return false; }
  if ((item.fields_mask & (1<<14)) != 0) {
    if (!s.long_read(item.seq_number)) { return false; }
  } else {
      item.seq_number = 0;
  }
  return true;
}

bool tlgen::details::BenchmarksVruPositionWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::Vruposition& item) noexcept {
  (void)s;
  (void)item;
  if (!s.nat_write(item.fields_mask)) { return false;}
  if ((item.fields_mask & (1<<0)) != 0) {
      if (!::tlgen::details::TrueWrite(s, item.commit_bit)) { return s.set_error_unknown_scenario(); }
  }
  if ((item.fields_mask & (1<<1)) != 0) {
      if (!::tlgen::details::TrueWrite(s, item.meta_block)) { return s.set_error_unknown_scenario(); }
  }
  if ((item.fields_mask & (1<<3)) != 0) {
      if (!::tlgen::details::TrueWrite(s, item.split_payload)) { return s.set_error_unknown_scenario(); }
  }
  if ((item.fields_mask & (1<<5)) != 0) {
      if (!::tlgen::details::TrueWrite(s, item.rotation_block)) { return s.set_error_unknown_scenario(); }
  }
  if ((item.fields_mask & (1<<15)) != 0) {
      if (!::tlgen::details::TrueWrite(s, item.canonical_hash)) { return s.set_error_unknown_scenario(); }
  }
  if (!s.long_write(item.payload_offset)) { return false;}
  if (!s.long_write(item.block_time_nano)) { return false;}
  if (!::tlgen::details::BenchmarksVruHashWrite(s, item.hash)) { return s.set_error_unknown_scenario(); }
  if (!s.long_write(item.file_offset)) { return false;}
  if ((item.fields_mask & (1<<14)) != 0) {
      if (!s.long_write(item.seq_number)) { return false;}
  }
  return true;
}

bool tlgen::details::BenchmarksVruPositionReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::Vruposition& item) {
  if (!s.nat_read_exact_tag(0x32792c04)) { return false; }
  return tlgen::details::BenchmarksVruPositionRead(s, item);
}

bool tlgen::details::BenchmarksVruPositionWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::Vruposition& item) {
  if (!s.nat_write(0x32792c04)) { return false; }
  return tlgen::details::BenchmarksVruPositionWrite(s, item);
}

bool tlgen::benchmarks::VrutoyPositions::write_json(std::ostream& s, [[maybe_unused]] uint32_t nat_n)const {
  if (!::tlgen::details::BenchmarksVrutoyPositionsWriteJSON(s, *this, nat_n)) { return false; }
  return true;
}

bool tlgen::benchmarks::VrutoyPositions::read(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_n) noexcept {
  if (!::tlgen::details::BenchmarksVrutoyPositionsRead(s, *this, nat_n)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoyPositions::write(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_n) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoyPositionsWrite(s, *this, nat_n)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoyPositions::read(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_n) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2, nat_n);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoyPositions::write(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_n) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2, nat_n);
  s2.pass_data(s);
}

bool tlgen::benchmarks::VrutoyPositions::read_boxed(::tlgen::basictl::tl_istream & s, [[maybe_unused]] uint32_t nat_n) noexcept {
  if (!::tlgen::details::BenchmarksVrutoyPositionsReadBoxed(s, *this, nat_n)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoyPositions::write_boxed(::tlgen::basictl::tl_ostream & s, [[maybe_unused]] uint32_t nat_n) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoyPositionsWriteBoxed(s, *this, nat_n)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoyPositions::read_boxed(::tlgen::basictl::tl_throwable_istream & s, [[maybe_unused]] uint32_t nat_n) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2, nat_n);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoyPositions::write_boxed(::tlgen::basictl::tl_throwable_ostream & s, [[maybe_unused]] uint32_t nat_n) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2, nat_n);
  s2.pass_data(s);
}

void tlgen::details::BenchmarksVrutoyPositionsReset(::tlgen::benchmarks::VrutoyPositions& item) noexcept {
  (void)item;
  item.next_positions.clear();
}

bool tlgen::details::BenchmarksVrutoyPositionsWriteJSON(std::ostream& s, const ::tlgen::benchmarks::VrutoyPositions& item, [[maybe_unused]] uint32_t nat_n) noexcept {
  (void)s;
  (void)item;
  s << "{";
  if ((item.next_positions.size() != 0) || (nat_n != 0)) {
    s << "\"next_positions\":";
    if (!::tlgen::details::BuiltinTupleBenchmarksVruPositionWriteJSON(s, item.next_positions, nat_n)) { return false; }
  }
  s << "}";
  return true;
}

bool tlgen::details::BenchmarksVrutoyPositionsRead(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoyPositions& item, [[maybe_unused]] uint32_t nat_n) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinTupleBenchmarksVruPositionRead(s, item.next_positions, nat_n)) { return false; }
  return true;
}

bool tlgen::details::BenchmarksVrutoyPositionsWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoyPositions& item, [[maybe_unused]] uint32_t nat_n) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinTupleBenchmarksVruPositionWrite(s, item.next_positions, nat_n)) { return false; }
  return true;
}

bool tlgen::details::BenchmarksVrutoyPositionsReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoyPositions& item, [[maybe_unused]] uint32_t nat_n) {
  if (!s.nat_read_exact_tag(0xb6003de0)) { return false; }
  return tlgen::details::BenchmarksVrutoyPositionsRead(s, item, nat_n);
}

bool tlgen::details::BenchmarksVrutoyPositionsWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoyPositions& item, [[maybe_unused]] uint32_t nat_n) {
  if (!s.nat_write(0xb6003de0)) { return false; }
  return tlgen::details::BenchmarksVrutoyPositionsWrite(s, item, nat_n);
}

bool tlgen::benchmarks::VrutoyTopLevelContainer::write_json(std::ostream& s)const {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::benchmarks::VrutoyTopLevelContainer::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoyTopLevelContainer::write(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoyTopLevelContainer::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoyTopLevelContainer::write(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::benchmarks::VrutoyTopLevelContainer::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoyTopLevelContainer::write_boxed(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoyTopLevelContainer::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoyTopLevelContainer::write_boxed(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::BenchmarksVrutoyTopLevelContainerReset(::tlgen::benchmarks::VrutoyTopLevelContainer& item) noexcept {
  (void)item;
  ::tlgen::details::BenchmarksVrutoyTopLevelUnionReset(item.value);
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWriteJSON(std::ostream& s, const ::tlgen::benchmarks::VrutoyTopLevelContainer& item) noexcept {
  (void)s;
  (void)item;
  s << "{";
  s << "\"value\":";
  if (!::tlgen::details::BenchmarksVrutoyTopLevelUnionWriteJSON(s, item.value)) { return false; }
  s << "}";
  return true;
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerRead(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoyTopLevelContainer& item) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BenchmarksVrutoyTopLevelUnionReadBoxed(s, item.value)) { return s.set_error_unknown_scenario(); }
  return true;
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoyTopLevelContainer& item) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BenchmarksVrutoyTopLevelUnionWriteBoxed(s, item.value)) { return s.set_error_unknown_scenario(); }
  return true;
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoyTopLevelContainer& item) {
  if (!s.nat_read_exact_tag(0xfb442ca5)) { return false; }
  return tlgen::details::BenchmarksVrutoyTopLevelContainerRead(s, item);
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoyTopLevelContainer& item) {
  if (!s.nat_write(0xfb442ca5)) { return false; }
  return tlgen::details::BenchmarksVrutoyTopLevelContainerWrite(s, item);
}

bool tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::write_json(std::ostream& s)const {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::write(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::write(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::write_boxed(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoyTopLevelContainerWithDependency::write_boxed(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyReset(::tlgen::benchmarks::VrutoyTopLevelContainerWithDependency& item) noexcept {
  (void)item;
  item.n = 0;
  ::tlgen::details::BenchmarksVrutoyPositionsReset(item.value);
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyWriteJSON(std::ostream& s, const ::tlgen::benchmarks::VrutoyTopLevelContainerWithDependency& item) noexcept {
  (void)s;
  (void)item;
  auto add_comma = false;
  s << "{";
  if (item.n != 0) {
    add_comma = true;
    s << "\"n\":";
    s << item.n;
  }
  if (add_comma) {
    s << ",";
  }
  add_comma = true;
  s << "\"value\":";
  if (!::tlgen::details::BenchmarksVrutoyPositionsWriteJSON(s, item.value, item.n)) { return false; }
  s << "}";
  return true;
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyRead(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoyTopLevelContainerWithDependency& item) noexcept {
  (void)s;
  (void)item;
  if (!s.nat_read(item.n)) { return false; }
  if (!::tlgen::details::BenchmarksVrutoyPositionsRead(s, item.value, item.n)) { return s.set_error_unknown_scenario(); }
  return true;
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoyTopLevelContainerWithDependency& item) noexcept {
  (void)s;
  (void)item;
  if (!s.nat_write(item.n)) { return false;}
  if (!::tlgen::details::BenchmarksVrutoyPositionsWrite(s, item.value, item.n)) { return s.set_error_unknown_scenario(); }
  return true;
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoyTopLevelContainerWithDependency& item) {
  if (!s.nat_read_exact_tag(0xc176008e)) { return false; }
  return tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyRead(s, item);
}

bool tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoyTopLevelContainerWithDependency& item) {
  if (!s.nat_write(0xc176008e)) { return false; }
  return tlgen::details::BenchmarksVrutoyTopLevelContainerWithDependencyWrite(s, item);
}

static const std::string_view BenchmarksVrutoyTopLevelUnion_tbl_tl_name[]{"benchmarks.vrutoytopLevelUnionBig", "benchmarks.vrutoytopLevelUnionEmpty"};
static const uint32_t BenchmarksVrutoyTopLevelUnion_tbl_tl_tag[]{0xef556bee, 0xce27c770};

bool tlgen::benchmarks::VrutoyTopLevelUnion::write_json(std::ostream & s)const {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelUnionWriteJSON(s, *this)) { return false; }
  return true;
}
bool tlgen::benchmarks::VrutoyTopLevelUnion::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelUnionReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  return true;
}
bool tlgen::benchmarks::VrutoyTopLevelUnion::write_boxed(::tlgen::basictl::tl_ostream & s)const noexcept {
  if (!::tlgen::details::BenchmarksVrutoyTopLevelUnionWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  return true;
}

void tlgen::benchmarks::VrutoyTopLevelUnion::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoyTopLevelUnion::write_boxed(::tlgen::basictl::tl_throwable_ostream & s)const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

std::string_view tlgen::benchmarks::VrutoyTopLevelUnion::tl_name() const {
  return BenchmarksVrutoyTopLevelUnion_tbl_tl_name[value.index()];
}
uint32_t tlgen::benchmarks::VrutoyTopLevelUnion::tl_tag() const {
  return BenchmarksVrutoyTopLevelUnion_tbl_tl_tag[value.index()];
}


void tlgen::details::BenchmarksVrutoyTopLevelUnionReset(::tlgen::benchmarks::VrutoyTopLevelUnion& item) noexcept{
  item.value.emplace<0>(); // TODO - optimize, if already 0, call Reset function
}

bool tlgen::details::BenchmarksVrutoyTopLevelUnionWriteJSON(std::ostream & s, const ::tlgen::benchmarks::VrutoyTopLevelUnion& item) noexcept {
  s << "{";
  s << "\"type\":";
  s << "\"" << BenchmarksVrutoyTopLevelUnion_tbl_tl_name[item.value.index()] << "\"";
  switch (item.value.index()) {
  case 0:
    s << ",\"value\":";
    if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigWriteJSON(s, std::get<0>(item.value))) { return false; }
    break;
  }
  s << "}";
  return true;
}
bool tlgen::details::BenchmarksVrutoyTopLevelUnionReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoyTopLevelUnion& item) noexcept {
  uint32_t nat;
  if (!s.nat_read(nat)) { return false; }
  switch (nat) {
  case 0xef556bee:
    if (item.value.index() != 0) { item.value.emplace<0>(); }
    if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigRead(s, std::get<0>(item.value))) { return s.set_error_unknown_scenario(); }
    break;
  case 0xce27c770:
    if (item.value.index() != 1) { item.value.emplace<1>(); }
    break;
  default:
    return s.set_error_union_tag();
    }
  return true;
}

bool tlgen::details::BenchmarksVrutoyTopLevelUnionWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoyTopLevelUnion& item) noexcept{
  if (!s.nat_write(BenchmarksVrutoyTopLevelUnion_tbl_tl_tag[item.value.index()])) { return false; }
  switch (item.value.index()) {
  case 0:
    if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigWrite(s, std::get<0>(item.value))) { return s.set_error_unknown_scenario(); }
    break;
  }
  return true;
}

bool tlgen::benchmarks::VrutoytopLevelUnionBig::write_json(std::ostream& s)const {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::benchmarks::VrutoytopLevelUnionBig::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoytopLevelUnionBig::write(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoytopLevelUnionBig::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoytopLevelUnionBig::write(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::benchmarks::VrutoytopLevelUnionBig::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoytopLevelUnionBig::write_boxed(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionBigWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoytopLevelUnionBig::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoytopLevelUnionBig::write_boxed(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::BenchmarksVrutoytopLevelUnionBigReset(::tlgen::benchmarks::VrutoytopLevelUnionBig& item) noexcept {
  (void)item;
  item.next_positions.clear();
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionBigWriteJSON(std::ostream& s, const ::tlgen::benchmarks::VrutoytopLevelUnionBig& item) noexcept {
  (void)s;
  (void)item;
  s << "{";
  if (item.next_positions.size() != 0) {
    s << "\"next_positions\":";
    if (!::tlgen::details::BuiltinVectorBenchmarksVruPositionWriteJSON(s, item.next_positions)) { return false; }
  }
  s << "}";
  return true;
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionBigRead(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoytopLevelUnionBig& item) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorBenchmarksVruPositionRead(s, item.next_positions)) { return false; }
  return true;
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionBigWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoytopLevelUnionBig& item) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorBenchmarksVruPositionWrite(s, item.next_positions)) { return false; }
  return true;
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionBigReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoytopLevelUnionBig& item) {
  if (!s.nat_read_exact_tag(0xef556bee)) { return false; }
  return tlgen::details::BenchmarksVrutoytopLevelUnionBigRead(s, item);
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionBigWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoytopLevelUnionBig& item) {
  if (!s.nat_write(0xef556bee)) { return false; }
  return tlgen::details::BenchmarksVrutoytopLevelUnionBigWrite(s, item);
}

bool tlgen::benchmarks::VrutoytopLevelUnionEmpty::write_json(std::ostream& s)const {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionEmptyWriteJSON(s, *this)) { return false; }
  return true;
}

bool tlgen::benchmarks::VrutoytopLevelUnionEmpty::read(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionEmptyRead(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoytopLevelUnionEmpty::write(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionEmptyWrite(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoytopLevelUnionEmpty::read(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoytopLevelUnionEmpty::write(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write(s2);
  s2.pass_data(s);
}

bool tlgen::benchmarks::VrutoytopLevelUnionEmpty::read_boxed(::tlgen::basictl::tl_istream & s) noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionEmptyReadBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

bool tlgen::benchmarks::VrutoytopLevelUnionEmpty::write_boxed(::tlgen::basictl::tl_ostream & s) const noexcept {
  if (!::tlgen::details::BenchmarksVrutoytopLevelUnionEmptyWriteBoxed(s, *this)) { return s.set_error_unknown_scenario(); }
  s.sync();
  return true;
}

void tlgen::benchmarks::VrutoytopLevelUnionEmpty::read_boxed(::tlgen::basictl::tl_throwable_istream & s) {
  ::tlgen::basictl::tl_istream s2(s);
  this->read_boxed(s2);
  s2.pass_data(s);
}

void tlgen::benchmarks::VrutoytopLevelUnionEmpty::write_boxed(::tlgen::basictl::tl_throwable_ostream & s) const {
  ::tlgen::basictl::tl_ostream s2(s);
  this->write_boxed(s2);
  s2.pass_data(s);
}

void tlgen::details::BenchmarksVrutoytopLevelUnionEmptyReset(::tlgen::benchmarks::VrutoytopLevelUnionEmpty& item) noexcept {
  (void)item;
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionEmptyWriteJSON(std::ostream& s, const ::tlgen::benchmarks::VrutoytopLevelUnionEmpty& item) noexcept {
  (void)s;
  (void)item;
  s << "true";
  return true;
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionEmptyRead(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoytopLevelUnionEmpty& item) noexcept {
  (void)s;
  (void)item;
  return true;
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionEmptyWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoytopLevelUnionEmpty& item) noexcept {
  (void)s;
  (void)item;
  return true;
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionEmptyReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::benchmarks::VrutoytopLevelUnionEmpty& item) {
  if (!s.nat_read_exact_tag(0xce27c770)) { return false; }
  return tlgen::details::BenchmarksVrutoytopLevelUnionEmptyRead(s, item);
}

bool tlgen::details::BenchmarksVrutoytopLevelUnionEmptyWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::benchmarks::VrutoytopLevelUnionEmpty& item) {
  if (!s.nat_write(0xce27c770)) { return false; }
  return tlgen::details::BenchmarksVrutoytopLevelUnionEmptyWrite(s, item);
}

void tlgen::details::BuiltinTupleBenchmarksVruPositionReset(std::vector<::tlgen::benchmarks::Vruposition>& item) {
  item.resize(0);
}

bool tlgen::details::BuiltinTupleBenchmarksVruPositionWriteJSON(std::ostream & s, const std::vector<::tlgen::benchmarks::Vruposition>& item, [[maybe_unused]] uint32_t nat_n) {
  if (item.size() != nat_n) { return false; }
  s << "[";
  size_t index = 0;
  for(const auto & el : item) {
    if (!::tlgen::details::BenchmarksVruPositionWriteJSON(s, el)) { return false; }
    if (index != item.size() - 1) {
      s << ",";
    }
    index++;
  }
  s << "]";
  return true;
}

bool tlgen::details::BuiltinTupleBenchmarksVruPositionRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::benchmarks::Vruposition>& item, [[maybe_unused]] uint32_t nat_n) {
  // TODO - check length sanity
  item.resize(nat_n);
  for(auto && el : item) {
    if (!::tlgen::details::BenchmarksVruPositionRead(s, el)) { return s.set_error_unknown_scenario(); }
  }
  return true;
}

bool tlgen::details::BuiltinTupleBenchmarksVruPositionWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::benchmarks::Vruposition>& item, [[maybe_unused]] uint32_t nat_n) {
  if (item.size() != nat_n) { return s.set_error_sequence_length(); }
  for(const auto & el : item) {
    if (!::tlgen::details::BenchmarksVruPositionWrite(s, el)) { return s.set_error_unknown_scenario(); }
  }
  return true;
}

void tlgen::details::BuiltinVectorBenchmarksVruPositionReset(std::vector<::tlgen::benchmarks::Vruposition>& item) {
  item.resize(0); // TODO - unwrap
}

bool tlgen::details::BuiltinVectorBenchmarksVruPositionWriteJSON(std::ostream & s, const std::vector<::tlgen::benchmarks::Vruposition>& item) {
  s << "[";
  size_t index = 0;
  for(const auto & el : item) {
    if (!::tlgen::details::BenchmarksVruPositionWriteJSON(s, el)) { return false; }
    if (index != item.size() - 1) {
      s << ",";
    }
    index++;
  }
  s << "]";
  return true;
}

bool tlgen::details::BuiltinVectorBenchmarksVruPositionRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::benchmarks::Vruposition>& item) {
  uint32_t len = 0;
  if (!s.nat_read(len)) { return false; }
  // TODO - check length sanity
  item.resize(len);
  for(auto && el : item) {
    if (!::tlgen::details::BenchmarksVruPositionRead(s, el)) { return s.set_error_unknown_scenario(); }
  }
  return true;
}

bool tlgen::details::BuiltinVectorBenchmarksVruPositionWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::benchmarks::Vruposition>& item) {
  if (!s.nat_write(item.size())) { return false; }
  for(const auto & el : item) {
    if (!::tlgen::details::BenchmarksVruPositionWrite(s, el)) { return s.set_error_unknown_scenario(); }
  }
  return true;
}

void tlgen::details::VectorBenchmarksVruPositionReset(std::vector<::tlgen::benchmarks::Vruposition>& item) noexcept {
  (void)item;
  item.clear();
}

bool tlgen::details::VectorBenchmarksVruPositionWriteJSON(std::ostream& s, const std::vector<::tlgen::benchmarks::Vruposition>& item) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorBenchmarksVruPositionWriteJSON(s, item)) { return false; }
  return true;
}

bool tlgen::details::VectorBenchmarksVruPositionRead(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::benchmarks::Vruposition>& item) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorBenchmarksVruPositionRead(s, item)) { return false; }
  return true;
}

bool tlgen::details::VectorBenchmarksVruPositionWrite(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::benchmarks::Vruposition>& item) noexcept {
  (void)s;
  (void)item;
  if (!::tlgen::details::BuiltinVectorBenchmarksVruPositionWrite(s, item)) { return false; }
  return true;
}

bool tlgen::details::VectorBenchmarksVruPositionReadBoxed(::tlgen::basictl::tl_istream & s, std::vector<::tlgen::benchmarks::Vruposition>& item) {
  if (!s.nat_read_exact_tag(0x1cb5c415)) { return false; }
  return tlgen::details::VectorBenchmarksVruPositionRead(s, item);
}

bool tlgen::details::VectorBenchmarksVruPositionWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::vector<::tlgen::benchmarks::Vruposition>& item) {
  if (!s.nat_write(0x1cb5c415)) { return false; }
  return tlgen::details::VectorBenchmarksVruPositionWrite(s, item);
}
