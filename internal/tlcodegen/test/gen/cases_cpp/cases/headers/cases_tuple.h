// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "__common_namespace/types/tuple.h"
#include "__common_namespace/types/pair.h"
#include "__common_namespace/types/int.h"

namespace tlgen { namespace details { 

void BuiltinTupleTupleInt2Reset(std::vector<std::array<int32_t, 2>>& item);

bool BuiltinTupleTupleInt2WriteJSON(std::ostream & s, const std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n);
bool BuiltinTupleTupleInt2Read(::tlgen::basictl::tl_istream & s, std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n);
bool BuiltinTupleTupleInt2Write(::tlgen::basictl::tl_ostream & s, const std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void BuiltinTupleTuplePairTupleIntTupleInt2Reset(std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item);

bool BuiltinTupleTuplePairTupleIntTupleInt2WriteJSON(std::ostream & s, const std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_n, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn);
bool BuiltinTupleTuplePairTupleIntTupleInt2Read(::tlgen::basictl::tl_istream & s, std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_n, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn);
bool BuiltinTupleTuplePairTupleIntTupleInt2Write(::tlgen::basictl::tl_ostream & s, const std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_n, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TupleIntReset(std::vector<int32_t>& item) noexcept;

bool TupleIntWriteJSON(std::ostream& s, const std::vector<int32_t>& item, [[maybe_unused]] uint32_t nat_n) noexcept;
bool TupleIntRead(::tlgen::basictl::tl_istream & s, std::vector<int32_t>& item, [[maybe_unused]] uint32_t nat_n) noexcept; 
bool TupleIntWrite(::tlgen::basictl::tl_ostream & s, const std::vector<int32_t>& item, [[maybe_unused]] uint32_t nat_n) noexcept;
bool TupleIntReadBoxed(::tlgen::basictl::tl_istream & s, std::vector<int32_t>& item, [[maybe_unused]] uint32_t nat_n);
bool TupleIntWriteBoxed(::tlgen::basictl::tl_ostream & s, const std::vector<int32_t>& item, [[maybe_unused]] uint32_t nat_n);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TupleInt2Reset(std::array<int32_t, 2>& item) noexcept;

bool TupleInt2WriteJSON(std::ostream& s, const std::array<int32_t, 2>& item) noexcept;
bool TupleInt2Read(::tlgen::basictl::tl_istream & s, std::array<int32_t, 2>& item) noexcept; 
bool TupleInt2Write(::tlgen::basictl::tl_ostream & s, const std::array<int32_t, 2>& item) noexcept;
bool TupleInt2ReadBoxed(::tlgen::basictl::tl_istream & s, std::array<int32_t, 2>& item);
bool TupleInt2WriteBoxed(::tlgen::basictl::tl_ostream & s, const std::array<int32_t, 2>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TupleInt4Reset(std::array<int32_t, 4>& item) noexcept;

bool TupleInt4WriteJSON(std::ostream& s, const std::array<int32_t, 4>& item) noexcept;
bool TupleInt4Read(::tlgen::basictl::tl_istream & s, std::array<int32_t, 4>& item) noexcept; 
bool TupleInt4Write(::tlgen::basictl::tl_ostream & s, const std::array<int32_t, 4>& item) noexcept;
bool TupleInt4ReadBoxed(::tlgen::basictl::tl_istream & s, std::array<int32_t, 4>& item);
bool TupleInt4WriteBoxed(::tlgen::basictl::tl_ostream & s, const std::array<int32_t, 4>& item);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TuplePairTupleIntTupleInt2Reset(std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>& item) noexcept;

bool TuplePairTupleIntTupleInt2WriteJSON(std::ostream& s, const std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>& item, [[maybe_unused]] uint32_t nat_tXn, [[maybe_unused]] uint32_t nat_tYn) noexcept;
bool TuplePairTupleIntTupleInt2Read(::tlgen::basictl::tl_istream & s, std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>& item, [[maybe_unused]] uint32_t nat_tXn, [[maybe_unused]] uint32_t nat_tYn) noexcept; 
bool TuplePairTupleIntTupleInt2Write(::tlgen::basictl::tl_ostream & s, const std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>& item, [[maybe_unused]] uint32_t nat_tXn, [[maybe_unused]] uint32_t nat_tYn) noexcept;
bool TuplePairTupleIntTupleInt2ReadBoxed(::tlgen::basictl::tl_istream & s, std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>& item, [[maybe_unused]] uint32_t nat_tXn, [[maybe_unused]] uint32_t nat_tYn);
bool TuplePairTupleIntTupleInt2WriteBoxed(::tlgen::basictl::tl_ostream & s, const std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>& item, [[maybe_unused]] uint32_t nat_tXn, [[maybe_unused]] uint32_t nat_tYn);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TupleTupleInt2Reset(std::vector<std::array<int32_t, 2>>& item) noexcept;

bool TupleTupleInt2WriteJSON(std::ostream& s, const std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n) noexcept;
bool TupleTupleInt2Read(::tlgen::basictl::tl_istream & s, std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n) noexcept; 
bool TupleTupleInt2Write(::tlgen::basictl::tl_ostream & s, const std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n) noexcept;
bool TupleTupleInt2ReadBoxed(::tlgen::basictl::tl_istream & s, std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n);
bool TupleTupleInt2WriteBoxed(::tlgen::basictl::tl_ostream & s, const std::vector<std::array<int32_t, 2>>& item, [[maybe_unused]] uint32_t nat_n);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void TupleTuplePairTupleIntTupleInt2Reset(std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item) noexcept;

bool TupleTuplePairTupleIntTupleInt2WriteJSON(std::ostream& s, const std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn, [[maybe_unused]] uint32_t nat_n) noexcept;
bool TupleTuplePairTupleIntTupleInt2Read(::tlgen::basictl::tl_istream & s, std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn, [[maybe_unused]] uint32_t nat_n) noexcept; 
bool TupleTuplePairTupleIntTupleInt2Write(::tlgen::basictl::tl_ostream & s, const std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn, [[maybe_unused]] uint32_t nat_n) noexcept;
bool TupleTuplePairTupleIntTupleInt2ReadBoxed(::tlgen::basictl::tl_istream & s, std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn, [[maybe_unused]] uint32_t nat_n);
bool TupleTuplePairTupleIntTupleInt2WriteBoxed(::tlgen::basictl::tl_ostream & s, const std::vector<std::array<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>, 2>>& item, [[maybe_unused]] uint32_t nat_ttXn, [[maybe_unused]] uint32_t nat_ttYn, [[maybe_unused]] uint32_t nat_n);

}} // namespace tlgen::details

