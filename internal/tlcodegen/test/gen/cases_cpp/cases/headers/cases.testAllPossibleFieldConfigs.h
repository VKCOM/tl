// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "cases/types/cases.testAllPossibleFieldConfigs.h"

namespace tlgen { namespace details { 

void CasesTestAllPossibleFieldConfigsReset(::tlgen::cases::TestAllPossibleFieldConfigs& item) noexcept;

bool CasesTestAllPossibleFieldConfigsWriteJSON(std::ostream& s, const ::tlgen::cases::TestAllPossibleFieldConfigs& item, [[maybe_unused]] uint32_t nat_outer) noexcept;
bool CasesTestAllPossibleFieldConfigsRead(::tlgen::basictl::tl_istream & s, ::tlgen::cases::TestAllPossibleFieldConfigs& item, [[maybe_unused]] uint32_t nat_outer) noexcept; 
bool CasesTestAllPossibleFieldConfigsWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases::TestAllPossibleFieldConfigs& item, [[maybe_unused]] uint32_t nat_outer) noexcept;
bool CasesTestAllPossibleFieldConfigsReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::cases::TestAllPossibleFieldConfigs& item, [[maybe_unused]] uint32_t nat_outer);
bool CasesTestAllPossibleFieldConfigsWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases::TestAllPossibleFieldConfigs& item, [[maybe_unused]] uint32_t nat_outer);

}} // namespace tlgen::details

