// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "cases/types/cases.inplace1.h"
#include "__common_namespace/types/pair.h"
#include "__common_namespace/types/int.h"

namespace tlgen { namespace details { 

void CasesInplace1IntReset(::tlgen::cases::Inplace1<int32_t>& item) noexcept;

bool CasesInplace1IntWriteJSON(std::ostream& s, const ::tlgen::cases::Inplace1<int32_t>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3) noexcept;
bool CasesInplace1IntRead(::tlgen::basictl::tl_istream & s, ::tlgen::cases::Inplace1<int32_t>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3) noexcept; 
bool CasesInplace1IntWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases::Inplace1<int32_t>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3) noexcept;
bool CasesInplace1IntReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::cases::Inplace1<int32_t>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3);
bool CasesInplace1IntWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases::Inplace1<int32_t>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3);

}} // namespace tlgen::details

namespace tlgen { namespace details { 

void CasesInplace1PairTupleIntTupleIntReset(::tlgen::cases::Inplace1<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>>& item) noexcept;

bool CasesInplace1PairTupleIntTupleIntWriteJSON(std::ostream& s, const ::tlgen::cases::Inplace1<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3, [[maybe_unused]] uint32_t nat_XXn, [[maybe_unused]] uint32_t nat_XYn) noexcept;
bool CasesInplace1PairTupleIntTupleIntRead(::tlgen::basictl::tl_istream & s, ::tlgen::cases::Inplace1<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3, [[maybe_unused]] uint32_t nat_XXn, [[maybe_unused]] uint32_t nat_XYn) noexcept; 
bool CasesInplace1PairTupleIntTupleIntWrite(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases::Inplace1<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3, [[maybe_unused]] uint32_t nat_XXn, [[maybe_unused]] uint32_t nat_XYn) noexcept;
bool CasesInplace1PairTupleIntTupleIntReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::cases::Inplace1<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3, [[maybe_unused]] uint32_t nat_XXn, [[maybe_unused]] uint32_t nat_XYn);
bool CasesInplace1PairTupleIntTupleIntWriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::cases::Inplace1<::tlgen::Pair<std::vector<int32_t>, std::vector<int32_t>>>& item, [[maybe_unused]] uint32_t nat_a1, [[maybe_unused]] uint32_t nat_a2, [[maybe_unused]] uint32_t nat_a3, [[maybe_unused]] uint32_t nat_XXn, [[maybe_unused]] uint32_t nat_XYn);

}} // namespace tlgen::details

