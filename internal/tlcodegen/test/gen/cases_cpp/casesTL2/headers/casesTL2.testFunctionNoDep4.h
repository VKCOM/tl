// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "casesTL2/functions/casesTL2.testFunctionNoDep4.h"
#include "__common_namespace/types/Bool.h"

namespace tlgen { namespace details { 

void CasesTL2TestFunctionNoDep4Reset(::tlgen::casesTL2::TestFunctionNoDep4& item) noexcept;

bool CasesTL2TestFunctionNoDep4WriteJSON(std::ostream& s, const ::tlgen::casesTL2::TestFunctionNoDep4& item) noexcept;
bool CasesTL2TestFunctionNoDep4Read(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionNoDep4& item) noexcept; 
bool CasesTL2TestFunctionNoDep4Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep4& item) noexcept;
bool CasesTL2TestFunctionNoDep4ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionNoDep4& item);
bool CasesTL2TestFunctionNoDep4WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep4& item);

bool CasesTL2TestFunctionNoDep4ReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::casesTL2::TestFunctionNoDep4& item, bool& result);
bool CasesTL2TestFunctionNoDep4WriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep4& item, const bool& result);
    
}} // namespace tlgen::details

