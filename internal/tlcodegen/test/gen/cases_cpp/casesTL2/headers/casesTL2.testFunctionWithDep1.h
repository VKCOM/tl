// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "casesTL2/functions/casesTL2.testFunctionWithDep1.h"
#include "__common_namespace/types/int.h"

namespace tlgen { namespace details { 

void CasesTL2TestFunctionWithDep1Reset(::tlgen::casesTL2::TestFunctionWithDep1& item) noexcept;

bool CasesTL2TestFunctionWithDep1WriteJSON(std::ostream& s, const ::tlgen::casesTL2::TestFunctionWithDep1& item) noexcept;
bool CasesTL2TestFunctionWithDep1Read(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionWithDep1& item) noexcept; 
bool CasesTL2TestFunctionWithDep1Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionWithDep1& item) noexcept;
bool CasesTL2TestFunctionWithDep1ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionWithDep1& item);
bool CasesTL2TestFunctionWithDep1WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionWithDep1& item);

bool CasesTL2TestFunctionWithDep1ReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::casesTL2::TestFunctionWithDep1& item, std::vector<int32_t>& result);
bool CasesTL2TestFunctionWithDep1WriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionWithDep1& item, const std::vector<int32_t>& result);
    
}} // namespace tlgen::details

