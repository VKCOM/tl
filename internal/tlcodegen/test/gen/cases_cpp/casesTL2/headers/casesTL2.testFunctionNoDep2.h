// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "casesTL2/functions/casesTL2.testFunctionNoDep2.h"
#include "__common_namespace/types/true.h"

namespace tlgen { namespace details { 

void CasesTL2TestFunctionNoDep2Reset(::tlgen::casesTL2::TestFunctionNoDep2& item) noexcept;

bool CasesTL2TestFunctionNoDep2WriteJSON(std::ostream& s, const ::tlgen::casesTL2::TestFunctionNoDep2& item) noexcept;
bool CasesTL2TestFunctionNoDep2Read(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionNoDep2& item) noexcept; 
bool CasesTL2TestFunctionNoDep2Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep2& item) noexcept;
bool CasesTL2TestFunctionNoDep2ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionNoDep2& item);
bool CasesTL2TestFunctionNoDep2WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep2& item);

bool CasesTL2TestFunctionNoDep2ReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::casesTL2::TestFunctionNoDep2& item, ::tlgen::True& result);
bool CasesTL2TestFunctionNoDep2WriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep2& item, const ::tlgen::True& result);
    
}} // namespace tlgen::details

