// Code generated by vktl/cmd/tlgen2; DO NOT EDIT.
#pragma once

#include "basictl/io_streams.h"
#include "basictl/io_throwable_streams.h"
#include "casesTL2/functions/casesTL2.testFunctionNoDep3.h"
#include "__common_namespace/types/int.h"

namespace tlgen { namespace details { 

void CasesTL2TestFunctionNoDep3Reset(::tlgen::casesTL2::TestFunctionNoDep3& item) noexcept;

bool CasesTL2TestFunctionNoDep3WriteJSON(std::ostream& s, const ::tlgen::casesTL2::TestFunctionNoDep3& item) noexcept;
bool CasesTL2TestFunctionNoDep3Read(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionNoDep3& item) noexcept; 
bool CasesTL2TestFunctionNoDep3Write(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep3& item) noexcept;
bool CasesTL2TestFunctionNoDep3ReadBoxed(::tlgen::basictl::tl_istream & s, ::tlgen::casesTL2::TestFunctionNoDep3& item);
bool CasesTL2TestFunctionNoDep3WriteBoxed(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep3& item);

bool CasesTL2TestFunctionNoDep3ReadResult(::tlgen::basictl::tl_istream & s, const ::tlgen::casesTL2::TestFunctionNoDep3& item, std::vector<int32_t>& result);
bool CasesTL2TestFunctionNoDep3WriteResult(::tlgen::basictl::tl_ostream & s, const ::tlgen::casesTL2::TestFunctionNoDep3& item, const std::vector<int32_t>& result);
    
}} // namespace tlgen::details

